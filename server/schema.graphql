type CategoriesCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
}

type Categories {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  createdByUser: User!
  updatedByUser: User!
  _count: CategoriesCount!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SeasonsCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
}

type Seasons {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  createdByUser: User!
  updatedByUser: User!
  _count: SeasonsCount!
}

type FoodFormsCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
}

type FoodForms {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  createdByUser: User!
  updatedByUser: User!
  _count: FoodFormsCount!
}

type UserMeal {
  id: Int!
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  user: User!
  meal: Meal!
  mealBoardPlan: MealBoardPlan!
  weeklyMealGroup: WeeklyMealGroup!
  createdByUser: User!
  updatedByUser: User!
}

type MealBoardPlanCount {
  WeeklyMealGroup: Int!
  UserMeal: Int!
}

type MealBoardPlan {
  id: Int!
  name: String!
  color: String
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  WeeklyMealGroup: [WeeklyMealGroup!]
  UserMeal: [UserMeal!]
  createdByUser: User!
  updatedByUser: User!
  _count: MealBoardPlanCount!
}

type WeeklyMealGroupCount {
  userMeal: Int!
}

type WeeklyMealGroup {
  id: Int!
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay!
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  mealBoardPlan: MealBoardPlan!
  mondayMeal: Meal
  tuesdayMeal: Meal
  wednesdayMeal: Meal
  thursdayMeal: Meal
  fridayMeal: Meal
  saturdayMeal: Meal
  sundayMeal: Meal
  userMeal: [UserMeal!]
  createdByUser: User!
  updatedByUser: User!
  _count: WeeklyMealGroupCount!
}

enum TimeOfDay {
  Any
  Morning
  Forenoon
  Noon
  Afternoon
  Evening
  Night
}

type MealRecipe {
  id: Int!
  mealId: Int!
  recipeId: Int!
  note: String
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  meal: Meal!
  recipe: Recipe!
  createdByUser: User!
  updatedByUser: User!
}

type MealCount {
  allergens: Int!
  additives: Int!
  properties: Int!
  categories: Int!
  seasons: Int!
  foodForms: Int!
  mondayMealGroups: Int!
  tuesdayMealGroups: Int!
  wednesdayMealGroups: Int!
  thursdayMealGroups: Int!
  fridayMealGroups: Int!
  saturdayMealGroups: Int!
  sundayMealGroups: Int!
  mealRecipe: Int!
  userMeal: Int!
}

type Meal {
  id: Int!
  name: String!
  description: String
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  allergens: [Allergens!]
  additives: [Additives!]
  properties: [Properties!]
  categories: [Categories!]
  seasons: [Seasons!]
  foodForms: [FoodForms!]
  mondayMealGroups: [WeeklyMealGroup!]
  tuesdayMealGroups: [WeeklyMealGroup!]
  wednesdayMealGroups: [WeeklyMealGroup!]
  thursdayMealGroups: [WeeklyMealGroup!]
  fridayMealGroups: [WeeklyMealGroup!]
  saturdayMealGroups: [WeeklyMealGroup!]
  sundayMealGroups: [WeeklyMealGroup!]
  mealRecipe: [MealRecipe!]
  userMeal: [UserMeal!]
  createdByUser: User!
  updatedByUser: User!
  _count: MealCount!
}

type PropertiesCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
}

type Properties {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  createdByUser: User!
  updatedByUser: User!
  _count: PropertiesCount!
}

type KitchensCount {
  ingredients: Int!
  recipes: Int!
}

type Kitchens {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  createdByUser: User!
  updatedByUser: User!
  _count: KitchensCount!
}

type RecipeIngredient {
  id: Int!
  recipeId: Int!
  ingredientId: Int!
  amount: Decimal!
  unit: Unit!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  recipe: Recipe!
  ingredient: Ingredient!
  createdByUser: User!
  updatedByUser: User!
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

enum Unit {
  G
  L
  ML
  KG
}

type RecipeCount {
  allergens: Int!
  additives: Int!
  properties: Int!
  categories: Int!
  seasons: Int!
  foodForms: Int!
  kitchens: Int!
  recipeIngredient: Int!
  mealRecipe: Int!
}

type Recipe {
  id: Int!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  allergens: [Allergens!]
  additives: [Additives!]
  properties: [Properties!]
  categories: [Categories!]
  seasons: [Seasons!]
  foodForms: [FoodForms!]
  kitchens: [Kitchens!]
  recipeIngredient: [RecipeIngredient!]
  mealRecipe: [MealRecipe!]
  createdByUser: User!
  updatedByUser: User!
  _count: RecipeCount!
}

type AdditivesCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
}

type Additives {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  createdByUser: User!
  updatedByUser: User!
  _count: AdditivesCount!
}

type IngredientCount {
  allergens: Int!
  additives: Int!
  properties: Int!
  categories: Int!
  seasons: Int!
  foodForms: Int!
  kitchens: Int!
  recipeIngredient: Int!
}

type Ingredient {
  id: Int!
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal!
  energyKj: Decimal!
  breadUnits: Decimal!
  carbohydrates: Decimal!
  sugars: Decimal!
  salt: Decimal!
  fats: Decimal!
  saturatedFats: Decimal!
  unsaturatedFats: Decimal!
  protein: Decimal!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  allergens: [Allergens!]
  additives: [Additives!]
  properties: [Properties!]
  categories: [Categories!]
  seasons: [Seasons!]
  foodForms: [FoodForms!]
  kitchens: [Kitchens!]
  recipeIngredient: [RecipeIngredient!]
  createdByUser: User!
  updatedByUser: User!
  _count: IngredientCount!
}

type AllergensCount {
  ingredients: Int!
  recipes: Int!
  meals: Int!
  users: Int!
}

type Allergens {
  id: Int!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  ingredients: [Ingredient!]
  recipes: [Recipe!]
  meals: [Meal!]
  users: [User!]
  createdByUser: User!
  updatedByUser: User!
  _count: AllergensCount!
}

type Token {
  id: Int!
  token: String!
  expiresIn: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  createdByUser: User!
  updatedByUser: User!
}

type UserRole {
  id: Int!
  userId: Int!
  name: UserRoleName!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  createdByUser: User!
  updatedByUser: User!
  user: User!
}

enum UserRoleName {
  ADMIN
  MOD
  USER
  GUEST
}

type Settings {
  id: Int!
  maxEditOrderDays: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  createdByUser: User!
  updatedByUser: User!
}

type UserMealLocation {
  id: Int!
  userId: Int!
  timeOfDay: TimeOfDay!
  name: MealLocation!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  createdByUser: User!
  updatedByUser: User!
  user: User!
}

enum MealLocation {
  InRoom
  CommunalDining
  OutdoorPatio
  TherapyGarden
  SpecialDietary
  StaffCafeteria
  VisitorCafe
  RehabilitationGym
  GroupActivityRoom
  QuietRoom
  NutritionCenter
  Poolside
  FamilyDining
  HealingGarden
  OnTheGo
}

type UserCount {
  allergens: Int!
  createdToken: Int!
  updatedToken: Int!
  createdUser: Int!
  updatedUser: Int!
  createdUserRoles: Int!
  updatedUserRoles: Int!
  createdUserMeals: Int!
  updatedUserMeals: Int!
  createdSettings: Int!
  updatedSettings: Int!
  createdIngredients: Int!
  updatedIngredients: Int!
  createdRecipes: Int!
  updatedRecipes: Int!
  createdRecipeIngredients: Int!
  updatedRecipeIngredients: Int!
  createdMeals: Int!
  updatedMeals: Int!
  createdMealRecipes: Int!
  updatedMealRecipes: Int!
  createdWeeklyMealGroups: Int!
  updatedWeeklyMealGroups: Int!
  createdMealBoardPlans: Int!
  updatedMealBoardPlans: Int!
  createdAllergens: Int!
  updatedAllergens: Int!
  createdAdditives: Int!
  updatedAdditives: Int!
  createdProperties: Int!
  updatedProperties: Int!
  createdCategories: Int!
  updatedCategories: Int!
  createdSeasons: Int!
  updatedSeasons: Int!
  createdFoodForms: Int!
  updatedFoodForms: Int!
  createdKitchens: Int!
  updatedKitchens: Int!
  createdUserMealLocations: Int!
  updatedUserMealLocations: Int!
  userRole: Int!
  userMeal: Int!
  UserMealLocation: Int!
}

type User {
  id: Int!
  image: String
  username: String!
  email: String!
  lastOnline: DateTime!
  status: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int
  updatedBy: Int
  allergens: [Allergens!]
  createdByUser: User
  updatedByUser: User
  createdToken: [Token!]
  updatedToken: [Token!]
  createdUser: [User!]
  updatedUser: [User!]
  createdUserRoles: [UserRole!]
  updatedUserRoles: [UserRole!]
  createdUserMeals: [UserMeal!]
  updatedUserMeals: [UserMeal!]
  createdSettings: [Settings!]
  updatedSettings: [Settings!]
  createdIngredients: [Ingredient!]
  updatedIngredients: [Ingredient!]
  createdRecipes: [Recipe!]
  updatedRecipes: [Recipe!]
  createdRecipeIngredients: [RecipeIngredient!]
  updatedRecipeIngredients: [RecipeIngredient!]
  createdMeals: [Meal!]
  updatedMeals: [Meal!]
  createdMealRecipes: [MealRecipe!]
  updatedMealRecipes: [MealRecipe!]
  createdWeeklyMealGroups: [WeeklyMealGroup!]
  updatedWeeklyMealGroups: [WeeklyMealGroup!]
  createdMealBoardPlans: [MealBoardPlan!]
  updatedMealBoardPlans: [MealBoardPlan!]
  createdAllergens: [Allergens!]
  updatedAllergens: [Allergens!]
  createdAdditives: [Additives!]
  updatedAdditives: [Additives!]
  createdProperties: [Properties!]
  updatedProperties: [Properties!]
  createdCategories: [Categories!]
  updatedCategories: [Categories!]
  createdSeasons: [Seasons!]
  updatedSeasons: [Seasons!]
  createdFoodForms: [FoodForms!]
  updatedFoodForms: [FoodForms!]
  createdKitchens: [Kitchens!]
  updatedKitchens: [Kitchens!]
  createdUserMealLocations: [UserMealLocation!]
  updatedUserMealLocations: [UserMealLocation!]
  userRole: [UserRole!]
  userMeal: [UserMeal!]
  UserMealLocation: [UserMealLocation!]
  _count: UserCount!
}

type SettingsUserOutput {
  maxEditOrderDays: Int!
}

type UserMealCountAggregate {
  id: Int!
  date: Int!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
  createdAt: Int!
  updatedAt: Int!
  createdBy: Int!
  updatedBy: Int!
  _all: Int!
}

type UserMealAvgAggregate {
  id: Float
  mealBoardPlanId: Float
  userId: Float
  mealId: Float
  weeklyMealGroupId: Float
  createdBy: Float
  updatedBy: Float
}

type UserMealSumAggregate {
  id: Int
  mealBoardPlanId: Int
  userId: Int
  mealId: Int
  weeklyMealGroupId: Int
  createdBy: Int
  updatedBy: Int
}

type UserMealMinAggregate {
  id: Int
  date: DateTime
  mealBoardPlanId: Int
  userId: Int
  mealId: Int
  weeklyMealGroupId: Int
  createdAt: DateTime
  updatedAt: DateTime
  createdBy: Int
  updatedBy: Int
}

type UserMealMaxAggregate {
  id: Int
  date: DateTime
  mealBoardPlanId: Int
  userId: Int
  mealId: Int
  weeklyMealGroupId: Int
  createdAt: DateTime
  updatedAt: DateTime
  createdBy: Int
  updatedBy: Int
}

type UserMealGroupBy {
  id: Int!
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: Int!
  updatedBy: Int!
  _count: UserMealCountAggregate
  _avg: UserMealAvgAggregate
  _sum: UserMealSumAggregate
  _min: UserMealMinAggregate
  _max: UserMealMaxAggregate
}

type Query {
  me: User
  getAllUsersAdmin(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]
  getUserAdmin(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): User
  getAllUserMealsUser(where: UserMealWhereInput, orderBy: [UserMealOrderByWithRelationInput!], cursor: UserMealWhereUniqueInput, take: Int, skip: Int, distinct: [UserMealScalarFieldEnum!]): [UserMeal!]
  getUserMealUser(where: UserMealWhereInput, orderBy: [UserMealOrderByWithRelationInput!], cursor: UserMealWhereUniqueInput, take: Int, skip: Int, distinct: [UserMealScalarFieldEnum!]): UserMeal
  getUserMealsGroupedAdmin(where: UserMealWhereInput, orderBy: [UserMealOrderByWithAggregationInput!], by: [UserMealScalarFieldEnum!]!, having: UserMealScalarWhereWithAggregatesInput, take: Int, skip: Int, _count: UserMealCountAggregateInput, _avg: UserMealAvgAggregateInput, _sum: UserMealSumAggregateInput, _min: UserMealMinAggregateInput, _max: UserMealMaxAggregateInput): [UserMealGroupBy!]
  getAllUserMealsAdmin(where: UserMealWhereInput, orderBy: [UserMealOrderByWithRelationInput!], cursor: UserMealWhereUniqueInput, take: Int, skip: Int, distinct: [UserMealScalarFieldEnum!]): [UserMeal!]
  getAllUserMealLocationsUser(where: UserMealLocationWhereInput, orderBy: [UserMealLocationOrderByWithRelationInput!], cursor: UserMealLocationWhereUniqueInput, take: Int, skip: Int, distinct: [UserMealLocationScalarFieldEnum!]): [UserMealLocation!]
  getUserMealLocationUser(where: UserMealLocationWhereInput, orderBy: [UserMealLocationOrderByWithRelationInput!], cursor: UserMealLocationWhereUniqueInput, take: Int, skip: Int, distinct: [UserMealLocationScalarFieldEnum!]): UserMealLocation
  getAllIngredientsAdmin(where: IngredientWhereInput, orderBy: [IngredientOrderByWithRelationInput!], cursor: IngredientWhereUniqueInput, take: Int, skip: Int, distinct: [IngredientScalarFieldEnum!]): [Ingredient!]
  getIngredientAdmin(where: IngredientWhereInput, orderBy: [IngredientOrderByWithRelationInput!], cursor: IngredientWhereUniqueInput, take: Int, skip: Int, distinct: [IngredientScalarFieldEnum!]): Ingredient
  getAllMealBoardPlansAdmin(where: MealBoardPlanWhereInput, orderBy: [MealBoardPlanOrderByWithRelationInput!], cursor: MealBoardPlanWhereUniqueInput, take: Int, skip: Int, distinct: [MealBoardPlanScalarFieldEnum!]): [MealBoardPlan!]
  getMealBoardPlanAdmin(where: MealBoardPlanWhereInput, orderBy: [MealBoardPlanOrderByWithRelationInput!], cursor: MealBoardPlanWhereUniqueInput, take: Int, skip: Int, distinct: [MealBoardPlanScalarFieldEnum!]): MealBoardPlan
  getAllMealBoardPlansUser(where: MealBoardPlanWhereInput, orderBy: [MealBoardPlanOrderByWithRelationInput!], cursor: MealBoardPlanWhereUniqueInput, take: Int, skip: Int, distinct: [MealBoardPlanScalarFieldEnum!]): [MealBoardPlan!]
  getAllMealsAdmin(where: MealWhereInput, orderBy: [MealOrderByWithRelationInput!], cursor: MealWhereUniqueInput, take: Int, skip: Int, distinct: [MealScalarFieldEnum!]): [Meal!]
  getMealAdmin(where: MealWhereInput, orderBy: [MealOrderByWithRelationInput!], cursor: MealWhereUniqueInput, take: Int, skip: Int, distinct: [MealScalarFieldEnum!]): Meal
  getAllMealsUser(where: MealWhereInput, orderBy: [MealOrderByWithRelationInput!], cursor: MealWhereUniqueInput, take: Int, skip: Int, distinct: [MealScalarFieldEnum!]): [Meal!]
  getAllWeeklyMealGroupsAdmin(where: WeeklyMealGroupWhereInput, orderBy: [WeeklyMealGroupOrderByWithRelationInput!], cursor: WeeklyMealGroupWhereUniqueInput, take: Int, skip: Int, distinct: [WeeklyMealGroupScalarFieldEnum!]): [WeeklyMealGroup!]
  getWeeklyMealGroupAdmin(where: WeeklyMealGroupWhereInput, orderBy: [WeeklyMealGroupOrderByWithRelationInput!], cursor: WeeklyMealGroupWhereUniqueInput, take: Int, skip: Int, distinct: [WeeklyMealGroupScalarFieldEnum!]): WeeklyMealGroup
  getAllWeeklyMealGroupsUser(where: WeeklyMealGroupWhereInput, orderBy: [WeeklyMealGroupOrderByWithRelationInput!], cursor: WeeklyMealGroupWhereUniqueInput, take: Int, skip: Int, distinct: [WeeklyMealGroupScalarFieldEnum!]): [WeeklyMealGroup!]
  getAllSettingsAdmin(where: SettingsWhereInput, orderBy: [SettingsOrderByWithRelationInput!], cursor: SettingsWhereUniqueInput, take: Int, skip: Int, distinct: [SettingsScalarFieldEnum!]): [Settings!]
  getSettingsAdmin(where: SettingsWhereInput, orderBy: [SettingsOrderByWithRelationInput!], cursor: SettingsWhereUniqueInput, take: Int, skip: Int, distinct: [SettingsScalarFieldEnum!]): Settings
  getSettingsUser: SettingsUserOutput
  getAllRecipesAdmin(where: RecipeWhereInput, orderBy: [RecipeOrderByWithRelationInput!], cursor: RecipeWhereUniqueInput, take: Int, skip: Int, distinct: [RecipeScalarFieldEnum!]): [Recipe!]
  getRecipeAdmin(where: RecipeWhereInput, orderBy: [RecipeOrderByWithRelationInput!], cursor: RecipeWhereUniqueInput, take: Int, skip: Int, distinct: [RecipeScalarFieldEnum!]): Recipe
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IntFilter
  image: StringNullableFilter
  username: StringFilter
  email: StringFilter
  lastOnline: DateTimeFilter
  status: BoolFilter
  allergens: AllergensListRelationFilter
  createdToken: TokenListRelationFilter
  updatedToken: TokenListRelationFilter
  createdUser: UserListRelationFilter
  updatedUser: UserListRelationFilter
  createdUserRoles: UserRoleListRelationFilter
  updatedUserRoles: UserRoleListRelationFilter
  createdUserMeals: UserMealListRelationFilter
  updatedUserMeals: UserMealListRelationFilter
  createdSettings: SettingsListRelationFilter
  updatedSettings: SettingsListRelationFilter
  createdIngredients: IngredientListRelationFilter
  updatedIngredients: IngredientListRelationFilter
  createdRecipes: RecipeListRelationFilter
  updatedRecipes: RecipeListRelationFilter
  createdRecipeIngredients: RecipeIngredientListRelationFilter
  updatedRecipeIngredients: RecipeIngredientListRelationFilter
  createdMeals: MealListRelationFilter
  updatedMeals: MealListRelationFilter
  createdMealRecipes: MealRecipeListRelationFilter
  updatedMealRecipes: MealRecipeListRelationFilter
  createdWeeklyMealGroups: WeeklyMealGroupListRelationFilter
  updatedWeeklyMealGroups: WeeklyMealGroupListRelationFilter
  createdMealBoardPlans: MealBoardPlanListRelationFilter
  updatedMealBoardPlans: MealBoardPlanListRelationFilter
  createdAllergens: AllergensListRelationFilter
  updatedAllergens: AllergensListRelationFilter
  createdAdditives: AdditivesListRelationFilter
  updatedAdditives: AdditivesListRelationFilter
  createdProperties: PropertiesListRelationFilter
  updatedProperties: PropertiesListRelationFilter
  createdCategories: CategoriesListRelationFilter
  updatedCategories: CategoriesListRelationFilter
  createdSeasons: SeasonsListRelationFilter
  updatedSeasons: SeasonsListRelationFilter
  createdFoodForms: FoodFormsListRelationFilter
  updatedFoodForms: FoodFormsListRelationFilter
  createdKitchens: KitchensListRelationFilter
  updatedKitchens: KitchensListRelationFilter
  createdUserMealLocations: UserMealLocationListRelationFilter
  updatedUserMealLocations: UserMealLocationListRelationFilter
  userRole: UserRoleListRelationFilter
  userMeal: UserMealListRelationFilter
  UserMealLocation: UserMealLocationListRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input AllergensListRelationFilter {
  every: AllergensWhereInput
  some: AllergensWhereInput
  none: AllergensWhereInput
}

input AllergensWhereInput {
  AND: [AllergensWhereInput!]
  OR: [AllergensWhereInput!]
  NOT: [AllergensWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
  users: UserListRelationFilter
}

input IngredientListRelationFilter {
  every: IngredientWhereInput
  some: IngredientWhereInput
  none: IngredientWhereInput
}

input IngredientWhereInput {
  AND: [IngredientWhereInput!]
  OR: [IngredientWhereInput!]
  NOT: [IngredientWhereInput!]
  id: IntFilter
  name: StringFilter
  blsIdentifier: StringFilter
  energyKcal: DecimalFilter
  energyKj: DecimalFilter
  breadUnits: DecimalFilter
  carbohydrates: DecimalFilter
  sugars: DecimalFilter
  salt: DecimalFilter
  fats: DecimalFilter
  saturatedFats: DecimalFilter
  unsaturatedFats: DecimalFilter
  protein: DecimalFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  kitchens: KitchensListRelationFilter
  recipeIngredient: RecipeIngredientListRelationFilter
}

input DecimalFilter {
  equals: Decimal
  in: [Decimal!]
  notIn: [Decimal!]
  lt: Decimal
  lte: Decimal
  gt: Decimal
  gte: Decimal
  not: NestedDecimalFilter
}

input NestedDecimalFilter {
  equals: Decimal
  in: [Decimal!]
  notIn: [Decimal!]
  lt: Decimal
  lte: Decimal
  gt: Decimal
  gte: Decimal
  not: NestedDecimalFilter
}

input AdditivesListRelationFilter {
  every: AdditivesWhereInput
  some: AdditivesWhereInput
  none: AdditivesWhereInput
}

input AdditivesWhereInput {
  AND: [AdditivesWhereInput!]
  OR: [AdditivesWhereInput!]
  NOT: [AdditivesWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input RecipeListRelationFilter {
  every: RecipeWhereInput
  some: RecipeWhereInput
  none: RecipeWhereInput
}

input RecipeWhereInput {
  AND: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  NOT: [RecipeWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  kitchens: KitchensListRelationFilter
  recipeIngredient: RecipeIngredientListRelationFilter
  mealRecipe: MealRecipeListRelationFilter
}

input PropertiesListRelationFilter {
  every: PropertiesWhereInput
  some: PropertiesWhereInput
  none: PropertiesWhereInput
}

input PropertiesWhereInput {
  AND: [PropertiesWhereInput!]
  OR: [PropertiesWhereInput!]
  NOT: [PropertiesWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input MealListRelationFilter {
  every: MealWhereInput
  some: MealWhereInput
  none: MealWhereInput
}

input MealWhereInput {
  AND: [MealWhereInput!]
  OR: [MealWhereInput!]
  NOT: [MealWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  mondayMealGroups: WeeklyMealGroupListRelationFilter
  tuesdayMealGroups: WeeklyMealGroupListRelationFilter
  wednesdayMealGroups: WeeklyMealGroupListRelationFilter
  thursdayMealGroups: WeeklyMealGroupListRelationFilter
  fridayMealGroups: WeeklyMealGroupListRelationFilter
  saturdayMealGroups: WeeklyMealGroupListRelationFilter
  sundayMealGroups: WeeklyMealGroupListRelationFilter
  mealRecipe: MealRecipeListRelationFilter
  userMeal: UserMealListRelationFilter
}

input CategoriesListRelationFilter {
  every: CategoriesWhereInput
  some: CategoriesWhereInput
  none: CategoriesWhereInput
}

input CategoriesWhereInput {
  AND: [CategoriesWhereInput!]
  OR: [CategoriesWhereInput!]
  NOT: [CategoriesWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input SeasonsListRelationFilter {
  every: SeasonsWhereInput
  some: SeasonsWhereInput
  none: SeasonsWhereInput
}

input SeasonsWhereInput {
  AND: [SeasonsWhereInput!]
  OR: [SeasonsWhereInput!]
  NOT: [SeasonsWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input FoodFormsListRelationFilter {
  every: FoodFormsWhereInput
  some: FoodFormsWhereInput
  none: FoodFormsWhereInput
}

input FoodFormsWhereInput {
  AND: [FoodFormsWhereInput!]
  OR: [FoodFormsWhereInput!]
  NOT: [FoodFormsWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input WeeklyMealGroupListRelationFilter {
  every: WeeklyMealGroupWhereInput
  some: WeeklyMealGroupWhereInput
  none: WeeklyMealGroupWhereInput
}

input WeeklyMealGroupWhereInput {
  AND: [WeeklyMealGroupWhereInput!]
  OR: [WeeklyMealGroupWhereInput!]
  NOT: [WeeklyMealGroupWhereInput!]
  id: IntFilter
  name: StringFilter
  color: StringNullableFilter
  description: StringNullableFilter
  timeOfDay: EnumTimeOfDayFilter
  year: IntFilter
  weekOfYear: IntFilter
  orderIndex: IntFilter
  mealBoardPlanId: IntFilter
  mondayMealId: IntNullableFilter
  tuesdayMealId: IntNullableFilter
  wednesdayMealId: IntNullableFilter
  thursdayMealId: IntNullableFilter
  fridayMealId: IntNullableFilter
  saturdayMealId: IntNullableFilter
  sundayMealId: IntNullableFilter
  mealBoardPlan: MealBoardPlanRelationFilter
  mondayMeal: MealNullableRelationFilter
  tuesdayMeal: MealNullableRelationFilter
  wednesdayMeal: MealNullableRelationFilter
  thursdayMeal: MealNullableRelationFilter
  fridayMeal: MealNullableRelationFilter
  saturdayMeal: MealNullableRelationFilter
  sundayMeal: MealNullableRelationFilter
  userMeal: UserMealListRelationFilter
}

input EnumTimeOfDayFilter {
  equals: TimeOfDay
  in: [TimeOfDay!]
  notIn: [TimeOfDay!]
  not: NestedEnumTimeOfDayFilter
}

input NestedEnumTimeOfDayFilter {
  equals: TimeOfDay
  in: [TimeOfDay!]
  notIn: [TimeOfDay!]
  not: NestedEnumTimeOfDayFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input NestedIntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntNullableFilter
}

input MealBoardPlanRelationFilter {
  is: MealBoardPlanWhereInput
  isNot: MealBoardPlanWhereInput
}

input MealBoardPlanWhereInput {
  AND: [MealBoardPlanWhereInput!]
  OR: [MealBoardPlanWhereInput!]
  NOT: [MealBoardPlanWhereInput!]
  id: IntFilter
  name: StringFilter
  color: StringNullableFilter
  WeeklyMealGroup: WeeklyMealGroupListRelationFilter
  UserMeal: UserMealListRelationFilter
}

input UserMealListRelationFilter {
  every: UserMealWhereInput
  some: UserMealWhereInput
  none: UserMealWhereInput
}

input UserMealWhereInput {
  AND: [UserMealWhereInput!]
  OR: [UserMealWhereInput!]
  NOT: [UserMealWhereInput!]
  id: IntFilter
  date: DateTimeFilter
  mealBoardPlanId: IntFilter
  userId: IntFilter
  mealId: IntFilter
  weeklyMealGroupId: IntFilter
  user: UserRelationFilter
  meal: MealRelationFilter
  mealBoardPlan: MealBoardPlanRelationFilter
  weeklyMealGroup: WeeklyMealGroupRelationFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input MealRelationFilter {
  is: MealWhereInput
  isNot: MealWhereInput
}

input WeeklyMealGroupRelationFilter {
  is: WeeklyMealGroupWhereInput
  isNot: WeeklyMealGroupWhereInput
}

input MealNullableRelationFilter {
  is: MealWhereInput
  isNot: MealWhereInput
}

input MealRecipeListRelationFilter {
  every: MealRecipeWhereInput
  some: MealRecipeWhereInput
  none: MealRecipeWhereInput
}

input MealRecipeWhereInput {
  AND: [MealRecipeWhereInput!]
  OR: [MealRecipeWhereInput!]
  NOT: [MealRecipeWhereInput!]
  id: IntFilter
  mealId: IntFilter
  recipeId: IntFilter
  note: StringNullableFilter
  meal: MealRelationFilter
  recipe: RecipeRelationFilter
}

input RecipeRelationFilter {
  is: RecipeWhereInput
  isNot: RecipeWhereInput
}

input KitchensListRelationFilter {
  every: KitchensWhereInput
  some: KitchensWhereInput
  none: KitchensWhereInput
}

input KitchensWhereInput {
  AND: [KitchensWhereInput!]
  OR: [KitchensWhereInput!]
  NOT: [KitchensWhereInput!]
  id: IntFilter
  name: StringFilter
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
}

input RecipeIngredientListRelationFilter {
  every: RecipeIngredientWhereInput
  some: RecipeIngredientWhereInput
  none: RecipeIngredientWhereInput
}

input RecipeIngredientWhereInput {
  AND: [RecipeIngredientWhereInput!]
  OR: [RecipeIngredientWhereInput!]
  NOT: [RecipeIngredientWhereInput!]
  id: IntFilter
  recipeId: IntFilter
  ingredientId: IntFilter
  amount: DecimalFilter
  unit: EnumUnitFilter
  recipe: RecipeRelationFilter
  ingredient: IngredientRelationFilter
}

input EnumUnitFilter {
  equals: Unit
  in: [Unit!]
  notIn: [Unit!]
  not: NestedEnumUnitFilter
}

input NestedEnumUnitFilter {
  equals: Unit
  in: [Unit!]
  notIn: [Unit!]
  not: NestedEnumUnitFilter
}

input IngredientRelationFilter {
  is: IngredientWhereInput
  isNot: IngredientWhereInput
}

input UserListRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input TokenListRelationFilter {
  every: TokenWhereInput
  some: TokenWhereInput
  none: TokenWhereInput
}

input TokenWhereInput {
  AND: [TokenWhereInput!]
  OR: [TokenWhereInput!]
  NOT: [TokenWhereInput!]
  id: IntFilter
  token: StringFilter
  expiresIn: DateTimeFilter
}

input UserRoleListRelationFilter {
  every: UserRoleWhereInput
  some: UserRoleWhereInput
  none: UserRoleWhereInput
}

input UserRoleWhereInput {
  AND: [UserRoleWhereInput!]
  OR: [UserRoleWhereInput!]
  NOT: [UserRoleWhereInput!]
  id: IntFilter
  userId: IntFilter
  name: EnumUserRoleNameFilter
  user: UserRelationFilter
}

input EnumUserRoleNameFilter {
  equals: UserRoleName
  in: [UserRoleName!]
  notIn: [UserRoleName!]
  not: NestedEnumUserRoleNameFilter
}

input NestedEnumUserRoleNameFilter {
  equals: UserRoleName
  in: [UserRoleName!]
  notIn: [UserRoleName!]
  not: NestedEnumUserRoleNameFilter
}

input SettingsListRelationFilter {
  every: SettingsWhereInput
  some: SettingsWhereInput
  none: SettingsWhereInput
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  id: IntFilter
  maxEditOrderDays: IntFilter
}

input MealBoardPlanListRelationFilter {
  every: MealBoardPlanWhereInput
  some: MealBoardPlanWhereInput
  none: MealBoardPlanWhereInput
}

input UserMealLocationListRelationFilter {
  every: UserMealLocationWhereInput
  some: UserMealLocationWhereInput
  none: UserMealLocationWhereInput
}

input UserMealLocationWhereInput {
  AND: [UserMealLocationWhereInput!]
  OR: [UserMealLocationWhereInput!]
  NOT: [UserMealLocationWhereInput!]
  id: IntFilter
  userId: IntFilter
  timeOfDay: EnumTimeOfDayFilter
  name: EnumMealLocationFilter
  user: UserRelationFilter
}

input EnumMealLocationFilter {
  equals: MealLocation
  in: [MealLocation!]
  notIn: [MealLocation!]
  not: NestedEnumMealLocationFilter
}

input NestedEnumMealLocationFilter {
  equals: MealLocation
  in: [MealLocation!]
  notIn: [MealLocation!]
  not: NestedEnumMealLocationFilter
}

input UserOrderByWithRelationInput {
  id: SortOrder
  image: SortOrderInput
  username: SortOrder
  email: SortOrder
  lastOnline: SortOrder
  status: SortOrder
  allergens: AllergensOrderByRelationAggregateInput
  createdToken: TokenOrderByRelationAggregateInput
  updatedToken: TokenOrderByRelationAggregateInput
  createdUser: UserOrderByRelationAggregateInput
  updatedUser: UserOrderByRelationAggregateInput
  createdUserRoles: UserRoleOrderByRelationAggregateInput
  updatedUserRoles: UserRoleOrderByRelationAggregateInput
  createdUserMeals: UserMealOrderByRelationAggregateInput
  updatedUserMeals: UserMealOrderByRelationAggregateInput
  createdSettings: SettingsOrderByRelationAggregateInput
  updatedSettings: SettingsOrderByRelationAggregateInput
  createdIngredients: IngredientOrderByRelationAggregateInput
  updatedIngredients: IngredientOrderByRelationAggregateInput
  createdRecipes: RecipeOrderByRelationAggregateInput
  updatedRecipes: RecipeOrderByRelationAggregateInput
  createdRecipeIngredients: RecipeIngredientOrderByRelationAggregateInput
  updatedRecipeIngredients: RecipeIngredientOrderByRelationAggregateInput
  createdMeals: MealOrderByRelationAggregateInput
  updatedMeals: MealOrderByRelationAggregateInput
  createdMealRecipes: MealRecipeOrderByRelationAggregateInput
  updatedMealRecipes: MealRecipeOrderByRelationAggregateInput
  createdWeeklyMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  updatedWeeklyMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  createdMealBoardPlans: MealBoardPlanOrderByRelationAggregateInput
  updatedMealBoardPlans: MealBoardPlanOrderByRelationAggregateInput
  createdAllergens: AllergensOrderByRelationAggregateInput
  updatedAllergens: AllergensOrderByRelationAggregateInput
  createdAdditives: AdditivesOrderByRelationAggregateInput
  updatedAdditives: AdditivesOrderByRelationAggregateInput
  createdProperties: PropertiesOrderByRelationAggregateInput
  updatedProperties: PropertiesOrderByRelationAggregateInput
  createdCategories: CategoriesOrderByRelationAggregateInput
  updatedCategories: CategoriesOrderByRelationAggregateInput
  createdSeasons: SeasonsOrderByRelationAggregateInput
  updatedSeasons: SeasonsOrderByRelationAggregateInput
  createdFoodForms: FoodFormsOrderByRelationAggregateInput
  updatedFoodForms: FoodFormsOrderByRelationAggregateInput
  createdKitchens: KitchensOrderByRelationAggregateInput
  updatedKitchens: KitchensOrderByRelationAggregateInput
  createdUserMealLocations: UserMealLocationOrderByRelationAggregateInput
  updatedUserMealLocations: UserMealLocationOrderByRelationAggregateInput
  userRole: UserRoleOrderByRelationAggregateInput
  userMeal: UserMealOrderByRelationAggregateInput
  UserMealLocation: UserMealLocationOrderByRelationAggregateInput
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  sort: SortOrder!
  nulls: NullsOrder
}

enum NullsOrder {
  first
  last
}

input AllergensOrderByRelationAggregateInput {
  _count: SortOrder
}

input TokenOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserRoleOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserMealOrderByRelationAggregateInput {
  _count: SortOrder
}

input SettingsOrderByRelationAggregateInput {
  _count: SortOrder
}

input IngredientOrderByRelationAggregateInput {
  _count: SortOrder
}

input RecipeOrderByRelationAggregateInput {
  _count: SortOrder
}

input RecipeIngredientOrderByRelationAggregateInput {
  _count: SortOrder
}

input MealOrderByRelationAggregateInput {
  _count: SortOrder
}

input MealRecipeOrderByRelationAggregateInput {
  _count: SortOrder
}

input WeeklyMealGroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input MealBoardPlanOrderByRelationAggregateInput {
  _count: SortOrder
}

input AdditivesOrderByRelationAggregateInput {
  _count: SortOrder
}

input PropertiesOrderByRelationAggregateInput {
  _count: SortOrder
}

input CategoriesOrderByRelationAggregateInput {
  _count: SortOrder
}

input SeasonsOrderByRelationAggregateInput {
  _count: SortOrder
}

input FoodFormsOrderByRelationAggregateInput {
  _count: SortOrder
}

input KitchensOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserMealLocationOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserWhereUniqueInput {
  id: Int
  username: String
  email: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  image: StringNullableFilter
  lastOnline: DateTimeFilter
  status: BoolFilter
  allergens: AllergensListRelationFilter
  createdToken: TokenListRelationFilter
  updatedToken: TokenListRelationFilter
  createdUser: UserListRelationFilter
  updatedUser: UserListRelationFilter
  createdUserRoles: UserRoleListRelationFilter
  updatedUserRoles: UserRoleListRelationFilter
  createdUserMeals: UserMealListRelationFilter
  updatedUserMeals: UserMealListRelationFilter
  createdSettings: SettingsListRelationFilter
  updatedSettings: SettingsListRelationFilter
  createdIngredients: IngredientListRelationFilter
  updatedIngredients: IngredientListRelationFilter
  createdRecipes: RecipeListRelationFilter
  updatedRecipes: RecipeListRelationFilter
  createdRecipeIngredients: RecipeIngredientListRelationFilter
  updatedRecipeIngredients: RecipeIngredientListRelationFilter
  createdMeals: MealListRelationFilter
  updatedMeals: MealListRelationFilter
  createdMealRecipes: MealRecipeListRelationFilter
  updatedMealRecipes: MealRecipeListRelationFilter
  createdWeeklyMealGroups: WeeklyMealGroupListRelationFilter
  updatedWeeklyMealGroups: WeeklyMealGroupListRelationFilter
  createdMealBoardPlans: MealBoardPlanListRelationFilter
  updatedMealBoardPlans: MealBoardPlanListRelationFilter
  createdAllergens: AllergensListRelationFilter
  updatedAllergens: AllergensListRelationFilter
  createdAdditives: AdditivesListRelationFilter
  updatedAdditives: AdditivesListRelationFilter
  createdProperties: PropertiesListRelationFilter
  updatedProperties: PropertiesListRelationFilter
  createdCategories: CategoriesListRelationFilter
  updatedCategories: CategoriesListRelationFilter
  createdSeasons: SeasonsListRelationFilter
  updatedSeasons: SeasonsListRelationFilter
  createdFoodForms: FoodFormsListRelationFilter
  updatedFoodForms: FoodFormsListRelationFilter
  createdKitchens: KitchensListRelationFilter
  updatedKitchens: KitchensListRelationFilter
  createdUserMealLocations: UserMealLocationListRelationFilter
  updatedUserMealLocations: UserMealLocationListRelationFilter
  userRole: UserRoleListRelationFilter
  userMeal: UserMealListRelationFilter
  UserMealLocation: UserMealLocationListRelationFilter
}

enum UserScalarFieldEnum {
  id
  image
  password
  username
  email
  lastOnline
  status
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input UserMealOrderByWithRelationInput {
  id: SortOrder
  date: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
  user: UserOrderByWithRelationInput
  meal: MealOrderByWithRelationInput
  mealBoardPlan: MealBoardPlanOrderByWithRelationInput
  weeklyMealGroup: WeeklyMealGroupOrderByWithRelationInput
}

input MealOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrderInput
  image: SortOrderInput
  allergens: AllergensOrderByRelationAggregateInput
  additives: AdditivesOrderByRelationAggregateInput
  properties: PropertiesOrderByRelationAggregateInput
  categories: CategoriesOrderByRelationAggregateInput
  seasons: SeasonsOrderByRelationAggregateInput
  foodForms: FoodFormsOrderByRelationAggregateInput
  mondayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  tuesdayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  wednesdayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  thursdayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  fridayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  saturdayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  sundayMealGroups: WeeklyMealGroupOrderByRelationAggregateInput
  mealRecipe: MealRecipeOrderByRelationAggregateInput
  userMeal: UserMealOrderByRelationAggregateInput
}

input MealBoardPlanOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  color: SortOrderInput
  WeeklyMealGroup: WeeklyMealGroupOrderByRelationAggregateInput
  UserMeal: UserMealOrderByRelationAggregateInput
}

input WeeklyMealGroupOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  color: SortOrderInput
  description: SortOrderInput
  timeOfDay: SortOrder
  year: SortOrder
  weekOfYear: SortOrder
  orderIndex: SortOrder
  mealBoardPlanId: SortOrder
  mondayMealId: SortOrderInput
  tuesdayMealId: SortOrderInput
  wednesdayMealId: SortOrderInput
  thursdayMealId: SortOrderInput
  fridayMealId: SortOrderInput
  saturdayMealId: SortOrderInput
  sundayMealId: SortOrderInput
  mealBoardPlan: MealBoardPlanOrderByWithRelationInput
  mondayMeal: MealOrderByWithRelationInput
  tuesdayMeal: MealOrderByWithRelationInput
  wednesdayMeal: MealOrderByWithRelationInput
  thursdayMeal: MealOrderByWithRelationInput
  fridayMeal: MealOrderByWithRelationInput
  saturdayMeal: MealOrderByWithRelationInput
  sundayMeal: MealOrderByWithRelationInput
  userMeal: UserMealOrderByRelationAggregateInput
}

input UserMealWhereUniqueInput {
  id: Int
  user_meal_date_mealBoardPlanId_userId_mealId_unique: UserMealUser_meal_date_mealBoardPlanId_userId_mealId_uniqueCompoundUniqueInput
  AND: [UserMealWhereInput!]
  OR: [UserMealWhereInput!]
  NOT: [UserMealWhereInput!]
  date: DateTimeFilter
  mealBoardPlanId: IntFilter
  userId: IntFilter
  mealId: IntFilter
  weeklyMealGroupId: IntFilter
  user: UserRelationFilter
  meal: MealRelationFilter
  mealBoardPlan: MealBoardPlanRelationFilter
  weeklyMealGroup: WeeklyMealGroupRelationFilter
}

input UserMealUser_meal_date_mealBoardPlanId_userId_mealId_uniqueCompoundUniqueInput {
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
}

enum UserMealScalarFieldEnum {
  id
  date
  mealBoardPlanId
  userId
  mealId
  weeklyMealGroupId
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input UserMealOrderByWithAggregationInput {
  id: SortOrder
  date: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
  _count: UserMealCountOrderByAggregateInput
  _avg: UserMealAvgOrderByAggregateInput
  _max: UserMealMaxOrderByAggregateInput
  _min: UserMealMinOrderByAggregateInput
  _sum: UserMealSumOrderByAggregateInput
}

input UserMealCountOrderByAggregateInput {
  id: SortOrder
  date: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
}

input UserMealAvgOrderByAggregateInput {
  id: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
}

input UserMealMaxOrderByAggregateInput {
  id: SortOrder
  date: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
}

input UserMealMinOrderByAggregateInput {
  id: SortOrder
  date: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
}

input UserMealSumOrderByAggregateInput {
  id: SortOrder
  mealBoardPlanId: SortOrder
  userId: SortOrder
  mealId: SortOrder
  weeklyMealGroupId: SortOrder
}

input UserMealScalarWhereWithAggregatesInput {
  AND: [UserMealScalarWhereWithAggregatesInput!]
  OR: [UserMealScalarWhereWithAggregatesInput!]
  NOT: [UserMealScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  date: DateTimeWithAggregatesFilter
  mealBoardPlanId: IntWithAggregatesFilter
  userId: IntWithAggregatesFilter
  mealId: IntWithAggregatesFilter
  weeklyMealGroupId: IntWithAggregatesFilter
}

input IntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedIntWithAggregatesFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntWithAggregatesFilter
  _count: NestedIntFilter
  _avg: NestedFloatFilter
  _sum: NestedIntFilter
  _min: NestedIntFilter
  _max: NestedIntFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input DateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input NestedDateTimeWithAggregatesFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  _count: NestedIntFilter
  _min: NestedDateTimeFilter
  _max: NestedDateTimeFilter
}

input UserMealCountAggregateInput {
  id: Boolean
  date: Boolean
  mealBoardPlanId: Boolean
  userId: Boolean
  mealId: Boolean
  weeklyMealGroupId: Boolean
  _all: Boolean
}

input UserMealAvgAggregateInput {
  id: Boolean
  mealBoardPlanId: Boolean
  userId: Boolean
  mealId: Boolean
  weeklyMealGroupId: Boolean
}

input UserMealSumAggregateInput {
  id: Boolean
  mealBoardPlanId: Boolean
  userId: Boolean
  mealId: Boolean
  weeklyMealGroupId: Boolean
}

input UserMealMinAggregateInput {
  id: Boolean
  date: Boolean
  mealBoardPlanId: Boolean
  userId: Boolean
  mealId: Boolean
  weeklyMealGroupId: Boolean
}

input UserMealMaxAggregateInput {
  id: Boolean
  date: Boolean
  mealBoardPlanId: Boolean
  userId: Boolean
  mealId: Boolean
  weeklyMealGroupId: Boolean
}

input UserMealLocationOrderByWithRelationInput {
  id: SortOrder
  userId: SortOrder
  timeOfDay: SortOrder
  name: SortOrder
  user: UserOrderByWithRelationInput
}

input UserMealLocationWhereUniqueInput {
  id: Int
  user_meal_location_userId_timeOfDay_name_unique: UserMealLocationUser_meal_location_userId_timeOfDay_name_uniqueCompoundUniqueInput
  AND: [UserMealLocationWhereInput!]
  OR: [UserMealLocationWhereInput!]
  NOT: [UserMealLocationWhereInput!]
  userId: IntFilter
  timeOfDay: EnumTimeOfDayFilter
  name: EnumMealLocationFilter
  user: UserRelationFilter
}

input UserMealLocationUser_meal_location_userId_timeOfDay_name_uniqueCompoundUniqueInput {
  userId: Int!
  timeOfDay: TimeOfDay!
  name: MealLocation!
}

enum UserMealLocationScalarFieldEnum {
  id
  userId
  timeOfDay
  name
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input IngredientOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  blsIdentifier: SortOrder
  energyKcal: SortOrder
  energyKj: SortOrder
  breadUnits: SortOrder
  carbohydrates: SortOrder
  sugars: SortOrder
  salt: SortOrder
  fats: SortOrder
  saturatedFats: SortOrder
  unsaturatedFats: SortOrder
  protein: SortOrder
  allergens: AllergensOrderByRelationAggregateInput
  additives: AdditivesOrderByRelationAggregateInput
  properties: PropertiesOrderByRelationAggregateInput
  categories: CategoriesOrderByRelationAggregateInput
  seasons: SeasonsOrderByRelationAggregateInput
  foodForms: FoodFormsOrderByRelationAggregateInput
  kitchens: KitchensOrderByRelationAggregateInput
  recipeIngredient: RecipeIngredientOrderByRelationAggregateInput
}

input IngredientWhereUniqueInput {
  id: Int
  blsIdentifier: String
  AND: [IngredientWhereInput!]
  OR: [IngredientWhereInput!]
  NOT: [IngredientWhereInput!]
  name: StringFilter
  energyKcal: DecimalFilter
  energyKj: DecimalFilter
  breadUnits: DecimalFilter
  carbohydrates: DecimalFilter
  sugars: DecimalFilter
  salt: DecimalFilter
  fats: DecimalFilter
  saturatedFats: DecimalFilter
  unsaturatedFats: DecimalFilter
  protein: DecimalFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  kitchens: KitchensListRelationFilter
  recipeIngredient: RecipeIngredientListRelationFilter
}

enum IngredientScalarFieldEnum {
  id
  name
  blsIdentifier
  energyKcal
  energyKj
  breadUnits
  carbohydrates
  sugars
  salt
  fats
  saturatedFats
  unsaturatedFats
  protein
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input MealBoardPlanWhereUniqueInput {
  id: Int
  AND: [MealBoardPlanWhereInput!]
  OR: [MealBoardPlanWhereInput!]
  NOT: [MealBoardPlanWhereInput!]
  name: StringFilter
  color: StringNullableFilter
  WeeklyMealGroup: WeeklyMealGroupListRelationFilter
  UserMeal: UserMealListRelationFilter
}

enum MealBoardPlanScalarFieldEnum {
  id
  name
  color
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input MealWhereUniqueInput {
  id: Int
  AND: [MealWhereInput!]
  OR: [MealWhereInput!]
  NOT: [MealWhereInput!]
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  mondayMealGroups: WeeklyMealGroupListRelationFilter
  tuesdayMealGroups: WeeklyMealGroupListRelationFilter
  wednesdayMealGroups: WeeklyMealGroupListRelationFilter
  thursdayMealGroups: WeeklyMealGroupListRelationFilter
  fridayMealGroups: WeeklyMealGroupListRelationFilter
  saturdayMealGroups: WeeklyMealGroupListRelationFilter
  sundayMealGroups: WeeklyMealGroupListRelationFilter
  mealRecipe: MealRecipeListRelationFilter
  userMeal: UserMealListRelationFilter
}

enum MealScalarFieldEnum {
  id
  name
  description
  image
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input WeeklyMealGroupWhereUniqueInput {
  id: Int
  AND: [WeeklyMealGroupWhereInput!]
  OR: [WeeklyMealGroupWhereInput!]
  NOT: [WeeklyMealGroupWhereInput!]
  name: StringFilter
  color: StringNullableFilter
  description: StringNullableFilter
  timeOfDay: EnumTimeOfDayFilter
  year: IntFilter
  weekOfYear: IntFilter
  orderIndex: IntFilter
  mealBoardPlanId: IntFilter
  mondayMealId: IntNullableFilter
  tuesdayMealId: IntNullableFilter
  wednesdayMealId: IntNullableFilter
  thursdayMealId: IntNullableFilter
  fridayMealId: IntNullableFilter
  saturdayMealId: IntNullableFilter
  sundayMealId: IntNullableFilter
  mealBoardPlan: MealBoardPlanRelationFilter
  mondayMeal: MealNullableRelationFilter
  tuesdayMeal: MealNullableRelationFilter
  wednesdayMeal: MealNullableRelationFilter
  thursdayMeal: MealNullableRelationFilter
  fridayMeal: MealNullableRelationFilter
  saturdayMeal: MealNullableRelationFilter
  sundayMeal: MealNullableRelationFilter
  userMeal: UserMealListRelationFilter
}

enum WeeklyMealGroupScalarFieldEnum {
  id
  name
  color
  description
  timeOfDay
  year
  weekOfYear
  orderIndex
  mealBoardPlanId
  mondayMealId
  tuesdayMealId
  wednesdayMealId
  thursdayMealId
  fridayMealId
  saturdayMealId
  sundayMealId
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input SettingsOrderByWithRelationInput {
  id: SortOrder
  maxEditOrderDays: SortOrder
}

input SettingsWhereUniqueInput {
  id: Int
  AND: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  maxEditOrderDays: IntFilter
}

enum SettingsScalarFieldEnum {
  id
  maxEditOrderDays
  createdAt
  updatedAt
  createdBy
  updatedBy
}

input RecipeOrderByWithRelationInput {
  id: SortOrder
  name: SortOrder
  description: SortOrderInput
  allergens: AllergensOrderByRelationAggregateInput
  additives: AdditivesOrderByRelationAggregateInput
  properties: PropertiesOrderByRelationAggregateInput
  categories: CategoriesOrderByRelationAggregateInput
  seasons: SeasonsOrderByRelationAggregateInput
  foodForms: FoodFormsOrderByRelationAggregateInput
  kitchens: KitchensOrderByRelationAggregateInput
  recipeIngredient: RecipeIngredientOrderByRelationAggregateInput
  mealRecipe: MealRecipeOrderByRelationAggregateInput
}

input RecipeWhereUniqueInput {
  id: Int
  AND: [RecipeWhereInput!]
  OR: [RecipeWhereInput!]
  NOT: [RecipeWhereInput!]
  name: StringFilter
  description: StringNullableFilter
  allergens: AllergensListRelationFilter
  additives: AdditivesListRelationFilter
  properties: PropertiesListRelationFilter
  categories: CategoriesListRelationFilter
  seasons: SeasonsListRelationFilter
  foodForms: FoodFormsListRelationFilter
  kitchens: KitchensListRelationFilter
  recipeIngredient: RecipeIngredientListRelationFilter
  mealRecipe: MealRecipeListRelationFilter
}

enum RecipeScalarFieldEnum {
  id
  name
  description
  createdAt
  updatedAt
  createdBy
  updatedBy
}

type Mutation {
  registerUser(data: RegisterUserInput!): User
  loginUser(data: LoginUserInput!): User
  logout: Boolean
  changePasswordUser(password: String!, newPassword: String!): Boolean
  deleteAccountTokensUser: Boolean!
  createUserAdmin(data: UserCreateInput!): User
  createManyUsersAdmin(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): [User!]
  deleteUserAdmin(where: UserWhereUniqueInput!): User
  deleteManyUsersAdmin(where: UserWhereInput): Int
  updateUserAdmin(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsersAdmin(data: UserUpdateManyMutationInput!, where: UserWhereInput): [User!]
  upsertUserAdmin(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User
  updateUserAllergens(data: UserUpdateInput!): User
  createUserMealUser(data: UserMealUncheckedCreateInput!): UserMeal
  createManyUserMealsUser(data: [UserMealCreateManyInput!]!, skipDuplicates: Boolean): [UserMeal!]
  deleteUserMealUser(where: UserMealWhereUniqueInput!): UserMeal
  deleteManyUserMealsUser(where: UserMealWhereInput): Int
  updateUserMealUser(data: UserMealLocationUpdateInput!, where: UserMealLocationWhereUniqueInput!): UserMealLocation
  updateManyUserMealsUser(data: UserMealUpdateManyMutationInput!, where: UserMealWhereInput): [UserMeal!]
  upsertUserMealUser(where: UserMealLocationWhereUniqueInput!, create: UserMealLocationCreateInput!, update: UserMealLocationUpdateInput!): UserMealLocation
  createUserMealLocationUser(data: UserMealLocationUncheckedCreateInput!): UserMealLocation
  createManyUserMealLocationsUser(data: [UserMealLocationCreateManyInput!]!, skipDuplicates: Boolean): [UserMealLocation!]
  deleteUserMealLocationUser(where: UserMealLocationWhereUniqueInput!): UserMealLocation
  deleteManyUserMealLocationsUser(where: UserMealLocationWhereInput): Int
  updateUserMealLocationUser(data: UserMealLocationUpdateInput!, where: UserMealLocationWhereUniqueInput!): UserMealLocation
  updateManyUserMealLocationsUser(data: UserMealLocationUpdateManyMutationInput!, where: UserMealLocationWhereInput): [UserMealLocation!]
  upsertUserMealLocationUser(where: UserMealLocationWhereUniqueInput!, create: UserMealLocationCreateInput!, update: UserMealLocationUpdateInput!): UserMealLocation
  createIngredientAdmin(data: IngredientCreateInput!): Ingredient
  createManyIngredientsAdmin(data: [IngredientCreateManyInput!]!, skipDuplicates: Boolean): [Ingredient!]
  deleteIngredientAdmin(where: IngredientWhereUniqueInput!): Ingredient
  deleteManyIngredientsAdmin(where: IngredientWhereInput): Int
  updateIngredientAdmin(data: IngredientUpdateInput!, where: IngredientWhereUniqueInput!): Ingredient
  updateManyIngredientsAdmin(data: IngredientUpdateManyMutationInput!, where: IngredientWhereInput): [Ingredient!]
  upsertIngredientAdmin(where: IngredientWhereUniqueInput!, create: IngredientCreateInput!, update: IngredientUpdateInput!): Ingredient
  createMealBoardPlanAdmin(data: MealBoardPlanCreateInput!): MealBoardPlan
  createManyMealBoardPlansAdmin(data: [MealBoardPlanCreateManyInput!]!, skipDuplicates: Boolean): [MealBoardPlan!]
  deleteMealBoardPlanAdmin(where: MealBoardPlanWhereUniqueInput!): MealBoardPlan
  deleteManyMealBoardPlansAdmin(where: MealBoardPlanWhereInput): Int
  updateMealBoardPlanAdmin(data: MealBoardPlanUncheckedUpdateInput!, where: WeeklyMealGroupWhereUniqueInput!): MealBoardPlan
  updateManyMealBoardPlansAdmin(data: MealBoardPlanUpdateManyMutationInput!, where: MealBoardPlanWhereInput): [MealBoardPlan!]
  upsertMealBoardPlanAdmin(where: MealBoardPlanWhereUniqueInput!, create: MealBoardPlanCreateInput!, update: MealBoardPlanUpdateInput!): MealBoardPlan
  uploadMealImageAdmin(mealId: Int!, file: File!): Boolean
  createMealAdmin(data: MealCreateInput!): Meal
  createManyMealsAdmin(data: [MealCreateManyInput!]!, skipDuplicates: Boolean): [Meal!]
  deleteMealAdmin(where: MealWhereUniqueInput!): Meal
  deleteManyMealsAdmin(where: MealWhereInput): Int
  updateMealAdmin(data: MealUpdateInput!, where: MealWhereUniqueInput!): Meal
  updateManyMealsAdmin(data: MealUpdateManyMutationInput!, where: MealWhereInput): [Meal!]
  upsertMealAdmin(where: MealWhereUniqueInput!, create: MealCreateInput!, update: MealUpdateInput!): Meal
  switchDateWeeklyMealGroupAdmin(dateFrom: String!, dateTo: String!): Boolean!
  switchWeeklyMealGroupAdmin(data: SwitchWeeklyMealGroupInput!): Boolean!
  createWeeklyMealGroupAdmin(data: WeeklyMealGroupUncheckedCreateInput!): WeeklyMealGroup
  createManyWeeklyMealGroupsAdmin(data: [WeeklyMealGroupCreateManyInput!]!, skipDuplicates: Boolean): [WeeklyMealGroup!]
  deleteWeeklyMealGroupAdmin(where: WeeklyMealGroupWhereUniqueInput!): WeeklyMealGroup
  deleteManyWeeklyMealGroupsAdmin(where: WeeklyMealGroupWhereInput): Int
  updateWeeklyMealGroupAdmin(data: WeeklyMealGroupUncheckedUpdateInput!, where: WeeklyMealGroupWhereUniqueInput!): WeeklyMealGroup
  updateManyWeeklyMealGroupsAdmin(data: WeeklyMealGroupUpdateManyMutationInput!, where: WeeklyMealGroupWhereInput): [WeeklyMealGroup!]
  upsertWeeklyMealGroupAdmin(where: WeeklyMealGroupWhereUniqueInput!, create: WeeklyMealGroupCreateInput!, update: WeeklyMealGroupUpdateInput!): WeeklyMealGroup
  createSettingsAdmin(data: SettingsCreateInput!): Settings
  createManySettingsAdmin(data: [SettingsCreateManyInput!]!, skipDuplicates: Boolean): [Settings!]
  deleteSettingsAdmin(where: SettingsWhereUniqueInput!): Settings
  deleteManySettingsAdmin(where: SettingsWhereInput): Int
  updateSettingsAdmin(data: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings
  updateManySettingsAdmin(data: SettingsUpdateManyMutationInput!, where: SettingsWhereInput): [Settings!]
  upsertSettingsAdmin(where: SettingsWhereUniqueInput!, create: SettingsCreateInput!, update: SettingsUpdateInput!): Settings
  createRecipeAdmin(data: RecipeCreateInput!): Recipe
  createManyRecipesAdmin(data: [RecipeCreateManyInput!]!, skipDuplicates: Boolean): [Recipe!]
  deleteRecipeAdmin(where: RecipeWhereUniqueInput!): Recipe
  deleteManyRecipesAdmin(where: RecipeWhereInput): Int
  updateRecipeAdmin(data: RecipeUpdateInput!, where: RecipeWhereUniqueInput!): Recipe
  updateManyRecipesAdmin(data: RecipeUpdateManyMutationInput!, where: RecipeWhereInput): [Recipe!]
  upsertRecipeAdmin(where: RecipeWhereUniqueInput!, create: RecipeCreateInput!, update: RecipeUpdateInput!): Recipe
}

input RegisterUserInput {
  email: String!
  password: String!
}

input LoginUserInput {
  email: String!
  password: String!
}

input UserCreateInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input AllergensCreateNestedManyWithoutUsersInput {
  create: [AllergensCreateWithoutUsersInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutUsersInput!]
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutUsersInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAllergensInput
  recipes: RecipeCreateNestedManyWithoutAllergensInput
  meals: MealCreateNestedManyWithoutAllergensInput
}

input IngredientCreateNestedManyWithoutAllergensInput {
  create: [IngredientCreateWithoutAllergensInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutAllergensInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutAllergensInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input AdditivesCreateNestedManyWithoutIngredientsInput {
  create: [AdditivesCreateWithoutIngredientsInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutIngredientsInput!]
  connect: [AdditivesWhereUniqueInput!]
}

input AdditivesCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutAdditivesInput
  meals: MealCreateNestedManyWithoutAdditivesInput
}

input RecipeCreateNestedManyWithoutAdditivesInput {
  create: [RecipeCreateWithoutAdditivesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutAdditivesInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutAdditivesInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input AllergensCreateNestedManyWithoutRecipesInput {
  create: [AllergensCreateWithoutRecipesInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutRecipesInput!]
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAllergensInput
  meals: MealCreateNestedManyWithoutAllergensInput
  users: UserCreateNestedManyWithoutAllergensInput
}

input MealCreateNestedManyWithoutAllergensInput {
  create: [MealCreateWithoutAllergensInput!]
  connectOrCreate: [MealCreateOrConnectWithoutAllergensInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutAllergensInput {
  name: String!
  description: String
  image: String
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input AdditivesCreateNestedManyWithoutMealsInput {
  create: [AdditivesCreateWithoutMealsInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutMealsInput!]
  connect: [AdditivesWhereUniqueInput!]
}

input AdditivesCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAdditivesInput
  recipes: RecipeCreateNestedManyWithoutAdditivesInput
}

input IngredientCreateNestedManyWithoutAdditivesInput {
  create: [IngredientCreateWithoutAdditivesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutAdditivesInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutAdditivesInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input AllergensCreateNestedManyWithoutIngredientsInput {
  create: [AllergensCreateWithoutIngredientsInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutIngredientsInput!]
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutAllergensInput
  meals: MealCreateNestedManyWithoutAllergensInput
  users: UserCreateNestedManyWithoutAllergensInput
}

input RecipeCreateNestedManyWithoutAllergensInput {
  create: [RecipeCreateWithoutAllergensInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutAllergensInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutAllergensInput {
  name: String!
  description: String
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input AdditivesCreateNestedManyWithoutRecipesInput {
  create: [AdditivesCreateWithoutRecipesInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutRecipesInput!]
  connect: [AdditivesWhereUniqueInput!]
}

input AdditivesCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAdditivesInput
  meals: MealCreateNestedManyWithoutAdditivesInput
}

input MealCreateNestedManyWithoutAdditivesInput {
  create: [MealCreateWithoutAdditivesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutAdditivesInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutAdditivesInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input AllergensCreateNestedManyWithoutMealsInput {
  create: [AllergensCreateWithoutMealsInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutMealsInput!]
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAllergensInput
  recipes: RecipeCreateNestedManyWithoutAllergensInput
  users: UserCreateNestedManyWithoutAllergensInput
}

input UserCreateNestedManyWithoutAllergensInput {
  create: [UserCreateWithoutAllergensInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAllergensInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutAllergensInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input TokenCreateNestedManyWithoutCreatedByUserInput {
  create: [TokenCreateWithoutCreatedByUserInput!]
  connectOrCreate: [TokenCreateOrConnectWithoutCreatedByUserInput!]
  createMany: TokenCreateManyCreatedByUserInputEnvelope
  connect: [TokenWhereUniqueInput!]
}

input TokenCreateWithoutCreatedByUserInput {
  token: String!
  expiresIn: DateTime!
}

input TokenCreateOrConnectWithoutCreatedByUserInput {
  where: TokenWhereUniqueInput!
  create: TokenCreateWithoutCreatedByUserInput!
}

input TokenWhereUniqueInput {
  id: Int
  token: String
  AND: [TokenWhereInput!]
  OR: [TokenWhereInput!]
  NOT: [TokenWhereInput!]
  expiresIn: DateTimeFilter
}

input TokenCreateManyCreatedByUserInputEnvelope {
  data: [TokenCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input TokenCreateManyCreatedByUserInput {
  id: Int
  token: String!
  expiresIn: DateTime!
}

input TokenCreateNestedManyWithoutUpdatedByUserInput {
  create: [TokenCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [TokenCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: TokenCreateManyUpdatedByUserInputEnvelope
  connect: [TokenWhereUniqueInput!]
}

input TokenCreateWithoutUpdatedByUserInput {
  token: String!
  expiresIn: DateTime!
}

input TokenCreateOrConnectWithoutUpdatedByUserInput {
  where: TokenWhereUniqueInput!
  create: TokenCreateWithoutUpdatedByUserInput!
}

input TokenCreateManyUpdatedByUserInputEnvelope {
  data: [TokenCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input TokenCreateManyUpdatedByUserInput {
  id: Int
  token: String!
  expiresIn: DateTime!
}

input UserCreateNestedManyWithoutCreatedByUserInput {
  create: [UserCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserCreateOrConnectWithoutCreatedByUserInput!]
  createMany: UserCreateManyCreatedByUserInputEnvelope
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutCreatedByUserInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input UserCreateNestedManyWithoutUpdatedByUserInput {
  create: [UserCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: UserCreateManyUpdatedByUserInputEnvelope
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutUpdatedByUserInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input UserRoleCreateNestedManyWithoutCreatedByUserInput {
  create: [UserRoleCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutCreatedByUserInput!]
  createMany: UserRoleCreateManyCreatedByUserInputEnvelope
  connect: [UserRoleWhereUniqueInput!]
}

input UserRoleCreateWithoutCreatedByUserInput {
  name: UserRoleName!
  user: UserCreateNestedOneWithoutUserRoleInput!
}

input UserCreateNestedOneWithoutUserRoleInput {
  create: UserCreateWithoutUserRoleInput
  connectOrCreate: UserCreateOrConnectWithoutUserRoleInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutUserRoleInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input UserRoleCreateNestedManyWithoutUpdatedByUserInput {
  create: [UserRoleCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: UserRoleCreateManyUpdatedByUserInputEnvelope
  connect: [UserRoleWhereUniqueInput!]
}

input UserRoleCreateWithoutUpdatedByUserInput {
  name: UserRoleName!
  user: UserCreateNestedOneWithoutUserRoleInput!
}

input UserRoleCreateOrConnectWithoutUpdatedByUserInput {
  where: UserRoleWhereUniqueInput!
  create: UserRoleCreateWithoutUpdatedByUserInput!
}

input UserRoleWhereUniqueInput {
  id: Int
  user_role_userId_name_unique: UserRoleUser_role_userId_name_uniqueCompoundUniqueInput
  AND: [UserRoleWhereInput!]
  OR: [UserRoleWhereInput!]
  NOT: [UserRoleWhereInput!]
  userId: IntFilter
  name: EnumUserRoleNameFilter
  user: UserRelationFilter
}

input UserRoleUser_role_userId_name_uniqueCompoundUniqueInput {
  userId: Int!
  name: UserRoleName!
}

input UserRoleCreateManyUpdatedByUserInputEnvelope {
  data: [UserRoleCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserRoleCreateManyUpdatedByUserInput {
  id: Int
  userId: Int!
  name: UserRoleName!
}

input UserMealCreateNestedManyWithoutCreatedByUserInput {
  create: [UserMealCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutCreatedByUserInput!]
  createMany: UserMealCreateManyCreatedByUserInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutCreatedByUserInput {
  date: DateTime!
  user: UserCreateNestedOneWithoutUserMealInput!
  meal: MealCreateNestedOneWithoutUserMealInput!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutUserMealInput!
  weeklyMealGroup: WeeklyMealGroupCreateNestedOneWithoutUserMealInput!
}

input UserCreateNestedOneWithoutUserMealInput {
  create: UserCreateWithoutUserMealInput
  connectOrCreate: UserCreateOrConnectWithoutUserMealInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutUserMealInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  UserMealLocation: UserMealLocationCreateNestedManyWithoutUserInput
}

input UserMealCreateNestedManyWithoutUpdatedByUserInput {
  create: [UserMealCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: UserMealCreateManyUpdatedByUserInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutUpdatedByUserInput {
  date: DateTime!
  user: UserCreateNestedOneWithoutUserMealInput!
  meal: MealCreateNestedOneWithoutUserMealInput!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutUserMealInput!
  weeklyMealGroup: WeeklyMealGroupCreateNestedOneWithoutUserMealInput!
}

input MealCreateNestedOneWithoutUserMealInput {
  create: MealCreateWithoutUserMealInput
  connectOrCreate: MealCreateOrConnectWithoutUserMealInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutUserMealInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
}

input PropertiesCreateNestedManyWithoutMealsInput {
  create: [PropertiesCreateWithoutMealsInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutMealsInput!]
  connect: [PropertiesWhereUniqueInput!]
}

input PropertiesCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutPropertiesInput
  recipes: RecipeCreateNestedManyWithoutPropertiesInput
}

input IngredientCreateNestedManyWithoutPropertiesInput {
  create: [IngredientCreateWithoutPropertiesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutPropertiesInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutPropertiesInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input CategoriesCreateNestedManyWithoutIngredientsInput {
  create: [CategoriesCreateWithoutIngredientsInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutIngredientsInput!]
  connect: [CategoriesWhereUniqueInput!]
}

input CategoriesCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutCategoriesInput
  meals: MealCreateNestedManyWithoutCategoriesInput
}

input RecipeCreateNestedManyWithoutCategoriesInput {
  create: [RecipeCreateWithoutCategoriesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutCategoriesInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutCategoriesInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input PropertiesCreateNestedManyWithoutRecipesInput {
  create: [PropertiesCreateWithoutRecipesInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutRecipesInput!]
  connect: [PropertiesWhereUniqueInput!]
}

input PropertiesCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutPropertiesInput
  meals: MealCreateNestedManyWithoutPropertiesInput
}

input MealCreateNestedManyWithoutPropertiesInput {
  create: [MealCreateWithoutPropertiesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutPropertiesInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutPropertiesInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input CategoriesCreateNestedManyWithoutMealsInput {
  create: [CategoriesCreateWithoutMealsInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutMealsInput!]
  connect: [CategoriesWhereUniqueInput!]
}

input CategoriesCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutCategoriesInput
  recipes: RecipeCreateNestedManyWithoutCategoriesInput
}

input IngredientCreateNestedManyWithoutCategoriesInput {
  create: [IngredientCreateWithoutCategoriesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutCategoriesInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutCategoriesInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input PropertiesCreateNestedManyWithoutIngredientsInput {
  create: [PropertiesCreateWithoutIngredientsInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutIngredientsInput!]
  connect: [PropertiesWhereUniqueInput!]
}

input PropertiesCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutPropertiesInput
  meals: MealCreateNestedManyWithoutPropertiesInput
}

input RecipeCreateNestedManyWithoutPropertiesInput {
  create: [RecipeCreateWithoutPropertiesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutPropertiesInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutPropertiesInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input CategoriesCreateNestedManyWithoutRecipesInput {
  create: [CategoriesCreateWithoutRecipesInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutRecipesInput!]
  connect: [CategoriesWhereUniqueInput!]
}

input CategoriesCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutCategoriesInput
  meals: MealCreateNestedManyWithoutCategoriesInput
}

input MealCreateNestedManyWithoutCategoriesInput {
  create: [MealCreateWithoutCategoriesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutCategoriesInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutCategoriesInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input SeasonsCreateNestedManyWithoutMealsInput {
  create: [SeasonsCreateWithoutMealsInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutMealsInput!]
  connect: [SeasonsWhereUniqueInput!]
}

input SeasonsCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutSeasonsInput
  recipes: RecipeCreateNestedManyWithoutSeasonsInput
}

input IngredientCreateNestedManyWithoutSeasonsInput {
  create: [IngredientCreateWithoutSeasonsInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSeasonsInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutSeasonsInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input FoodFormsCreateNestedManyWithoutIngredientsInput {
  create: [FoodFormsCreateWithoutIngredientsInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutIngredientsInput!]
  connect: [FoodFormsWhereUniqueInput!]
}

input FoodFormsCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutFoodFormsInput
  meals: MealCreateNestedManyWithoutFoodFormsInput
}

input RecipeCreateNestedManyWithoutFoodFormsInput {
  create: [RecipeCreateWithoutFoodFormsInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutFoodFormsInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutFoodFormsInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input SeasonsCreateNestedManyWithoutRecipesInput {
  create: [SeasonsCreateWithoutRecipesInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutRecipesInput!]
  connect: [SeasonsWhereUniqueInput!]
}

input SeasonsCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutSeasonsInput
  meals: MealCreateNestedManyWithoutSeasonsInput
}

input MealCreateNestedManyWithoutSeasonsInput {
  create: [MealCreateWithoutSeasonsInput!]
  connectOrCreate: [MealCreateOrConnectWithoutSeasonsInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutSeasonsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input FoodFormsCreateNestedManyWithoutMealsInput {
  create: [FoodFormsCreateWithoutMealsInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutMealsInput!]
  connect: [FoodFormsWhereUniqueInput!]
}

input FoodFormsCreateWithoutMealsInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutFoodFormsInput
  recipes: RecipeCreateNestedManyWithoutFoodFormsInput
}

input IngredientCreateNestedManyWithoutFoodFormsInput {
  create: [IngredientCreateWithoutFoodFormsInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutFoodFormsInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutFoodFormsInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input SeasonsCreateNestedManyWithoutIngredientsInput {
  create: [SeasonsCreateWithoutIngredientsInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutIngredientsInput!]
  connect: [SeasonsWhereUniqueInput!]
}

input SeasonsCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutSeasonsInput
  meals: MealCreateNestedManyWithoutSeasonsInput
}

input RecipeCreateNestedManyWithoutSeasonsInput {
  create: [RecipeCreateWithoutSeasonsInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutSeasonsInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutSeasonsInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input FoodFormsCreateNestedManyWithoutRecipesInput {
  create: [FoodFormsCreateWithoutRecipesInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutRecipesInput!]
  connect: [FoodFormsWhereUniqueInput!]
}

input FoodFormsCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutFoodFormsInput
  meals: MealCreateNestedManyWithoutFoodFormsInput
}

input MealCreateNestedManyWithoutFoodFormsInput {
  create: [MealCreateWithoutFoodFormsInput!]
  connectOrCreate: [MealCreateOrConnectWithoutFoodFormsInput!]
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutFoodFormsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutMondayMealInput {
  create: [WeeklyMealGroupCreateWithoutMondayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutMondayMealInput!]
  createMany: WeeklyMealGroupCreateManyMondayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutMondayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput {
  create: MealBoardPlanCreateWithoutWeeklyMealGroupInput
  connectOrCreate: MealBoardPlanCreateOrConnectWithoutWeeklyMealGroupInput
  connect: MealBoardPlanWhereUniqueInput
}

input MealBoardPlanCreateWithoutWeeklyMealGroupInput {
  name: String!
  color: String
  UserMeal: UserMealCreateNestedManyWithoutMealBoardPlanInput
}

input UserMealCreateNestedManyWithoutMealBoardPlanInput {
  create: [UserMealCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutMealBoardPlanInput!]
  createMany: UserMealCreateManyMealBoardPlanInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutMealBoardPlanInput {
  date: DateTime!
  user: UserCreateNestedOneWithoutUserMealInput!
  meal: MealCreateNestedOneWithoutUserMealInput!
  weeklyMealGroup: WeeklyMealGroupCreateNestedOneWithoutUserMealInput!
}

input WeeklyMealGroupCreateNestedOneWithoutUserMealInput {
  create: WeeklyMealGroupCreateWithoutUserMealInput
  connectOrCreate: WeeklyMealGroupCreateOrConnectWithoutUserMealInput
  connect: WeeklyMealGroupWhereUniqueInput
}

input WeeklyMealGroupCreateWithoutUserMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
}

input MealCreateNestedOneWithoutMondayMealGroupsInput {
  create: MealCreateWithoutMondayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutMondayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutMondayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput {
  create: [WeeklyMealGroupCreateWithoutTuesdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutTuesdayMealInput!]
  createMany: WeeklyMealGroupCreateManyTuesdayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutTuesdayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutWednesdayMealGroupsInput {
  create: MealCreateWithoutWednesdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutWednesdayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutWednesdayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput {
  create: [WeeklyMealGroupCreateWithoutThursdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutThursdayMealInput!]
  createMany: WeeklyMealGroupCreateManyThursdayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutThursdayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutTuesdayMealGroupsInput {
  create: MealCreateWithoutTuesdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutTuesdayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutTuesdayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput {
  create: [WeeklyMealGroupCreateWithoutWednesdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutWednesdayMealInput!]
  createMany: WeeklyMealGroupCreateManyWednesdayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutWednesdayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutThursdayMealGroupsInput {
  create: MealCreateWithoutThursdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutThursdayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutThursdayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutFridayMealInput {
  create: [WeeklyMealGroupCreateWithoutFridayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutFridayMealInput!]
  createMany: WeeklyMealGroupCreateManyFridayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutFridayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutSaturdayMealGroupsInput {
  create: MealCreateWithoutSaturdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutSaturdayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutSaturdayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutSundayMealInput {
  create: [WeeklyMealGroupCreateWithoutSundayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutSundayMealInput!]
  createMany: WeeklyMealGroupCreateManySundayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutSundayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutFridayMealGroupsInput {
  create: MealCreateWithoutFridayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutFridayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutFridayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput {
  create: [WeeklyMealGroupCreateWithoutSaturdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutSaturdayMealInput!]
  createMany: WeeklyMealGroupCreateManySaturdayMealInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutSaturdayMealInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input MealCreateNestedOneWithoutSundayMealGroupsInput {
  create: MealCreateWithoutSundayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutSundayMealGroupsInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutSundayMealGroupsInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input MealRecipeCreateNestedManyWithoutMealInput {
  create: [MealRecipeCreateWithoutMealInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutMealInput!]
  createMany: MealRecipeCreateManyMealInputEnvelope
  connect: [MealRecipeWhereUniqueInput!]
}

input MealRecipeCreateWithoutMealInput {
  note: String
  recipe: RecipeCreateNestedOneWithoutMealRecipeInput!
}

input RecipeCreateNestedOneWithoutMealRecipeInput {
  create: RecipeCreateWithoutMealRecipeInput
  connectOrCreate: RecipeCreateOrConnectWithoutMealRecipeInput
  connect: RecipeWhereUniqueInput
}

input RecipeCreateWithoutMealRecipeInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
}

input KitchensCreateNestedManyWithoutRecipesInput {
  create: [KitchensCreateWithoutRecipesInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutRecipesInput!]
  connect: [KitchensWhereUniqueInput!]
}

input KitchensCreateWithoutRecipesInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutKitchensInput
}

input IngredientCreateNestedManyWithoutKitchensInput {
  create: [IngredientCreateWithoutKitchensInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutKitchensInput!]
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutKitchensInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input RecipeIngredientCreateNestedManyWithoutIngredientInput {
  create: [RecipeIngredientCreateWithoutIngredientInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutIngredientInput!]
  createMany: RecipeIngredientCreateManyIngredientInputEnvelope
  connect: [RecipeIngredientWhereUniqueInput!]
}

input RecipeIngredientCreateWithoutIngredientInput {
  amount: Decimal!
  unit: Unit!
  recipe: RecipeCreateNestedOneWithoutRecipeIngredientInput!
}

input RecipeCreateNestedOneWithoutRecipeIngredientInput {
  create: RecipeCreateWithoutRecipeIngredientInput
  connectOrCreate: RecipeCreateOrConnectWithoutRecipeIngredientInput
  connect: RecipeWhereUniqueInput
}

input RecipeCreateWithoutRecipeIngredientInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input MealRecipeCreateNestedManyWithoutRecipeInput {
  create: [MealRecipeCreateWithoutRecipeInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutRecipeInput!]
  createMany: MealRecipeCreateManyRecipeInputEnvelope
  connect: [MealRecipeWhereUniqueInput!]
}

input MealRecipeCreateWithoutRecipeInput {
  note: String
  meal: MealCreateNestedOneWithoutMealRecipeInput!
}

input MealCreateNestedOneWithoutMealRecipeInput {
  create: MealCreateWithoutMealRecipeInput
  connectOrCreate: MealCreateOrConnectWithoutMealRecipeInput
  connect: MealWhereUniqueInput
}

input MealCreateWithoutMealRecipeInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input UserMealCreateNestedManyWithoutMealInput {
  create: [UserMealCreateWithoutMealInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutMealInput!]
  createMany: UserMealCreateManyMealInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutMealInput {
  date: DateTime!
  user: UserCreateNestedOneWithoutUserMealInput!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutUserMealInput!
  weeklyMealGroup: WeeklyMealGroupCreateNestedOneWithoutUserMealInput!
}

input MealBoardPlanCreateNestedOneWithoutUserMealInput {
  create: MealBoardPlanCreateWithoutUserMealInput
  connectOrCreate: MealBoardPlanCreateOrConnectWithoutUserMealInput
  connect: MealBoardPlanWhereUniqueInput
}

input MealBoardPlanCreateWithoutUserMealInput {
  name: String!
  color: String
  WeeklyMealGroup: WeeklyMealGroupCreateNestedManyWithoutMealBoardPlanInput
}

input WeeklyMealGroupCreateNestedManyWithoutMealBoardPlanInput {
  create: [WeeklyMealGroupCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutMealBoardPlanInput!]
  createMany: WeeklyMealGroupCreateManyMealBoardPlanInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutMealBoardPlanInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input UserMealCreateNestedManyWithoutWeeklyMealGroupInput {
  create: [UserMealCreateWithoutWeeklyMealGroupInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutWeeklyMealGroupInput!]
  createMany: UserMealCreateManyWeeklyMealGroupInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutWeeklyMealGroupInput {
  date: DateTime!
  user: UserCreateNestedOneWithoutUserMealInput!
  meal: MealCreateNestedOneWithoutUserMealInput!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutWeeklyMealGroupInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutWeeklyMealGroupInput!
}

input UserMealCreateManyWeeklyMealGroupInputEnvelope {
  data: [UserMealCreateManyWeeklyMealGroupInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyWeeklyMealGroupInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
}

input WeeklyMealGroupCreateOrConnectWithoutMealBoardPlanInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutMealBoardPlanInput!
}

input WeeklyMealGroupCreateManyMealBoardPlanInputEnvelope {
  data: [WeeklyMealGroupCreateManyMealBoardPlanInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyMealBoardPlanInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealBoardPlanCreateOrConnectWithoutUserMealInput {
  where: MealBoardPlanWhereUniqueInput!
  create: MealBoardPlanCreateWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutMealInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutMealInput!
}

input UserMealCreateManyMealInputEnvelope {
  data: [UserMealCreateManyMealInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyMealInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  weeklyMealGroupId: Int!
}

input MealCreateOrConnectWithoutMealRecipeInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutMealRecipeInput!
}

input MealRecipeCreateOrConnectWithoutRecipeInput {
  where: MealRecipeWhereUniqueInput!
  create: MealRecipeCreateWithoutRecipeInput!
}

input MealRecipeWhereUniqueInput {
  id: Int
  AND: [MealRecipeWhereInput!]
  OR: [MealRecipeWhereInput!]
  NOT: [MealRecipeWhereInput!]
  mealId: IntFilter
  recipeId: IntFilter
  note: StringNullableFilter
  meal: MealRelationFilter
  recipe: RecipeRelationFilter
}

input MealRecipeCreateManyRecipeInputEnvelope {
  data: [MealRecipeCreateManyRecipeInput!]!
  skipDuplicates: Boolean
}

input MealRecipeCreateManyRecipeInput {
  id: Int
  mealId: Int!
  note: String
}

input RecipeCreateOrConnectWithoutRecipeIngredientInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutRecipeIngredientInput!
}

input RecipeIngredientCreateOrConnectWithoutIngredientInput {
  where: RecipeIngredientWhereUniqueInput!
  create: RecipeIngredientCreateWithoutIngredientInput!
}

input RecipeIngredientWhereUniqueInput {
  id: Int
  AND: [RecipeIngredientWhereInput!]
  OR: [RecipeIngredientWhereInput!]
  NOT: [RecipeIngredientWhereInput!]
  recipeId: IntFilter
  ingredientId: IntFilter
  amount: DecimalFilter
  unit: EnumUnitFilter
  recipe: RecipeRelationFilter
  ingredient: IngredientRelationFilter
}

input RecipeIngredientCreateManyIngredientInputEnvelope {
  data: [RecipeIngredientCreateManyIngredientInput!]!
  skipDuplicates: Boolean
}

input RecipeIngredientCreateManyIngredientInput {
  id: Int
  recipeId: Int!
  amount: Decimal!
  unit: Unit!
}

input IngredientCreateOrConnectWithoutKitchensInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutKitchensInput!
}

input KitchensCreateOrConnectWithoutRecipesInput {
  where: KitchensWhereUniqueInput!
  create: KitchensCreateWithoutRecipesInput!
}

input KitchensWhereUniqueInput {
  id: Int
  name: String
  AND: [KitchensWhereInput!]
  OR: [KitchensWhereInput!]
  NOT: [KitchensWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
}

input RecipeIngredientCreateNestedManyWithoutRecipeInput {
  create: [RecipeIngredientCreateWithoutRecipeInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutRecipeInput!]
  createMany: RecipeIngredientCreateManyRecipeInputEnvelope
  connect: [RecipeIngredientWhereUniqueInput!]
}

input RecipeIngredientCreateWithoutRecipeInput {
  amount: Decimal!
  unit: Unit!
  ingredient: IngredientCreateNestedOneWithoutRecipeIngredientInput!
}

input IngredientCreateNestedOneWithoutRecipeIngredientInput {
  create: IngredientCreateWithoutRecipeIngredientInput
  connectOrCreate: IngredientCreateOrConnectWithoutRecipeIngredientInput
  connect: IngredientWhereUniqueInput
}

input IngredientCreateWithoutRecipeIngredientInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
}

input KitchensCreateNestedManyWithoutIngredientsInput {
  create: [KitchensCreateWithoutIngredientsInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutIngredientsInput!]
  connect: [KitchensWhereUniqueInput!]
}

input KitchensCreateWithoutIngredientsInput {
  name: String!
  recipes: RecipeCreateNestedManyWithoutKitchensInput
}

input RecipeCreateNestedManyWithoutKitchensInput {
  create: [RecipeCreateWithoutKitchensInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutKitchensInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutKitchensInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input RecipeCreateOrConnectWithoutKitchensInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutKitchensInput!
}

input KitchensCreateOrConnectWithoutIngredientsInput {
  where: KitchensWhereUniqueInput!
  create: KitchensCreateWithoutIngredientsInput!
}

input IngredientCreateOrConnectWithoutRecipeIngredientInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutRecipeIngredientInput!
}

input RecipeIngredientCreateOrConnectWithoutRecipeInput {
  where: RecipeIngredientWhereUniqueInput!
  create: RecipeIngredientCreateWithoutRecipeInput!
}

input RecipeIngredientCreateManyRecipeInputEnvelope {
  data: [RecipeIngredientCreateManyRecipeInput!]!
  skipDuplicates: Boolean
}

input RecipeIngredientCreateManyRecipeInput {
  id: Int
  ingredientId: Int!
  amount: Decimal!
  unit: Unit!
}

input RecipeCreateOrConnectWithoutMealRecipeInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutMealRecipeInput!
}

input MealRecipeCreateOrConnectWithoutMealInput {
  where: MealRecipeWhereUniqueInput!
  create: MealRecipeCreateWithoutMealInput!
}

input MealRecipeCreateManyMealInputEnvelope {
  data: [MealRecipeCreateManyMealInput!]!
  skipDuplicates: Boolean
}

input MealRecipeCreateManyMealInput {
  id: Int
  recipeId: Int!
  note: String
}

input MealCreateOrConnectWithoutSundayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutSundayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutSaturdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutSaturdayMealInput!
}

input WeeklyMealGroupCreateManySaturdayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManySaturdayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManySaturdayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutFridayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutFridayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutSundayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutSundayMealInput!
}

input WeeklyMealGroupCreateManySundayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManySundayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManySundayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
}

input MealCreateOrConnectWithoutSaturdayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutSaturdayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutFridayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutFridayMealInput!
}

input WeeklyMealGroupCreateManyFridayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManyFridayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyFridayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutThursdayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutThursdayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutWednesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutWednesdayMealInput!
}

input WeeklyMealGroupCreateManyWednesdayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManyWednesdayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyWednesdayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutTuesdayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutTuesdayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutThursdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutThursdayMealInput!
}

input WeeklyMealGroupCreateManyThursdayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManyThursdayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyThursdayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutWednesdayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutWednesdayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutTuesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutTuesdayMealInput!
}

input WeeklyMealGroupCreateManyTuesdayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManyTuesdayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyTuesdayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutMondayMealGroupsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutMondayMealGroupsInput!
}

input WeeklyMealGroupCreateOrConnectWithoutUserMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutMealBoardPlanInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutMealBoardPlanInput!
}

input UserMealCreateManyMealBoardPlanInputEnvelope {
  data: [UserMealCreateManyMealBoardPlanInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyMealBoardPlanInput {
  id: Int
  date: DateTime!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input MealBoardPlanCreateOrConnectWithoutWeeklyMealGroupInput {
  where: MealBoardPlanWhereUniqueInput!
  create: MealBoardPlanCreateWithoutWeeklyMealGroupInput!
}

input WeeklyMealGroupCreateOrConnectWithoutMondayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutMondayMealInput!
}

input WeeklyMealGroupCreateManyMondayMealInputEnvelope {
  data: [WeeklyMealGroupCreateManyMondayMealInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyMondayMealInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealCreateOrConnectWithoutFoodFormsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutFoodFormsInput!
}

input FoodFormsCreateOrConnectWithoutRecipesInput {
  where: FoodFormsWhereUniqueInput!
  create: FoodFormsCreateWithoutRecipesInput!
}

input FoodFormsWhereUniqueInput {
  id: Int
  name: String
  AND: [FoodFormsWhereInput!]
  OR: [FoodFormsWhereInput!]
  NOT: [FoodFormsWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input RecipeCreateOrConnectWithoutSeasonsInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutSeasonsInput!
}

input SeasonsCreateOrConnectWithoutIngredientsInput {
  where: SeasonsWhereUniqueInput!
  create: SeasonsCreateWithoutIngredientsInput!
}

input SeasonsWhereUniqueInput {
  id: Int
  name: String
  AND: [SeasonsWhereInput!]
  OR: [SeasonsWhereInput!]
  NOT: [SeasonsWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input IngredientCreateOrConnectWithoutFoodFormsInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutFoodFormsInput!
}

input FoodFormsCreateOrConnectWithoutMealsInput {
  where: FoodFormsWhereUniqueInput!
  create: FoodFormsCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutSeasonsInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutSeasonsInput!
}

input SeasonsCreateOrConnectWithoutRecipesInput {
  where: SeasonsWhereUniqueInput!
  create: SeasonsCreateWithoutRecipesInput!
}

input RecipeCreateOrConnectWithoutFoodFormsInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutFoodFormsInput!
}

input FoodFormsCreateOrConnectWithoutIngredientsInput {
  where: FoodFormsWhereUniqueInput!
  create: FoodFormsCreateWithoutIngredientsInput!
}

input IngredientCreateOrConnectWithoutSeasonsInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutSeasonsInput!
}

input SeasonsCreateOrConnectWithoutMealsInput {
  where: SeasonsWhereUniqueInput!
  create: SeasonsCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutCategoriesInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutCategoriesInput!
}

input CategoriesCreateOrConnectWithoutRecipesInput {
  where: CategoriesWhereUniqueInput!
  create: CategoriesCreateWithoutRecipesInput!
}

input CategoriesWhereUniqueInput {
  id: Int
  name: String
  AND: [CategoriesWhereInput!]
  OR: [CategoriesWhereInput!]
  NOT: [CategoriesWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input RecipeCreateOrConnectWithoutPropertiesInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutPropertiesInput!
}

input PropertiesCreateOrConnectWithoutIngredientsInput {
  where: PropertiesWhereUniqueInput!
  create: PropertiesCreateWithoutIngredientsInput!
}

input PropertiesWhereUniqueInput {
  id: Int
  name: String
  AND: [PropertiesWhereInput!]
  OR: [PropertiesWhereInput!]
  NOT: [PropertiesWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input IngredientCreateOrConnectWithoutCategoriesInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutCategoriesInput!
}

input CategoriesCreateOrConnectWithoutMealsInput {
  where: CategoriesWhereUniqueInput!
  create: CategoriesCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutPropertiesInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutPropertiesInput!
}

input PropertiesCreateOrConnectWithoutRecipesInput {
  where: PropertiesWhereUniqueInput!
  create: PropertiesCreateWithoutRecipesInput!
}

input RecipeCreateOrConnectWithoutCategoriesInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutCategoriesInput!
}

input CategoriesCreateOrConnectWithoutIngredientsInput {
  where: CategoriesWhereUniqueInput!
  create: CategoriesCreateWithoutIngredientsInput!
}

input IngredientCreateOrConnectWithoutPropertiesInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutPropertiesInput!
}

input PropertiesCreateOrConnectWithoutMealsInput {
  where: PropertiesWhereUniqueInput!
  create: PropertiesCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutUserMealInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutUpdatedByUserInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutUpdatedByUserInput!
}

input UserMealCreateManyUpdatedByUserInputEnvelope {
  data: [UserMealCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyUpdatedByUserInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input SettingsCreateNestedManyWithoutCreatedByUserInput {
  create: [SettingsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [SettingsCreateOrConnectWithoutCreatedByUserInput!]
  createMany: SettingsCreateManyCreatedByUserInputEnvelope
  connect: [SettingsWhereUniqueInput!]
}

input SettingsCreateWithoutCreatedByUserInput {
  maxEditOrderDays: Int!
}

input SettingsCreateOrConnectWithoutCreatedByUserInput {
  where: SettingsWhereUniqueInput!
  create: SettingsCreateWithoutCreatedByUserInput!
}

input SettingsCreateManyCreatedByUserInputEnvelope {
  data: [SettingsCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input SettingsCreateManyCreatedByUserInput {
  id: Int
  maxEditOrderDays: Int!
}

input SettingsCreateNestedManyWithoutUpdatedByUserInput {
  create: [SettingsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [SettingsCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: SettingsCreateManyUpdatedByUserInputEnvelope
  connect: [SettingsWhereUniqueInput!]
}

input SettingsCreateWithoutUpdatedByUserInput {
  maxEditOrderDays: Int!
}

input SettingsCreateOrConnectWithoutUpdatedByUserInput {
  where: SettingsWhereUniqueInput!
  create: SettingsCreateWithoutUpdatedByUserInput!
}

input SettingsCreateManyUpdatedByUserInputEnvelope {
  data: [SettingsCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input SettingsCreateManyUpdatedByUserInput {
  id: Int
  maxEditOrderDays: Int!
}

input IngredientCreateNestedManyWithoutCreatedByUserInput {
  create: [IngredientCreateWithoutCreatedByUserInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutCreatedByUserInput!]
  createMany: IngredientCreateManyCreatedByUserInputEnvelope
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutCreatedByUserInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input IngredientCreateOrConnectWithoutCreatedByUserInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutCreatedByUserInput!
}

input IngredientCreateManyCreatedByUserInputEnvelope {
  data: [IngredientCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input IngredientCreateManyCreatedByUserInput {
  id: Int
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
}

input IngredientCreateNestedManyWithoutUpdatedByUserInput {
  create: [IngredientCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: IngredientCreateManyUpdatedByUserInputEnvelope
  connect: [IngredientWhereUniqueInput!]
}

input IngredientCreateWithoutUpdatedByUserInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input IngredientCreateOrConnectWithoutUpdatedByUserInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutUpdatedByUserInput!
}

input IngredientCreateManyUpdatedByUserInputEnvelope {
  data: [IngredientCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input IngredientCreateManyUpdatedByUserInput {
  id: Int
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
}

input RecipeCreateNestedManyWithoutCreatedByUserInput {
  create: [RecipeCreateWithoutCreatedByUserInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutCreatedByUserInput!]
  createMany: RecipeCreateManyCreatedByUserInputEnvelope
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutCreatedByUserInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input RecipeCreateOrConnectWithoutCreatedByUserInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutCreatedByUserInput!
}

input RecipeCreateManyCreatedByUserInputEnvelope {
  data: [RecipeCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input RecipeCreateManyCreatedByUserInput {
  id: Int
  name: String!
  description: String
}

input RecipeCreateNestedManyWithoutUpdatedByUserInput {
  create: [RecipeCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: RecipeCreateManyUpdatedByUserInputEnvelope
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutUpdatedByUserInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input RecipeCreateOrConnectWithoutUpdatedByUserInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutUpdatedByUserInput!
}

input RecipeCreateManyUpdatedByUserInputEnvelope {
  data: [RecipeCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input RecipeCreateManyUpdatedByUserInput {
  id: Int
  name: String!
  description: String
}

input RecipeIngredientCreateNestedManyWithoutCreatedByUserInput {
  create: [RecipeIngredientCreateWithoutCreatedByUserInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutCreatedByUserInput!]
  createMany: RecipeIngredientCreateManyCreatedByUserInputEnvelope
  connect: [RecipeIngredientWhereUniqueInput!]
}

input RecipeIngredientCreateWithoutCreatedByUserInput {
  amount: Decimal!
  unit: Unit!
  recipe: RecipeCreateNestedOneWithoutRecipeIngredientInput!
  ingredient: IngredientCreateNestedOneWithoutRecipeIngredientInput!
}

input RecipeIngredientCreateOrConnectWithoutCreatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  create: RecipeIngredientCreateWithoutCreatedByUserInput!
}

input RecipeIngredientCreateManyCreatedByUserInputEnvelope {
  data: [RecipeIngredientCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input RecipeIngredientCreateManyCreatedByUserInput {
  id: Int
  recipeId: Int!
  ingredientId: Int!
  amount: Decimal!
  unit: Unit!
}

input RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput {
  create: [RecipeIngredientCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: RecipeIngredientCreateManyUpdatedByUserInputEnvelope
  connect: [RecipeIngredientWhereUniqueInput!]
}

input RecipeIngredientCreateWithoutUpdatedByUserInput {
  amount: Decimal!
  unit: Unit!
  recipe: RecipeCreateNestedOneWithoutRecipeIngredientInput!
  ingredient: IngredientCreateNestedOneWithoutRecipeIngredientInput!
}

input RecipeIngredientCreateOrConnectWithoutUpdatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  create: RecipeIngredientCreateWithoutUpdatedByUserInput!
}

input RecipeIngredientCreateManyUpdatedByUserInputEnvelope {
  data: [RecipeIngredientCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input RecipeIngredientCreateManyUpdatedByUserInput {
  id: Int
  recipeId: Int!
  ingredientId: Int!
  amount: Decimal!
  unit: Unit!
}

input MealCreateNestedManyWithoutCreatedByUserInput {
  create: [MealCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealCreateOrConnectWithoutCreatedByUserInput!]
  createMany: MealCreateManyCreatedByUserInputEnvelope
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutCreatedByUserInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input MealCreateOrConnectWithoutCreatedByUserInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutCreatedByUserInput!
}

input MealCreateManyCreatedByUserInputEnvelope {
  data: [MealCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealCreateManyCreatedByUserInput {
  id: Int
  name: String!
  description: String
  image: String
}

input MealCreateNestedManyWithoutUpdatedByUserInput {
  create: [MealCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: MealCreateManyUpdatedByUserInputEnvelope
  connect: [MealWhereUniqueInput!]
}

input MealCreateWithoutUpdatedByUserInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input MealCreateOrConnectWithoutUpdatedByUserInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutUpdatedByUserInput!
}

input MealCreateManyUpdatedByUserInputEnvelope {
  data: [MealCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealCreateManyUpdatedByUserInput {
  id: Int
  name: String!
  description: String
  image: String
}

input MealRecipeCreateNestedManyWithoutCreatedByUserInput {
  create: [MealRecipeCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutCreatedByUserInput!]
  createMany: MealRecipeCreateManyCreatedByUserInputEnvelope
  connect: [MealRecipeWhereUniqueInput!]
}

input MealRecipeCreateWithoutCreatedByUserInput {
  note: String
  meal: MealCreateNestedOneWithoutMealRecipeInput!
  recipe: RecipeCreateNestedOneWithoutMealRecipeInput!
}

input MealRecipeCreateOrConnectWithoutCreatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  create: MealRecipeCreateWithoutCreatedByUserInput!
}

input MealRecipeCreateManyCreatedByUserInputEnvelope {
  data: [MealRecipeCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealRecipeCreateManyCreatedByUserInput {
  id: Int
  mealId: Int!
  recipeId: Int!
  note: String
}

input MealRecipeCreateNestedManyWithoutUpdatedByUserInput {
  create: [MealRecipeCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: MealRecipeCreateManyUpdatedByUserInputEnvelope
  connect: [MealRecipeWhereUniqueInput!]
}

input MealRecipeCreateWithoutUpdatedByUserInput {
  note: String
  meal: MealCreateNestedOneWithoutMealRecipeInput!
  recipe: RecipeCreateNestedOneWithoutMealRecipeInput!
}

input MealRecipeCreateOrConnectWithoutUpdatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  create: MealRecipeCreateWithoutUpdatedByUserInput!
}

input MealRecipeCreateManyUpdatedByUserInputEnvelope {
  data: [MealRecipeCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealRecipeCreateManyUpdatedByUserInput {
  id: Int
  mealId: Int!
  recipeId: Int!
  note: String
}

input WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput {
  create: [WeeklyMealGroupCreateWithoutCreatedByUserInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutCreatedByUserInput!]
  createMany: WeeklyMealGroupCreateManyCreatedByUserInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutCreatedByUserInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input WeeklyMealGroupCreateOrConnectWithoutCreatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutCreatedByUserInput!
}

input WeeklyMealGroupCreateManyCreatedByUserInputEnvelope {
  data: [WeeklyMealGroupCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyCreatedByUserInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput {
  create: [WeeklyMealGroupCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: WeeklyMealGroupCreateManyUpdatedByUserInputEnvelope
  connect: [WeeklyMealGroupWhereUniqueInput!]
}

input WeeklyMealGroupCreateWithoutUpdatedByUserInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input WeeklyMealGroupCreateOrConnectWithoutUpdatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  create: WeeklyMealGroupCreateWithoutUpdatedByUserInput!
}

input WeeklyMealGroupCreateManyUpdatedByUserInputEnvelope {
  data: [WeeklyMealGroupCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input WeeklyMealGroupCreateManyUpdatedByUserInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input MealBoardPlanCreateNestedManyWithoutCreatedByUserInput {
  create: [MealBoardPlanCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealBoardPlanCreateOrConnectWithoutCreatedByUserInput!]
  createMany: MealBoardPlanCreateManyCreatedByUserInputEnvelope
  connect: [MealBoardPlanWhereUniqueInput!]
}

input MealBoardPlanCreateWithoutCreatedByUserInput {
  name: String!
  color: String
  WeeklyMealGroup: WeeklyMealGroupCreateNestedManyWithoutMealBoardPlanInput
  UserMeal: UserMealCreateNestedManyWithoutMealBoardPlanInput
}

input MealBoardPlanCreateOrConnectWithoutCreatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  create: MealBoardPlanCreateWithoutCreatedByUserInput!
}

input MealBoardPlanCreateManyCreatedByUserInputEnvelope {
  data: [MealBoardPlanCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealBoardPlanCreateManyCreatedByUserInput {
  id: Int
  name: String!
  color: String
}

input MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput {
  create: [MealBoardPlanCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealBoardPlanCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: MealBoardPlanCreateManyUpdatedByUserInputEnvelope
  connect: [MealBoardPlanWhereUniqueInput!]
}

input MealBoardPlanCreateWithoutUpdatedByUserInput {
  name: String!
  color: String
  WeeklyMealGroup: WeeklyMealGroupCreateNestedManyWithoutMealBoardPlanInput
  UserMeal: UserMealCreateNestedManyWithoutMealBoardPlanInput
}

input MealBoardPlanCreateOrConnectWithoutUpdatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  create: MealBoardPlanCreateWithoutUpdatedByUserInput!
}

input MealBoardPlanCreateManyUpdatedByUserInputEnvelope {
  data: [MealBoardPlanCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input MealBoardPlanCreateManyUpdatedByUserInput {
  id: Int
  name: String!
  color: String
}

input AllergensCreateNestedManyWithoutCreatedByUserInput {
  create: [AllergensCreateWithoutCreatedByUserInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutCreatedByUserInput!]
  createMany: AllergensCreateManyCreatedByUserInputEnvelope
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAllergensInput
  recipes: RecipeCreateNestedManyWithoutAllergensInput
  meals: MealCreateNestedManyWithoutAllergensInput
  users: UserCreateNestedManyWithoutAllergensInput
}

input AllergensCreateOrConnectWithoutCreatedByUserInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutCreatedByUserInput!
}

input AllergensWhereUniqueInput {
  id: Int
  name: String
  AND: [AllergensWhereInput!]
  OR: [AllergensWhereInput!]
  NOT: [AllergensWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
  users: UserListRelationFilter
}

input AllergensCreateManyCreatedByUserInputEnvelope {
  data: [AllergensCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input AllergensCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input AllergensCreateNestedManyWithoutUpdatedByUserInput {
  create: [AllergensCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: AllergensCreateManyUpdatedByUserInputEnvelope
  connect: [AllergensWhereUniqueInput!]
}

input AllergensCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAllergensInput
  recipes: RecipeCreateNestedManyWithoutAllergensInput
  meals: MealCreateNestedManyWithoutAllergensInput
  users: UserCreateNestedManyWithoutAllergensInput
}

input AllergensCreateOrConnectWithoutUpdatedByUserInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutUpdatedByUserInput!
}

input AllergensCreateManyUpdatedByUserInputEnvelope {
  data: [AllergensCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input AllergensCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input AdditivesCreateNestedManyWithoutCreatedByUserInput {
  create: [AdditivesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutCreatedByUserInput!]
  createMany: AdditivesCreateManyCreatedByUserInputEnvelope
  connect: [AdditivesWhereUniqueInput!]
}

input AdditivesCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAdditivesInput
  recipes: RecipeCreateNestedManyWithoutAdditivesInput
  meals: MealCreateNestedManyWithoutAdditivesInput
}

input AdditivesCreateOrConnectWithoutCreatedByUserInput {
  where: AdditivesWhereUniqueInput!
  create: AdditivesCreateWithoutCreatedByUserInput!
}

input AdditivesWhereUniqueInput {
  id: Int
  name: String
  AND: [AdditivesWhereInput!]
  OR: [AdditivesWhereInput!]
  NOT: [AdditivesWhereInput!]
  ingredients: IngredientListRelationFilter
  recipes: RecipeListRelationFilter
  meals: MealListRelationFilter
}

input AdditivesCreateManyCreatedByUserInputEnvelope {
  data: [AdditivesCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input AdditivesCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input AdditivesCreateNestedManyWithoutUpdatedByUserInput {
  create: [AdditivesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: AdditivesCreateManyUpdatedByUserInputEnvelope
  connect: [AdditivesWhereUniqueInput!]
}

input AdditivesCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutAdditivesInput
  recipes: RecipeCreateNestedManyWithoutAdditivesInput
  meals: MealCreateNestedManyWithoutAdditivesInput
}

input AdditivesCreateOrConnectWithoutUpdatedByUserInput {
  where: AdditivesWhereUniqueInput!
  create: AdditivesCreateWithoutUpdatedByUserInput!
}

input AdditivesCreateManyUpdatedByUserInputEnvelope {
  data: [AdditivesCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input AdditivesCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input PropertiesCreateNestedManyWithoutCreatedByUserInput {
  create: [PropertiesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutCreatedByUserInput!]
  createMany: PropertiesCreateManyCreatedByUserInputEnvelope
  connect: [PropertiesWhereUniqueInput!]
}

input PropertiesCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutPropertiesInput
  recipes: RecipeCreateNestedManyWithoutPropertiesInput
  meals: MealCreateNestedManyWithoutPropertiesInput
}

input PropertiesCreateOrConnectWithoutCreatedByUserInput {
  where: PropertiesWhereUniqueInput!
  create: PropertiesCreateWithoutCreatedByUserInput!
}

input PropertiesCreateManyCreatedByUserInputEnvelope {
  data: [PropertiesCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input PropertiesCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input PropertiesCreateNestedManyWithoutUpdatedByUserInput {
  create: [PropertiesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: PropertiesCreateManyUpdatedByUserInputEnvelope
  connect: [PropertiesWhereUniqueInput!]
}

input PropertiesCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutPropertiesInput
  recipes: RecipeCreateNestedManyWithoutPropertiesInput
  meals: MealCreateNestedManyWithoutPropertiesInput
}

input PropertiesCreateOrConnectWithoutUpdatedByUserInput {
  where: PropertiesWhereUniqueInput!
  create: PropertiesCreateWithoutUpdatedByUserInput!
}

input PropertiesCreateManyUpdatedByUserInputEnvelope {
  data: [PropertiesCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input PropertiesCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input CategoriesCreateNestedManyWithoutCreatedByUserInput {
  create: [CategoriesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutCreatedByUserInput!]
  createMany: CategoriesCreateManyCreatedByUserInputEnvelope
  connect: [CategoriesWhereUniqueInput!]
}

input CategoriesCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutCategoriesInput
  recipes: RecipeCreateNestedManyWithoutCategoriesInput
  meals: MealCreateNestedManyWithoutCategoriesInput
}

input CategoriesCreateOrConnectWithoutCreatedByUserInput {
  where: CategoriesWhereUniqueInput!
  create: CategoriesCreateWithoutCreatedByUserInput!
}

input CategoriesCreateManyCreatedByUserInputEnvelope {
  data: [CategoriesCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input CategoriesCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input CategoriesCreateNestedManyWithoutUpdatedByUserInput {
  create: [CategoriesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: CategoriesCreateManyUpdatedByUserInputEnvelope
  connect: [CategoriesWhereUniqueInput!]
}

input CategoriesCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutCategoriesInput
  recipes: RecipeCreateNestedManyWithoutCategoriesInput
  meals: MealCreateNestedManyWithoutCategoriesInput
}

input CategoriesCreateOrConnectWithoutUpdatedByUserInput {
  where: CategoriesWhereUniqueInput!
  create: CategoriesCreateWithoutUpdatedByUserInput!
}

input CategoriesCreateManyUpdatedByUserInputEnvelope {
  data: [CategoriesCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input CategoriesCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input SeasonsCreateNestedManyWithoutCreatedByUserInput {
  create: [SeasonsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutCreatedByUserInput!]
  createMany: SeasonsCreateManyCreatedByUserInputEnvelope
  connect: [SeasonsWhereUniqueInput!]
}

input SeasonsCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutSeasonsInput
  recipes: RecipeCreateNestedManyWithoutSeasonsInput
  meals: MealCreateNestedManyWithoutSeasonsInput
}

input SeasonsCreateOrConnectWithoutCreatedByUserInput {
  where: SeasonsWhereUniqueInput!
  create: SeasonsCreateWithoutCreatedByUserInput!
}

input SeasonsCreateManyCreatedByUserInputEnvelope {
  data: [SeasonsCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input SeasonsCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input SeasonsCreateNestedManyWithoutUpdatedByUserInput {
  create: [SeasonsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: SeasonsCreateManyUpdatedByUserInputEnvelope
  connect: [SeasonsWhereUniqueInput!]
}

input SeasonsCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutSeasonsInput
  recipes: RecipeCreateNestedManyWithoutSeasonsInput
  meals: MealCreateNestedManyWithoutSeasonsInput
}

input SeasonsCreateOrConnectWithoutUpdatedByUserInput {
  where: SeasonsWhereUniqueInput!
  create: SeasonsCreateWithoutUpdatedByUserInput!
}

input SeasonsCreateManyUpdatedByUserInputEnvelope {
  data: [SeasonsCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input SeasonsCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input FoodFormsCreateNestedManyWithoutCreatedByUserInput {
  create: [FoodFormsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutCreatedByUserInput!]
  createMany: FoodFormsCreateManyCreatedByUserInputEnvelope
  connect: [FoodFormsWhereUniqueInput!]
}

input FoodFormsCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutFoodFormsInput
  recipes: RecipeCreateNestedManyWithoutFoodFormsInput
  meals: MealCreateNestedManyWithoutFoodFormsInput
}

input FoodFormsCreateOrConnectWithoutCreatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  create: FoodFormsCreateWithoutCreatedByUserInput!
}

input FoodFormsCreateManyCreatedByUserInputEnvelope {
  data: [FoodFormsCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input FoodFormsCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input FoodFormsCreateNestedManyWithoutUpdatedByUserInput {
  create: [FoodFormsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: FoodFormsCreateManyUpdatedByUserInputEnvelope
  connect: [FoodFormsWhereUniqueInput!]
}

input FoodFormsCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutFoodFormsInput
  recipes: RecipeCreateNestedManyWithoutFoodFormsInput
  meals: MealCreateNestedManyWithoutFoodFormsInput
}

input FoodFormsCreateOrConnectWithoutUpdatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  create: FoodFormsCreateWithoutUpdatedByUserInput!
}

input FoodFormsCreateManyUpdatedByUserInputEnvelope {
  data: [FoodFormsCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input FoodFormsCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input KitchensCreateNestedManyWithoutCreatedByUserInput {
  create: [KitchensCreateWithoutCreatedByUserInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutCreatedByUserInput!]
  createMany: KitchensCreateManyCreatedByUserInputEnvelope
  connect: [KitchensWhereUniqueInput!]
}

input KitchensCreateWithoutCreatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutKitchensInput
  recipes: RecipeCreateNestedManyWithoutKitchensInput
}

input KitchensCreateOrConnectWithoutCreatedByUserInput {
  where: KitchensWhereUniqueInput!
  create: KitchensCreateWithoutCreatedByUserInput!
}

input KitchensCreateManyCreatedByUserInputEnvelope {
  data: [KitchensCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input KitchensCreateManyCreatedByUserInput {
  id: Int
  name: String!
}

input KitchensCreateNestedManyWithoutUpdatedByUserInput {
  create: [KitchensCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: KitchensCreateManyUpdatedByUserInputEnvelope
  connect: [KitchensWhereUniqueInput!]
}

input KitchensCreateWithoutUpdatedByUserInput {
  name: String!
  ingredients: IngredientCreateNestedManyWithoutKitchensInput
  recipes: RecipeCreateNestedManyWithoutKitchensInput
}

input KitchensCreateOrConnectWithoutUpdatedByUserInput {
  where: KitchensWhereUniqueInput!
  create: KitchensCreateWithoutUpdatedByUserInput!
}

input KitchensCreateManyUpdatedByUserInputEnvelope {
  data: [KitchensCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input KitchensCreateManyUpdatedByUserInput {
  id: Int
  name: String!
}

input UserMealLocationCreateNestedManyWithoutCreatedByUserInput {
  create: [UserMealLocationCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutCreatedByUserInput!]
  createMany: UserMealLocationCreateManyCreatedByUserInputEnvelope
  connect: [UserMealLocationWhereUniqueInput!]
}

input UserMealLocationCreateWithoutCreatedByUserInput {
  timeOfDay: TimeOfDay
  name: MealLocation
  user: UserCreateNestedOneWithoutUserMealLocationInput!
}

input UserCreateNestedOneWithoutUserMealLocationInput {
  create: UserCreateWithoutUserMealLocationInput
  connectOrCreate: UserCreateOrConnectWithoutUserMealLocationInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutUserMealLocationInput {
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
  allergens: AllergensCreateNestedManyWithoutUsersInput
  createdToken: TokenCreateNestedManyWithoutCreatedByUserInput
  updatedToken: TokenCreateNestedManyWithoutUpdatedByUserInput
  createdUser: UserCreateNestedManyWithoutCreatedByUserInput
  updatedUser: UserCreateNestedManyWithoutUpdatedByUserInput
  createdUserRoles: UserRoleCreateNestedManyWithoutCreatedByUserInput
  updatedUserRoles: UserRoleCreateNestedManyWithoutUpdatedByUserInput
  createdUserMeals: UserMealCreateNestedManyWithoutCreatedByUserInput
  updatedUserMeals: UserMealCreateNestedManyWithoutUpdatedByUserInput
  createdSettings: SettingsCreateNestedManyWithoutCreatedByUserInput
  updatedSettings: SettingsCreateNestedManyWithoutUpdatedByUserInput
  createdIngredients: IngredientCreateNestedManyWithoutCreatedByUserInput
  updatedIngredients: IngredientCreateNestedManyWithoutUpdatedByUserInput
  createdRecipes: RecipeCreateNestedManyWithoutCreatedByUserInput
  updatedRecipes: RecipeCreateNestedManyWithoutUpdatedByUserInput
  createdRecipeIngredients: RecipeIngredientCreateNestedManyWithoutCreatedByUserInput
  updatedRecipeIngredients: RecipeIngredientCreateNestedManyWithoutUpdatedByUserInput
  createdMeals: MealCreateNestedManyWithoutCreatedByUserInput
  updatedMeals: MealCreateNestedManyWithoutUpdatedByUserInput
  createdMealRecipes: MealRecipeCreateNestedManyWithoutCreatedByUserInput
  updatedMealRecipes: MealRecipeCreateNestedManyWithoutUpdatedByUserInput
  createdWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutCreatedByUserInput
  updatedWeeklyMealGroups: WeeklyMealGroupCreateNestedManyWithoutUpdatedByUserInput
  createdMealBoardPlans: MealBoardPlanCreateNestedManyWithoutCreatedByUserInput
  updatedMealBoardPlans: MealBoardPlanCreateNestedManyWithoutUpdatedByUserInput
  createdAllergens: AllergensCreateNestedManyWithoutCreatedByUserInput
  updatedAllergens: AllergensCreateNestedManyWithoutUpdatedByUserInput
  createdAdditives: AdditivesCreateNestedManyWithoutCreatedByUserInput
  updatedAdditives: AdditivesCreateNestedManyWithoutUpdatedByUserInput
  createdProperties: PropertiesCreateNestedManyWithoutCreatedByUserInput
  updatedProperties: PropertiesCreateNestedManyWithoutUpdatedByUserInput
  createdCategories: CategoriesCreateNestedManyWithoutCreatedByUserInput
  updatedCategories: CategoriesCreateNestedManyWithoutUpdatedByUserInput
  createdSeasons: SeasonsCreateNestedManyWithoutCreatedByUserInput
  updatedSeasons: SeasonsCreateNestedManyWithoutUpdatedByUserInput
  createdFoodForms: FoodFormsCreateNestedManyWithoutCreatedByUserInput
  updatedFoodForms: FoodFormsCreateNestedManyWithoutUpdatedByUserInput
  createdKitchens: KitchensCreateNestedManyWithoutCreatedByUserInput
  updatedKitchens: KitchensCreateNestedManyWithoutUpdatedByUserInput
  createdUserMealLocations: UserMealLocationCreateNestedManyWithoutCreatedByUserInput
  updatedUserMealLocations: UserMealLocationCreateNestedManyWithoutUpdatedByUserInput
  userRole: UserRoleCreateNestedManyWithoutUserInput
  userMeal: UserMealCreateNestedManyWithoutUserInput
}

input UserMealLocationCreateNestedManyWithoutUpdatedByUserInput {
  create: [UserMealLocationCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutUpdatedByUserInput!]
  createMany: UserMealLocationCreateManyUpdatedByUserInputEnvelope
  connect: [UserMealLocationWhereUniqueInput!]
}

input UserMealLocationCreateWithoutUpdatedByUserInput {
  timeOfDay: TimeOfDay
  name: MealLocation
  user: UserCreateNestedOneWithoutUserMealLocationInput!
}

input UserMealLocationCreateOrConnectWithoutUpdatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  create: UserMealLocationCreateWithoutUpdatedByUserInput!
}

input UserMealLocationCreateManyUpdatedByUserInputEnvelope {
  data: [UserMealLocationCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserMealLocationCreateManyUpdatedByUserInput {
  id: Int
  userId: Int!
  timeOfDay: TimeOfDay
  name: MealLocation
}

input UserRoleCreateNestedManyWithoutUserInput {
  create: [UserRoleCreateWithoutUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutUserInput!]
  createMany: UserRoleCreateManyUserInputEnvelope
  connect: [UserRoleWhereUniqueInput!]
}

input UserRoleCreateWithoutUserInput {
  name: UserRoleName!
}

input UserRoleCreateOrConnectWithoutUserInput {
  where: UserRoleWhereUniqueInput!
  create: UserRoleCreateWithoutUserInput!
}

input UserRoleCreateManyUserInputEnvelope {
  data: [UserRoleCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserRoleCreateManyUserInput {
  id: Int
  name: UserRoleName!
}

input UserMealCreateNestedManyWithoutUserInput {
  create: [UserMealCreateWithoutUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutUserInput!]
  createMany: UserMealCreateManyUserInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input UserMealCreateWithoutUserInput {
  date: DateTime!
  meal: MealCreateNestedOneWithoutUserMealInput!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutUserMealInput!
  weeklyMealGroup: WeeklyMealGroupCreateNestedOneWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutUserInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutUserInput!
}

input UserMealCreateManyUserInputEnvelope {
  data: [UserMealCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyUserInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input UserCreateOrConnectWithoutUserMealLocationInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutUserMealLocationInput!
}

input UserMealLocationCreateOrConnectWithoutCreatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  create: UserMealLocationCreateWithoutCreatedByUserInput!
}

input UserMealLocationCreateManyCreatedByUserInputEnvelope {
  data: [UserMealLocationCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserMealLocationCreateManyCreatedByUserInput {
  id: Int
  userId: Int!
  timeOfDay: TimeOfDay
  name: MealLocation
}

input UserMealLocationCreateNestedManyWithoutUserInput {
  create: [UserMealLocationCreateWithoutUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutUserInput!]
  createMany: UserMealLocationCreateManyUserInputEnvelope
  connect: [UserMealLocationWhereUniqueInput!]
}

input UserMealLocationCreateWithoutUserInput {
  timeOfDay: TimeOfDay
  name: MealLocation
}

input UserMealLocationCreateOrConnectWithoutUserInput {
  where: UserMealLocationWhereUniqueInput!
  create: UserMealLocationCreateWithoutUserInput!
}

input UserMealLocationCreateManyUserInputEnvelope {
  data: [UserMealLocationCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserMealLocationCreateManyUserInput {
  id: Int
  timeOfDay: TimeOfDay
  name: MealLocation
}

input UserCreateOrConnectWithoutUserMealInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutUserMealInput!
}

input UserMealCreateOrConnectWithoutCreatedByUserInput {
  where: UserMealWhereUniqueInput!
  create: UserMealCreateWithoutCreatedByUserInput!
}

input UserMealCreateManyCreatedByUserInputEnvelope {
  data: [UserMealCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserMealCreateManyCreatedByUserInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input UserCreateOrConnectWithoutUserRoleInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutUserRoleInput!
}

input UserRoleCreateOrConnectWithoutCreatedByUserInput {
  where: UserRoleWhereUniqueInput!
  create: UserRoleCreateWithoutCreatedByUserInput!
}

input UserRoleCreateManyCreatedByUserInputEnvelope {
  data: [UserRoleCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserRoleCreateManyCreatedByUserInput {
  id: Int
  userId: Int!
  name: UserRoleName!
}

input UserCreateOrConnectWithoutUpdatedByUserInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutUpdatedByUserInput!
}

input UserCreateManyUpdatedByUserInputEnvelope {
  data: [UserCreateManyUpdatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserCreateManyUpdatedByUserInput {
  id: Int
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
}

input UserCreateOrConnectWithoutCreatedByUserInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutCreatedByUserInput!
}

input UserCreateManyCreatedByUserInputEnvelope {
  data: [UserCreateManyCreatedByUserInput!]!
  skipDuplicates: Boolean
}

input UserCreateManyCreatedByUserInput {
  id: Int
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
}

input UserCreateOrConnectWithoutAllergensInput {
  where: UserWhereUniqueInput!
  create: UserCreateWithoutAllergensInput!
}

input AllergensCreateOrConnectWithoutMealsInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutAdditivesInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutAdditivesInput!
}

input AdditivesCreateOrConnectWithoutRecipesInput {
  where: AdditivesWhereUniqueInput!
  create: AdditivesCreateWithoutRecipesInput!
}

input RecipeCreateOrConnectWithoutAllergensInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutAllergensInput!
}

input AllergensCreateOrConnectWithoutIngredientsInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutIngredientsInput!
}

input IngredientCreateOrConnectWithoutAdditivesInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutAdditivesInput!
}

input AdditivesCreateOrConnectWithoutMealsInput {
  where: AdditivesWhereUniqueInput!
  create: AdditivesCreateWithoutMealsInput!
}

input MealCreateOrConnectWithoutAllergensInput {
  where: MealWhereUniqueInput!
  create: MealCreateWithoutAllergensInput!
}

input AllergensCreateOrConnectWithoutRecipesInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutRecipesInput!
}

input RecipeCreateOrConnectWithoutAdditivesInput {
  where: RecipeWhereUniqueInput!
  create: RecipeCreateWithoutAdditivesInput!
}

input AdditivesCreateOrConnectWithoutIngredientsInput {
  where: AdditivesWhereUniqueInput!
  create: AdditivesCreateWithoutIngredientsInput!
}

input IngredientCreateOrConnectWithoutAllergensInput {
  where: IngredientWhereUniqueInput!
  create: IngredientCreateWithoutAllergensInput!
}

input AllergensCreateOrConnectWithoutUsersInput {
  where: AllergensWhereUniqueInput!
  create: AllergensCreateWithoutUsersInput!
}

input UserCreateManyInput {
  id: Int
  image: String
  username: String!
  email: String!
  lastOnline: DateTime
  status: Boolean
}

input UserUpdateInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input AllergensUpdateManyWithoutUsersNestedInput {
  create: [AllergensCreateWithoutUsersInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutUsersInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutUsersInput!]
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutUsersInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutUsersInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutUsersInput!
  create: AllergensCreateWithoutUsersInput!
}

input AllergensUpdateWithoutUsersInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAllergensNestedInput
  recipes: RecipeUpdateManyWithoutAllergensNestedInput
  meals: MealUpdateManyWithoutAllergensNestedInput
}

input IngredientUpdateManyWithoutAllergensNestedInput {
  create: [IngredientCreateWithoutAllergensInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutAllergensInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutAllergensInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutAllergensInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutAllergensInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutAllergensInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutAllergensInput!
  create: IngredientCreateWithoutAllergensInput!
}

input IngredientUpdateWithoutAllergensInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input DecimalFieldUpdateOperationsInput {
  set: Decimal
  increment: Decimal
  decrement: Decimal
  multiply: Decimal
  divide: Decimal
}

input AdditivesUpdateManyWithoutIngredientsNestedInput {
  create: [AdditivesCreateWithoutIngredientsInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutIngredientsInput!]
  upsert: [AdditivesUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [AdditivesWhereUniqueInput!]
  disconnect: [AdditivesWhereUniqueInput!]
  delete: [AdditivesWhereUniqueInput!]
  connect: [AdditivesWhereUniqueInput!]
  update: [AdditivesUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [AdditivesUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [AdditivesScalarWhereInput!]
}

input AdditivesUpsertWithWhereUniqueWithoutIngredientsInput {
  where: AdditivesWhereUniqueInput!
  update: AdditivesUpdateWithoutIngredientsInput!
  create: AdditivesCreateWithoutIngredientsInput!
}

input AdditivesUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutAdditivesNestedInput
  meals: MealUpdateManyWithoutAdditivesNestedInput
}

input RecipeUpdateManyWithoutAdditivesNestedInput {
  create: [RecipeCreateWithoutAdditivesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutAdditivesInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutAdditivesInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutAdditivesInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutAdditivesInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutAdditivesInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutAdditivesInput!
  create: RecipeCreateWithoutAdditivesInput!
}

input RecipeUpdateWithoutAdditivesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input AllergensUpdateManyWithoutRecipesNestedInput {
  create: [AllergensCreateWithoutRecipesInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutRecipesInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutRecipesInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutRecipesInput!
  create: AllergensCreateWithoutRecipesInput!
}

input AllergensUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAllergensNestedInput
  meals: MealUpdateManyWithoutAllergensNestedInput
  users: UserUpdateManyWithoutAllergensNestedInput
}

input MealUpdateManyWithoutAllergensNestedInput {
  create: [MealCreateWithoutAllergensInput!]
  connectOrCreate: [MealCreateOrConnectWithoutAllergensInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutAllergensInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutAllergensInput!]
  updateMany: [MealUpdateManyWithWhereWithoutAllergensInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutAllergensInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutAllergensInput!
  create: MealCreateWithoutAllergensInput!
}

input MealUpdateWithoutAllergensInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input AdditivesUpdateManyWithoutMealsNestedInput {
  create: [AdditivesCreateWithoutMealsInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutMealsInput!]
  upsert: [AdditivesUpsertWithWhereUniqueWithoutMealsInput!]
  set: [AdditivesWhereUniqueInput!]
  disconnect: [AdditivesWhereUniqueInput!]
  delete: [AdditivesWhereUniqueInput!]
  connect: [AdditivesWhereUniqueInput!]
  update: [AdditivesUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [AdditivesUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [AdditivesScalarWhereInput!]
}

input AdditivesUpsertWithWhereUniqueWithoutMealsInput {
  where: AdditivesWhereUniqueInput!
  update: AdditivesUpdateWithoutMealsInput!
  create: AdditivesCreateWithoutMealsInput!
}

input AdditivesUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAdditivesNestedInput
  recipes: RecipeUpdateManyWithoutAdditivesNestedInput
}

input IngredientUpdateManyWithoutAdditivesNestedInput {
  create: [IngredientCreateWithoutAdditivesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutAdditivesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutAdditivesInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutAdditivesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutAdditivesInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutAdditivesInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutAdditivesInput!
  create: IngredientCreateWithoutAdditivesInput!
}

input IngredientUpdateWithoutAdditivesInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input AllergensUpdateManyWithoutIngredientsNestedInput {
  create: [AllergensCreateWithoutIngredientsInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutIngredientsInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutIngredientsInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutIngredientsInput!
  create: AllergensCreateWithoutIngredientsInput!
}

input AllergensUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutAllergensNestedInput
  meals: MealUpdateManyWithoutAllergensNestedInput
  users: UserUpdateManyWithoutAllergensNestedInput
}

input RecipeUpdateManyWithoutAllergensNestedInput {
  create: [RecipeCreateWithoutAllergensInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutAllergensInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutAllergensInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutAllergensInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutAllergensInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutAllergensInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutAllergensInput!
  create: RecipeCreateWithoutAllergensInput!
}

input RecipeUpdateWithoutAllergensInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input AdditivesUpdateManyWithoutRecipesNestedInput {
  create: [AdditivesCreateWithoutRecipesInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutRecipesInput!]
  upsert: [AdditivesUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [AdditivesWhereUniqueInput!]
  disconnect: [AdditivesWhereUniqueInput!]
  delete: [AdditivesWhereUniqueInput!]
  connect: [AdditivesWhereUniqueInput!]
  update: [AdditivesUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [AdditivesUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [AdditivesScalarWhereInput!]
}

input AdditivesUpsertWithWhereUniqueWithoutRecipesInput {
  where: AdditivesWhereUniqueInput!
  update: AdditivesUpdateWithoutRecipesInput!
  create: AdditivesCreateWithoutRecipesInput!
}

input AdditivesUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAdditivesNestedInput
  meals: MealUpdateManyWithoutAdditivesNestedInput
}

input MealUpdateManyWithoutAdditivesNestedInput {
  create: [MealCreateWithoutAdditivesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutAdditivesInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutAdditivesInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutAdditivesInput!]
  updateMany: [MealUpdateManyWithWhereWithoutAdditivesInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutAdditivesInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutAdditivesInput!
  create: MealCreateWithoutAdditivesInput!
}

input MealUpdateWithoutAdditivesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input AllergensUpdateManyWithoutMealsNestedInput {
  create: [AllergensCreateWithoutMealsInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutMealsInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutMealsInput!]
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutMealsInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutMealsInput!
  create: AllergensCreateWithoutMealsInput!
}

input AllergensUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAllergensNestedInput
  recipes: RecipeUpdateManyWithoutAllergensNestedInput
  users: UserUpdateManyWithoutAllergensNestedInput
}

input UserUpdateManyWithoutAllergensNestedInput {
  create: [UserCreateWithoutAllergensInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAllergensInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutAllergensInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutAllergensInput!]
  updateMany: [UserUpdateManyWithWhereWithoutAllergensInput!]
  deleteMany: [UserScalarWhereInput!]
}

input UserUpsertWithWhereUniqueWithoutAllergensInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutAllergensInput!
  create: UserCreateWithoutAllergensInput!
}

input UserUpdateWithoutAllergensInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input TokenUpdateManyWithoutCreatedByUserNestedInput {
  create: [TokenCreateWithoutCreatedByUserInput!]
  connectOrCreate: [TokenCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [TokenUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: TokenCreateManyCreatedByUserInputEnvelope
  set: [TokenWhereUniqueInput!]
  disconnect: [TokenWhereUniqueInput!]
  delete: [TokenWhereUniqueInput!]
  connect: [TokenWhereUniqueInput!]
  update: [TokenUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [TokenUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [TokenScalarWhereInput!]
}

input TokenUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: TokenWhereUniqueInput!
  update: TokenUpdateWithoutCreatedByUserInput!
  create: TokenCreateWithoutCreatedByUserInput!
}

input TokenUpdateWithoutCreatedByUserInput {
  token: StringFieldUpdateOperationsInput
  expiresIn: DateTimeFieldUpdateOperationsInput
}

input TokenUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: TokenWhereUniqueInput!
  data: TokenUpdateWithoutCreatedByUserInput!
}

input TokenUpdateManyWithWhereWithoutCreatedByUserInput {
  where: TokenScalarWhereInput!
  data: TokenUpdateManyMutationInput!
}

input TokenScalarWhereInput {
  AND: [TokenScalarWhereInput!]
  OR: [TokenScalarWhereInput!]
  NOT: [TokenScalarWhereInput!]
  id: IntFilter
  token: StringFilter
  expiresIn: DateTimeFilter
}

input TokenUpdateManyMutationInput {
  token: StringFieldUpdateOperationsInput
  expiresIn: DateTimeFieldUpdateOperationsInput
}

input TokenUpdateManyWithoutUpdatedByUserNestedInput {
  create: [TokenCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [TokenCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [TokenUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: TokenCreateManyUpdatedByUserInputEnvelope
  set: [TokenWhereUniqueInput!]
  disconnect: [TokenWhereUniqueInput!]
  delete: [TokenWhereUniqueInput!]
  connect: [TokenWhereUniqueInput!]
  update: [TokenUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [TokenUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [TokenScalarWhereInput!]
}

input TokenUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: TokenWhereUniqueInput!
  update: TokenUpdateWithoutUpdatedByUserInput!
  create: TokenCreateWithoutUpdatedByUserInput!
}

input TokenUpdateWithoutUpdatedByUserInput {
  token: StringFieldUpdateOperationsInput
  expiresIn: DateTimeFieldUpdateOperationsInput
}

input TokenUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: TokenWhereUniqueInput!
  data: TokenUpdateWithoutUpdatedByUserInput!
}

input TokenUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: TokenScalarWhereInput!
  data: TokenUpdateManyMutationInput!
}

input UserUpdateManyWithoutCreatedByUserNestedInput {
  create: [UserCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: UserCreateManyCreatedByUserInputEnvelope
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [UserUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [UserScalarWhereInput!]
}

input UserUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutCreatedByUserInput!
  create: UserCreateWithoutCreatedByUserInput!
}

input UserUpdateWithoutCreatedByUserInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input UserUpdateManyWithoutUpdatedByUserNestedInput {
  create: [UserCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: UserCreateManyUpdatedByUserInputEnvelope
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [UserUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [UserScalarWhereInput!]
}

input UserUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutUpdatedByUserInput!
  create: UserCreateWithoutUpdatedByUserInput!
}

input UserUpdateWithoutUpdatedByUserInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input UserRoleUpdateManyWithoutCreatedByUserNestedInput {
  create: [UserRoleCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [UserRoleUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: UserRoleCreateManyCreatedByUserInputEnvelope
  set: [UserRoleWhereUniqueInput!]
  disconnect: [UserRoleWhereUniqueInput!]
  delete: [UserRoleWhereUniqueInput!]
  connect: [UserRoleWhereUniqueInput!]
  update: [UserRoleUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [UserRoleUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [UserRoleScalarWhereInput!]
}

input UserRoleUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: UserRoleWhereUniqueInput!
  update: UserRoleUpdateWithoutCreatedByUserInput!
  create: UserRoleCreateWithoutCreatedByUserInput!
}

input UserRoleUpdateWithoutCreatedByUserInput {
  name: EnumUserRoleNameFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserRoleNestedInput
}

input EnumUserRoleNameFieldUpdateOperationsInput {
  set: UserRoleName
}

input UserUpdateOneRequiredWithoutUserRoleNestedInput {
  create: UserCreateWithoutUserRoleInput
  connectOrCreate: UserCreateOrConnectWithoutUserRoleInput
  upsert: UserUpsertWithoutUserRoleInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutUserRoleInput
}

input UserUpsertWithoutUserRoleInput {
  update: UserUpdateWithoutUserRoleInput!
  create: UserCreateWithoutUserRoleInput!
  where: UserWhereInput
}

input UserUpdateWithoutUserRoleInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input UserRoleUpdateManyWithoutUpdatedByUserNestedInput {
  create: [UserRoleCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [UserRoleUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: UserRoleCreateManyUpdatedByUserInputEnvelope
  set: [UserRoleWhereUniqueInput!]
  disconnect: [UserRoleWhereUniqueInput!]
  delete: [UserRoleWhereUniqueInput!]
  connect: [UserRoleWhereUniqueInput!]
  update: [UserRoleUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [UserRoleUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [UserRoleScalarWhereInput!]
}

input UserRoleUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserRoleWhereUniqueInput!
  update: UserRoleUpdateWithoutUpdatedByUserInput!
  create: UserRoleCreateWithoutUpdatedByUserInput!
}

input UserRoleUpdateWithoutUpdatedByUserInput {
  name: EnumUserRoleNameFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserRoleNestedInput
}

input UserRoleUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserRoleWhereUniqueInput!
  data: UserRoleUpdateWithoutUpdatedByUserInput!
}

input UserRoleUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: UserRoleScalarWhereInput!
  data: UserRoleUpdateManyMutationInput!
}

input UserRoleScalarWhereInput {
  AND: [UserRoleScalarWhereInput!]
  OR: [UserRoleScalarWhereInput!]
  NOT: [UserRoleScalarWhereInput!]
  id: IntFilter
  userId: IntFilter
  name: EnumUserRoleNameFilter
}

input UserRoleUpdateManyMutationInput {
  name: EnumUserRoleNameFieldUpdateOperationsInput
}

input UserMealUpdateManyWithoutCreatedByUserNestedInput {
  create: [UserMealCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: UserMealCreateManyCreatedByUserInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutCreatedByUserInput!
  create: UserMealCreateWithoutCreatedByUserInput!
}

input UserMealUpdateWithoutCreatedByUserInput {
  date: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealNestedInput
  meal: MealUpdateOneRequiredWithoutUserMealNestedInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput
  weeklyMealGroup: WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput
}

input UserUpdateOneRequiredWithoutUserMealNestedInput {
  create: UserCreateWithoutUserMealInput
  connectOrCreate: UserCreateOrConnectWithoutUserMealInput
  upsert: UserUpsertWithoutUserMealInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutUserMealInput
}

input UserUpsertWithoutUserMealInput {
  update: UserUpdateWithoutUserMealInput!
  create: UserCreateWithoutUserMealInput!
  where: UserWhereInput
}

input UserUpdateWithoutUserMealInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  UserMealLocation: UserMealLocationUpdateManyWithoutUserNestedInput
}

input UserMealUpdateManyWithoutUpdatedByUserNestedInput {
  create: [UserMealCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: UserMealCreateManyUpdatedByUserInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutUpdatedByUserInput!
  create: UserMealCreateWithoutUpdatedByUserInput!
}

input UserMealUpdateWithoutUpdatedByUserInput {
  date: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealNestedInput
  meal: MealUpdateOneRequiredWithoutUserMealNestedInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput
  weeklyMealGroup: WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput
}

input MealUpdateOneRequiredWithoutUserMealNestedInput {
  create: MealCreateWithoutUserMealInput
  connectOrCreate: MealCreateOrConnectWithoutUserMealInput
  upsert: MealUpsertWithoutUserMealInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutUserMealInput
}

input MealUpsertWithoutUserMealInput {
  update: MealUpdateWithoutUserMealInput!
  create: MealCreateWithoutUserMealInput!
  where: MealWhereInput
}

input MealUpdateWithoutUserMealInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
}

input PropertiesUpdateManyWithoutMealsNestedInput {
  create: [PropertiesCreateWithoutMealsInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutMealsInput!]
  upsert: [PropertiesUpsertWithWhereUniqueWithoutMealsInput!]
  set: [PropertiesWhereUniqueInput!]
  disconnect: [PropertiesWhereUniqueInput!]
  delete: [PropertiesWhereUniqueInput!]
  connect: [PropertiesWhereUniqueInput!]
  update: [PropertiesUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [PropertiesUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [PropertiesScalarWhereInput!]
}

input PropertiesUpsertWithWhereUniqueWithoutMealsInput {
  where: PropertiesWhereUniqueInput!
  update: PropertiesUpdateWithoutMealsInput!
  create: PropertiesCreateWithoutMealsInput!
}

input PropertiesUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutPropertiesNestedInput
  recipes: RecipeUpdateManyWithoutPropertiesNestedInput
}

input IngredientUpdateManyWithoutPropertiesNestedInput {
  create: [IngredientCreateWithoutPropertiesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutPropertiesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutPropertiesInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutPropertiesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutPropertiesInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutPropertiesInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutPropertiesInput!
  create: IngredientCreateWithoutPropertiesInput!
}

input IngredientUpdateWithoutPropertiesInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input CategoriesUpdateManyWithoutIngredientsNestedInput {
  create: [CategoriesCreateWithoutIngredientsInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutIngredientsInput!]
  upsert: [CategoriesUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [CategoriesWhereUniqueInput!]
  disconnect: [CategoriesWhereUniqueInput!]
  delete: [CategoriesWhereUniqueInput!]
  connect: [CategoriesWhereUniqueInput!]
  update: [CategoriesUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [CategoriesUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [CategoriesScalarWhereInput!]
}

input CategoriesUpsertWithWhereUniqueWithoutIngredientsInput {
  where: CategoriesWhereUniqueInput!
  update: CategoriesUpdateWithoutIngredientsInput!
  create: CategoriesCreateWithoutIngredientsInput!
}

input CategoriesUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutCategoriesNestedInput
  meals: MealUpdateManyWithoutCategoriesNestedInput
}

input RecipeUpdateManyWithoutCategoriesNestedInput {
  create: [RecipeCreateWithoutCategoriesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutCategoriesInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutCategoriesInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutCategoriesInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutCategoriesInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutCategoriesInput!
  create: RecipeCreateWithoutCategoriesInput!
}

input RecipeUpdateWithoutCategoriesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input PropertiesUpdateManyWithoutRecipesNestedInput {
  create: [PropertiesCreateWithoutRecipesInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutRecipesInput!]
  upsert: [PropertiesUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [PropertiesWhereUniqueInput!]
  disconnect: [PropertiesWhereUniqueInput!]
  delete: [PropertiesWhereUniqueInput!]
  connect: [PropertiesWhereUniqueInput!]
  update: [PropertiesUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [PropertiesUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [PropertiesScalarWhereInput!]
}

input PropertiesUpsertWithWhereUniqueWithoutRecipesInput {
  where: PropertiesWhereUniqueInput!
  update: PropertiesUpdateWithoutRecipesInput!
  create: PropertiesCreateWithoutRecipesInput!
}

input PropertiesUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutPropertiesNestedInput
  meals: MealUpdateManyWithoutPropertiesNestedInput
}

input MealUpdateManyWithoutPropertiesNestedInput {
  create: [MealCreateWithoutPropertiesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutPropertiesInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutPropertiesInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutPropertiesInput!]
  updateMany: [MealUpdateManyWithWhereWithoutPropertiesInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutPropertiesInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutPropertiesInput!
  create: MealCreateWithoutPropertiesInput!
}

input MealUpdateWithoutPropertiesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input CategoriesUpdateManyWithoutMealsNestedInput {
  create: [CategoriesCreateWithoutMealsInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutMealsInput!]
  upsert: [CategoriesUpsertWithWhereUniqueWithoutMealsInput!]
  set: [CategoriesWhereUniqueInput!]
  disconnect: [CategoriesWhereUniqueInput!]
  delete: [CategoriesWhereUniqueInput!]
  connect: [CategoriesWhereUniqueInput!]
  update: [CategoriesUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [CategoriesUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [CategoriesScalarWhereInput!]
}

input CategoriesUpsertWithWhereUniqueWithoutMealsInput {
  where: CategoriesWhereUniqueInput!
  update: CategoriesUpdateWithoutMealsInput!
  create: CategoriesCreateWithoutMealsInput!
}

input CategoriesUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutCategoriesNestedInput
  recipes: RecipeUpdateManyWithoutCategoriesNestedInput
}

input IngredientUpdateManyWithoutCategoriesNestedInput {
  create: [IngredientCreateWithoutCategoriesInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutCategoriesInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutCategoriesInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutCategoriesInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutCategoriesInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutCategoriesInput!
  create: IngredientCreateWithoutCategoriesInput!
}

input IngredientUpdateWithoutCategoriesInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input PropertiesUpdateManyWithoutIngredientsNestedInput {
  create: [PropertiesCreateWithoutIngredientsInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutIngredientsInput!]
  upsert: [PropertiesUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [PropertiesWhereUniqueInput!]
  disconnect: [PropertiesWhereUniqueInput!]
  delete: [PropertiesWhereUniqueInput!]
  connect: [PropertiesWhereUniqueInput!]
  update: [PropertiesUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [PropertiesUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [PropertiesScalarWhereInput!]
}

input PropertiesUpsertWithWhereUniqueWithoutIngredientsInput {
  where: PropertiesWhereUniqueInput!
  update: PropertiesUpdateWithoutIngredientsInput!
  create: PropertiesCreateWithoutIngredientsInput!
}

input PropertiesUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutPropertiesNestedInput
  meals: MealUpdateManyWithoutPropertiesNestedInput
}

input RecipeUpdateManyWithoutPropertiesNestedInput {
  create: [RecipeCreateWithoutPropertiesInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutPropertiesInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutPropertiesInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutPropertiesInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutPropertiesInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutPropertiesInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutPropertiesInput!
  create: RecipeCreateWithoutPropertiesInput!
}

input RecipeUpdateWithoutPropertiesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input CategoriesUpdateManyWithoutRecipesNestedInput {
  create: [CategoriesCreateWithoutRecipesInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutRecipesInput!]
  upsert: [CategoriesUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [CategoriesWhereUniqueInput!]
  disconnect: [CategoriesWhereUniqueInput!]
  delete: [CategoriesWhereUniqueInput!]
  connect: [CategoriesWhereUniqueInput!]
  update: [CategoriesUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [CategoriesUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [CategoriesScalarWhereInput!]
}

input CategoriesUpsertWithWhereUniqueWithoutRecipesInput {
  where: CategoriesWhereUniqueInput!
  update: CategoriesUpdateWithoutRecipesInput!
  create: CategoriesCreateWithoutRecipesInput!
}

input CategoriesUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutCategoriesNestedInput
  meals: MealUpdateManyWithoutCategoriesNestedInput
}

input MealUpdateManyWithoutCategoriesNestedInput {
  create: [MealCreateWithoutCategoriesInput!]
  connectOrCreate: [MealCreateOrConnectWithoutCategoriesInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutCategoriesInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [MealUpdateManyWithWhereWithoutCategoriesInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutCategoriesInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutCategoriesInput!
  create: MealCreateWithoutCategoriesInput!
}

input MealUpdateWithoutCategoriesInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input SeasonsUpdateManyWithoutMealsNestedInput {
  create: [SeasonsCreateWithoutMealsInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutMealsInput!]
  upsert: [SeasonsUpsertWithWhereUniqueWithoutMealsInput!]
  set: [SeasonsWhereUniqueInput!]
  disconnect: [SeasonsWhereUniqueInput!]
  delete: [SeasonsWhereUniqueInput!]
  connect: [SeasonsWhereUniqueInput!]
  update: [SeasonsUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [SeasonsUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [SeasonsScalarWhereInput!]
}

input SeasonsUpsertWithWhereUniqueWithoutMealsInput {
  where: SeasonsWhereUniqueInput!
  update: SeasonsUpdateWithoutMealsInput!
  create: SeasonsCreateWithoutMealsInput!
}

input SeasonsUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutSeasonsNestedInput
  recipes: RecipeUpdateManyWithoutSeasonsNestedInput
}

input IngredientUpdateManyWithoutSeasonsNestedInput {
  create: [IngredientCreateWithoutSeasonsInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutSeasonsInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutSeasonsInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutSeasonsInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutSeasonsInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutSeasonsInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutSeasonsInput!
  create: IngredientCreateWithoutSeasonsInput!
}

input IngredientUpdateWithoutSeasonsInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input FoodFormsUpdateManyWithoutIngredientsNestedInput {
  create: [FoodFormsCreateWithoutIngredientsInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutIngredientsInput!]
  upsert: [FoodFormsUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [FoodFormsWhereUniqueInput!]
  disconnect: [FoodFormsWhereUniqueInput!]
  delete: [FoodFormsWhereUniqueInput!]
  connect: [FoodFormsWhereUniqueInput!]
  update: [FoodFormsUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [FoodFormsUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [FoodFormsScalarWhereInput!]
}

input FoodFormsUpsertWithWhereUniqueWithoutIngredientsInput {
  where: FoodFormsWhereUniqueInput!
  update: FoodFormsUpdateWithoutIngredientsInput!
  create: FoodFormsCreateWithoutIngredientsInput!
}

input FoodFormsUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutFoodFormsNestedInput
  meals: MealUpdateManyWithoutFoodFormsNestedInput
}

input RecipeUpdateManyWithoutFoodFormsNestedInput {
  create: [RecipeCreateWithoutFoodFormsInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutFoodFormsInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutFoodFormsInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutFoodFormsInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutFoodFormsInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutFoodFormsInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutFoodFormsInput!
  create: RecipeCreateWithoutFoodFormsInput!
}

input RecipeUpdateWithoutFoodFormsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input SeasonsUpdateManyWithoutRecipesNestedInput {
  create: [SeasonsCreateWithoutRecipesInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutRecipesInput!]
  upsert: [SeasonsUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [SeasonsWhereUniqueInput!]
  disconnect: [SeasonsWhereUniqueInput!]
  delete: [SeasonsWhereUniqueInput!]
  connect: [SeasonsWhereUniqueInput!]
  update: [SeasonsUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [SeasonsUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [SeasonsScalarWhereInput!]
}

input SeasonsUpsertWithWhereUniqueWithoutRecipesInput {
  where: SeasonsWhereUniqueInput!
  update: SeasonsUpdateWithoutRecipesInput!
  create: SeasonsCreateWithoutRecipesInput!
}

input SeasonsUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutSeasonsNestedInput
  meals: MealUpdateManyWithoutSeasonsNestedInput
}

input MealUpdateManyWithoutSeasonsNestedInput {
  create: [MealCreateWithoutSeasonsInput!]
  connectOrCreate: [MealCreateOrConnectWithoutSeasonsInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutSeasonsInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutSeasonsInput!]
  updateMany: [MealUpdateManyWithWhereWithoutSeasonsInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutSeasonsInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutSeasonsInput!
  create: MealCreateWithoutSeasonsInput!
}

input MealUpdateWithoutSeasonsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input FoodFormsUpdateManyWithoutMealsNestedInput {
  create: [FoodFormsCreateWithoutMealsInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutMealsInput!]
  upsert: [FoodFormsUpsertWithWhereUniqueWithoutMealsInput!]
  set: [FoodFormsWhereUniqueInput!]
  disconnect: [FoodFormsWhereUniqueInput!]
  delete: [FoodFormsWhereUniqueInput!]
  connect: [FoodFormsWhereUniqueInput!]
  update: [FoodFormsUpdateWithWhereUniqueWithoutMealsInput!]
  updateMany: [FoodFormsUpdateManyWithWhereWithoutMealsInput!]
  deleteMany: [FoodFormsScalarWhereInput!]
}

input FoodFormsUpsertWithWhereUniqueWithoutMealsInput {
  where: FoodFormsWhereUniqueInput!
  update: FoodFormsUpdateWithoutMealsInput!
  create: FoodFormsCreateWithoutMealsInput!
}

input FoodFormsUpdateWithoutMealsInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutFoodFormsNestedInput
  recipes: RecipeUpdateManyWithoutFoodFormsNestedInput
}

input IngredientUpdateManyWithoutFoodFormsNestedInput {
  create: [IngredientCreateWithoutFoodFormsInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutFoodFormsInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutFoodFormsInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutFoodFormsInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutFoodFormsInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutFoodFormsInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutFoodFormsInput!
  create: IngredientCreateWithoutFoodFormsInput!
}

input IngredientUpdateWithoutFoodFormsInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input SeasonsUpdateManyWithoutIngredientsNestedInput {
  create: [SeasonsCreateWithoutIngredientsInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutIngredientsInput!]
  upsert: [SeasonsUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [SeasonsWhereUniqueInput!]
  disconnect: [SeasonsWhereUniqueInput!]
  delete: [SeasonsWhereUniqueInput!]
  connect: [SeasonsWhereUniqueInput!]
  update: [SeasonsUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [SeasonsUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [SeasonsScalarWhereInput!]
}

input SeasonsUpsertWithWhereUniqueWithoutIngredientsInput {
  where: SeasonsWhereUniqueInput!
  update: SeasonsUpdateWithoutIngredientsInput!
  create: SeasonsCreateWithoutIngredientsInput!
}

input SeasonsUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutSeasonsNestedInput
  meals: MealUpdateManyWithoutSeasonsNestedInput
}

input RecipeUpdateManyWithoutSeasonsNestedInput {
  create: [RecipeCreateWithoutSeasonsInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutSeasonsInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutSeasonsInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutSeasonsInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutSeasonsInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutSeasonsInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutSeasonsInput!
  create: RecipeCreateWithoutSeasonsInput!
}

input RecipeUpdateWithoutSeasonsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input FoodFormsUpdateManyWithoutRecipesNestedInput {
  create: [FoodFormsCreateWithoutRecipesInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutRecipesInput!]
  upsert: [FoodFormsUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [FoodFormsWhereUniqueInput!]
  disconnect: [FoodFormsWhereUniqueInput!]
  delete: [FoodFormsWhereUniqueInput!]
  connect: [FoodFormsWhereUniqueInput!]
  update: [FoodFormsUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [FoodFormsUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [FoodFormsScalarWhereInput!]
}

input FoodFormsUpsertWithWhereUniqueWithoutRecipesInput {
  where: FoodFormsWhereUniqueInput!
  update: FoodFormsUpdateWithoutRecipesInput!
  create: FoodFormsCreateWithoutRecipesInput!
}

input FoodFormsUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutFoodFormsNestedInput
  meals: MealUpdateManyWithoutFoodFormsNestedInput
}

input MealUpdateManyWithoutFoodFormsNestedInput {
  create: [MealCreateWithoutFoodFormsInput!]
  connectOrCreate: [MealCreateOrConnectWithoutFoodFormsInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutFoodFormsInput!]
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutFoodFormsInput!]
  updateMany: [MealUpdateManyWithWhereWithoutFoodFormsInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutFoodFormsInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutFoodFormsInput!
  create: MealCreateWithoutFoodFormsInput!
}

input MealUpdateWithoutFoodFormsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutMondayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutMondayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutMondayMealInput!]
  createMany: WeeklyMealGroupCreateManyMondayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutMondayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutMondayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutMondayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutMondayMealInput!
  create: WeeklyMealGroupCreateWithoutMondayMealInput!
}

input WeeklyMealGroupUpdateWithoutMondayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input EnumTimeOfDayFieldUpdateOperationsInput {
  set: TimeOfDay
}

input IntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput {
  create: MealBoardPlanCreateWithoutWeeklyMealGroupInput
  connectOrCreate: MealBoardPlanCreateOrConnectWithoutWeeklyMealGroupInput
  upsert: MealBoardPlanUpsertWithoutWeeklyMealGroupInput
  connect: MealBoardPlanWhereUniqueInput
  update: MealBoardPlanUpdateToOneWithWhereWithoutWeeklyMealGroupInput
}

input MealBoardPlanUpsertWithoutWeeklyMealGroupInput {
  update: MealBoardPlanUpdateWithoutWeeklyMealGroupInput!
  create: MealBoardPlanCreateWithoutWeeklyMealGroupInput!
  where: MealBoardPlanWhereInput
}

input MealBoardPlanUpdateWithoutWeeklyMealGroupInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  UserMeal: UserMealUpdateManyWithoutMealBoardPlanNestedInput
}

input UserMealUpdateManyWithoutMealBoardPlanNestedInput {
  create: [UserMealCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutMealBoardPlanInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutMealBoardPlanInput!]
  createMany: UserMealCreateManyMealBoardPlanInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutMealBoardPlanInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutMealBoardPlanInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutMealBoardPlanInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutMealBoardPlanInput!
  create: UserMealCreateWithoutMealBoardPlanInput!
}

input UserMealUpdateWithoutMealBoardPlanInput {
  date: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealNestedInput
  meal: MealUpdateOneRequiredWithoutUserMealNestedInput
  weeklyMealGroup: WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput
}

input WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput {
  create: WeeklyMealGroupCreateWithoutUserMealInput
  connectOrCreate: WeeklyMealGroupCreateOrConnectWithoutUserMealInput
  upsert: WeeklyMealGroupUpsertWithoutUserMealInput
  connect: WeeklyMealGroupWhereUniqueInput
  update: WeeklyMealGroupUpdateToOneWithWhereWithoutUserMealInput
}

input WeeklyMealGroupUpsertWithoutUserMealInput {
  update: WeeklyMealGroupUpdateWithoutUserMealInput!
  create: WeeklyMealGroupCreateWithoutUserMealInput!
  where: WeeklyMealGroupWhereInput
}

input WeeklyMealGroupUpdateWithoutUserMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
}

input MealUpdateOneWithoutMondayMealGroupsNestedInput {
  create: MealCreateWithoutMondayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutMondayMealGroupsInput
  upsert: MealUpsertWithoutMondayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutMondayMealGroupsInput
}

input MealUpsertWithoutMondayMealGroupsInput {
  update: MealUpdateWithoutMondayMealGroupsInput!
  create: MealCreateWithoutMondayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutMondayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutTuesdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutTuesdayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutTuesdayMealInput!]
  createMany: WeeklyMealGroupCreateManyTuesdayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutTuesdayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutTuesdayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutTuesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutTuesdayMealInput!
  create: WeeklyMealGroupCreateWithoutTuesdayMealInput!
}

input WeeklyMealGroupUpdateWithoutTuesdayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutWednesdayMealGroupsNestedInput {
  create: MealCreateWithoutWednesdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutWednesdayMealGroupsInput
  upsert: MealUpsertWithoutWednesdayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutWednesdayMealGroupsInput
}

input MealUpsertWithoutWednesdayMealGroupsInput {
  update: MealUpdateWithoutWednesdayMealGroupsInput!
  create: MealCreateWithoutWednesdayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutWednesdayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutThursdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutThursdayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutThursdayMealInput!]
  createMany: WeeklyMealGroupCreateManyThursdayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutThursdayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutThursdayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutThursdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutThursdayMealInput!
  create: WeeklyMealGroupCreateWithoutThursdayMealInput!
}

input WeeklyMealGroupUpdateWithoutThursdayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutTuesdayMealGroupsNestedInput {
  create: MealCreateWithoutTuesdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutTuesdayMealGroupsInput
  upsert: MealUpsertWithoutTuesdayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutTuesdayMealGroupsInput
}

input MealUpsertWithoutTuesdayMealGroupsInput {
  update: MealUpdateWithoutTuesdayMealGroupsInput!
  create: MealCreateWithoutTuesdayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutTuesdayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutWednesdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutWednesdayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutWednesdayMealInput!]
  createMany: WeeklyMealGroupCreateManyWednesdayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutWednesdayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutWednesdayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutWednesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutWednesdayMealInput!
  create: WeeklyMealGroupCreateWithoutWednesdayMealInput!
}

input WeeklyMealGroupUpdateWithoutWednesdayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutThursdayMealGroupsNestedInput {
  create: MealCreateWithoutThursdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutThursdayMealGroupsInput
  upsert: MealUpsertWithoutThursdayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutThursdayMealGroupsInput
}

input MealUpsertWithoutThursdayMealGroupsInput {
  update: MealUpdateWithoutThursdayMealGroupsInput!
  create: MealCreateWithoutThursdayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutThursdayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutFridayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutFridayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutFridayMealInput!]
  createMany: WeeklyMealGroupCreateManyFridayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutFridayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutFridayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutFridayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutFridayMealInput!
  create: WeeklyMealGroupCreateWithoutFridayMealInput!
}

input WeeklyMealGroupUpdateWithoutFridayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutSaturdayMealGroupsNestedInput {
  create: MealCreateWithoutSaturdayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutSaturdayMealGroupsInput
  upsert: MealUpsertWithoutSaturdayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutSaturdayMealGroupsInput
}

input MealUpsertWithoutSaturdayMealGroupsInput {
  update: MealUpdateWithoutSaturdayMealGroupsInput!
  create: MealCreateWithoutSaturdayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutSaturdayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutSundayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutSundayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutSundayMealInput!]
  createMany: WeeklyMealGroupCreateManySundayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutSundayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutSundayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutSundayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutSundayMealInput!
  create: WeeklyMealGroupCreateWithoutSundayMealInput!
}

input WeeklyMealGroupUpdateWithoutSundayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutFridayMealGroupsNestedInput {
  create: MealCreateWithoutFridayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutFridayMealGroupsInput
  upsert: MealUpsertWithoutFridayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutFridayMealGroupsInput
}

input MealUpsertWithoutFridayMealGroupsInput {
  update: MealUpdateWithoutFridayMealGroupsInput!
  create: MealCreateWithoutFridayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutFridayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput {
  create: [WeeklyMealGroupCreateWithoutSaturdayMealInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutSaturdayMealInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutSaturdayMealInput!]
  createMany: WeeklyMealGroupCreateManySaturdayMealInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutSaturdayMealInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutSaturdayMealInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutSaturdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutSaturdayMealInput!
  create: WeeklyMealGroupCreateWithoutSaturdayMealInput!
}

input WeeklyMealGroupUpdateWithoutSaturdayMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input MealUpdateOneWithoutSundayMealGroupsNestedInput {
  create: MealCreateWithoutSundayMealGroupsInput
  connectOrCreate: MealCreateOrConnectWithoutSundayMealGroupsInput
  upsert: MealUpsertWithoutSundayMealGroupsInput
  disconnect: MealWhereInput
  delete: MealWhereInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutSundayMealGroupsInput
}

input MealUpsertWithoutSundayMealGroupsInput {
  update: MealUpdateWithoutSundayMealGroupsInput!
  create: MealCreateWithoutSundayMealGroupsInput!
  where: MealWhereInput
}

input MealUpdateWithoutSundayMealGroupsInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input MealRecipeUpdateManyWithoutMealNestedInput {
  create: [MealRecipeCreateWithoutMealInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutMealInput!]
  upsert: [MealRecipeUpsertWithWhereUniqueWithoutMealInput!]
  createMany: MealRecipeCreateManyMealInputEnvelope
  set: [MealRecipeWhereUniqueInput!]
  disconnect: [MealRecipeWhereUniqueInput!]
  delete: [MealRecipeWhereUniqueInput!]
  connect: [MealRecipeWhereUniqueInput!]
  update: [MealRecipeUpdateWithWhereUniqueWithoutMealInput!]
  updateMany: [MealRecipeUpdateManyWithWhereWithoutMealInput!]
  deleteMany: [MealRecipeScalarWhereInput!]
}

input MealRecipeUpsertWithWhereUniqueWithoutMealInput {
  where: MealRecipeWhereUniqueInput!
  update: MealRecipeUpdateWithoutMealInput!
  create: MealRecipeCreateWithoutMealInput!
}

input MealRecipeUpdateWithoutMealInput {
  note: NullableStringFieldUpdateOperationsInput
  recipe: RecipeUpdateOneRequiredWithoutMealRecipeNestedInput
}

input RecipeUpdateOneRequiredWithoutMealRecipeNestedInput {
  create: RecipeCreateWithoutMealRecipeInput
  connectOrCreate: RecipeCreateOrConnectWithoutMealRecipeInput
  upsert: RecipeUpsertWithoutMealRecipeInput
  connect: RecipeWhereUniqueInput
  update: RecipeUpdateToOneWithWhereWithoutMealRecipeInput
}

input RecipeUpsertWithoutMealRecipeInput {
  update: RecipeUpdateWithoutMealRecipeInput!
  create: RecipeCreateWithoutMealRecipeInput!
  where: RecipeWhereInput
}

input RecipeUpdateWithoutMealRecipeInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
}

input KitchensUpdateManyWithoutRecipesNestedInput {
  create: [KitchensCreateWithoutRecipesInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutRecipesInput!]
  upsert: [KitchensUpsertWithWhereUniqueWithoutRecipesInput!]
  set: [KitchensWhereUniqueInput!]
  disconnect: [KitchensWhereUniqueInput!]
  delete: [KitchensWhereUniqueInput!]
  connect: [KitchensWhereUniqueInput!]
  update: [KitchensUpdateWithWhereUniqueWithoutRecipesInput!]
  updateMany: [KitchensUpdateManyWithWhereWithoutRecipesInput!]
  deleteMany: [KitchensScalarWhereInput!]
}

input KitchensUpsertWithWhereUniqueWithoutRecipesInput {
  where: KitchensWhereUniqueInput!
  update: KitchensUpdateWithoutRecipesInput!
  create: KitchensCreateWithoutRecipesInput!
}

input KitchensUpdateWithoutRecipesInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutKitchensNestedInput
}

input IngredientUpdateManyWithoutKitchensNestedInput {
  create: [IngredientCreateWithoutKitchensInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutKitchensInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutKitchensInput!]
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutKitchensInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutKitchensInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutKitchensInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutKitchensInput!
  create: IngredientCreateWithoutKitchensInput!
}

input IngredientUpdateWithoutKitchensInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input RecipeIngredientUpdateManyWithoutIngredientNestedInput {
  create: [RecipeIngredientCreateWithoutIngredientInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutIngredientInput!]
  upsert: [RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInput!]
  createMany: RecipeIngredientCreateManyIngredientInputEnvelope
  set: [RecipeIngredientWhereUniqueInput!]
  disconnect: [RecipeIngredientWhereUniqueInput!]
  delete: [RecipeIngredientWhereUniqueInput!]
  connect: [RecipeIngredientWhereUniqueInput!]
  update: [RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInput!]
  updateMany: [RecipeIngredientUpdateManyWithWhereWithoutIngredientInput!]
  deleteMany: [RecipeIngredientScalarWhereInput!]
}

input RecipeIngredientUpsertWithWhereUniqueWithoutIngredientInput {
  where: RecipeIngredientWhereUniqueInput!
  update: RecipeIngredientUpdateWithoutIngredientInput!
  create: RecipeIngredientCreateWithoutIngredientInput!
}

input RecipeIngredientUpdateWithoutIngredientInput {
  amount: DecimalFieldUpdateOperationsInput
  unit: EnumUnitFieldUpdateOperationsInput
  recipe: RecipeUpdateOneRequiredWithoutRecipeIngredientNestedInput
}

input EnumUnitFieldUpdateOperationsInput {
  set: Unit
}

input RecipeUpdateOneRequiredWithoutRecipeIngredientNestedInput {
  create: RecipeCreateWithoutRecipeIngredientInput
  connectOrCreate: RecipeCreateOrConnectWithoutRecipeIngredientInput
  upsert: RecipeUpsertWithoutRecipeIngredientInput
  connect: RecipeWhereUniqueInput
  update: RecipeUpdateToOneWithWhereWithoutRecipeIngredientInput
}

input RecipeUpsertWithoutRecipeIngredientInput {
  update: RecipeUpdateWithoutRecipeIngredientInput!
  create: RecipeCreateWithoutRecipeIngredientInput!
  where: RecipeWhereInput
}

input RecipeUpdateWithoutRecipeIngredientInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input MealRecipeUpdateManyWithoutRecipeNestedInput {
  create: [MealRecipeCreateWithoutRecipeInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutRecipeInput!]
  upsert: [MealRecipeUpsertWithWhereUniqueWithoutRecipeInput!]
  createMany: MealRecipeCreateManyRecipeInputEnvelope
  set: [MealRecipeWhereUniqueInput!]
  disconnect: [MealRecipeWhereUniqueInput!]
  delete: [MealRecipeWhereUniqueInput!]
  connect: [MealRecipeWhereUniqueInput!]
  update: [MealRecipeUpdateWithWhereUniqueWithoutRecipeInput!]
  updateMany: [MealRecipeUpdateManyWithWhereWithoutRecipeInput!]
  deleteMany: [MealRecipeScalarWhereInput!]
}

input MealRecipeUpsertWithWhereUniqueWithoutRecipeInput {
  where: MealRecipeWhereUniqueInput!
  update: MealRecipeUpdateWithoutRecipeInput!
  create: MealRecipeCreateWithoutRecipeInput!
}

input MealRecipeUpdateWithoutRecipeInput {
  note: NullableStringFieldUpdateOperationsInput
  meal: MealUpdateOneRequiredWithoutMealRecipeNestedInput
}

input MealUpdateOneRequiredWithoutMealRecipeNestedInput {
  create: MealCreateWithoutMealRecipeInput
  connectOrCreate: MealCreateOrConnectWithoutMealRecipeInput
  upsert: MealUpsertWithoutMealRecipeInput
  connect: MealWhereUniqueInput
  update: MealUpdateToOneWithWhereWithoutMealRecipeInput
}

input MealUpsertWithoutMealRecipeInput {
  update: MealUpdateWithoutMealRecipeInput!
  create: MealCreateWithoutMealRecipeInput!
  where: MealWhereInput
}

input MealUpdateWithoutMealRecipeInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input UserMealUpdateManyWithoutMealNestedInput {
  create: [UserMealCreateWithoutMealInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutMealInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutMealInput!]
  createMany: UserMealCreateManyMealInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutMealInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutMealInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutMealInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutMealInput!
  create: UserMealCreateWithoutMealInput!
}

input UserMealUpdateWithoutMealInput {
  date: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealNestedInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput
  weeklyMealGroup: WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput
}

input MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput {
  create: MealBoardPlanCreateWithoutUserMealInput
  connectOrCreate: MealBoardPlanCreateOrConnectWithoutUserMealInput
  upsert: MealBoardPlanUpsertWithoutUserMealInput
  connect: MealBoardPlanWhereUniqueInput
  update: MealBoardPlanUpdateToOneWithWhereWithoutUserMealInput
}

input MealBoardPlanUpsertWithoutUserMealInput {
  update: MealBoardPlanUpdateWithoutUserMealInput!
  create: MealBoardPlanCreateWithoutUserMealInput!
  where: MealBoardPlanWhereInput
}

input MealBoardPlanUpdateWithoutUserMealInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  WeeklyMealGroup: WeeklyMealGroupUpdateManyWithoutMealBoardPlanNestedInput
}

input WeeklyMealGroupUpdateManyWithoutMealBoardPlanNestedInput {
  create: [WeeklyMealGroupCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutMealBoardPlanInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutMealBoardPlanInput!]
  createMany: WeeklyMealGroupCreateManyMealBoardPlanInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutMealBoardPlanInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutMealBoardPlanInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutMealBoardPlanInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutMealBoardPlanInput!
  create: WeeklyMealGroupCreateWithoutMealBoardPlanInput!
}

input WeeklyMealGroupUpdateWithoutMealBoardPlanInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input UserMealUpdateManyWithoutWeeklyMealGroupNestedInput {
  create: [UserMealCreateWithoutWeeklyMealGroupInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutWeeklyMealGroupInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutWeeklyMealGroupInput!]
  createMany: UserMealCreateManyWeeklyMealGroupInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutWeeklyMealGroupInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutWeeklyMealGroupInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutWeeklyMealGroupInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutWeeklyMealGroupInput!
  create: UserMealCreateWithoutWeeklyMealGroupInput!
}

input UserMealUpdateWithoutWeeklyMealGroupInput {
  date: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealNestedInput
  meal: MealUpdateOneRequiredWithoutUserMealNestedInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput
}

input UserMealUpdateWithWhereUniqueWithoutWeeklyMealGroupInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutWeeklyMealGroupInput!
}

input UserMealUpdateManyWithWhereWithoutWeeklyMealGroupInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input UserMealScalarWhereInput {
  AND: [UserMealScalarWhereInput!]
  OR: [UserMealScalarWhereInput!]
  NOT: [UserMealScalarWhereInput!]
  id: IntFilter
  date: DateTimeFilter
  mealBoardPlanId: IntFilter
  userId: IntFilter
  mealId: IntFilter
  weeklyMealGroupId: IntFilter
}

input UserMealUpdateManyMutationInput {
  date: DateTimeFieldUpdateOperationsInput
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutMealBoardPlanInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutMealBoardPlanInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutMealBoardPlanInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input WeeklyMealGroupScalarWhereInput {
  AND: [WeeklyMealGroupScalarWhereInput!]
  OR: [WeeklyMealGroupScalarWhereInput!]
  NOT: [WeeklyMealGroupScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  color: StringNullableFilter
  description: StringNullableFilter
  timeOfDay: EnumTimeOfDayFilter
  year: IntFilter
  weekOfYear: IntFilter
  orderIndex: IntFilter
  mealBoardPlanId: IntFilter
  mondayMealId: IntNullableFilter
  tuesdayMealId: IntNullableFilter
  wednesdayMealId: IntNullableFilter
  thursdayMealId: IntNullableFilter
  fridayMealId: IntNullableFilter
  saturdayMealId: IntNullableFilter
  sundayMealId: IntNullableFilter
}

input WeeklyMealGroupUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
}

input MealBoardPlanUpdateToOneWithWhereWithoutUserMealInput {
  where: MealBoardPlanWhereInput
  data: MealBoardPlanUpdateWithoutUserMealInput!
}

input UserMealUpdateWithWhereUniqueWithoutMealInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutMealInput!
}

input UserMealUpdateManyWithWhereWithoutMealInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutMealRecipeInput {
  where: MealWhereInput
  data: MealUpdateWithoutMealRecipeInput!
}

input MealRecipeUpdateWithWhereUniqueWithoutRecipeInput {
  where: MealRecipeWhereUniqueInput!
  data: MealRecipeUpdateWithoutRecipeInput!
}

input MealRecipeUpdateManyWithWhereWithoutRecipeInput {
  where: MealRecipeScalarWhereInput!
  data: MealRecipeUpdateManyMutationInput!
}

input MealRecipeScalarWhereInput {
  AND: [MealRecipeScalarWhereInput!]
  OR: [MealRecipeScalarWhereInput!]
  NOT: [MealRecipeScalarWhereInput!]
  id: IntFilter
  mealId: IntFilter
  recipeId: IntFilter
  note: StringNullableFilter
}

input MealRecipeUpdateManyMutationInput {
  note: NullableStringFieldUpdateOperationsInput
}

input RecipeUpdateToOneWithWhereWithoutRecipeIngredientInput {
  where: RecipeWhereInput
  data: RecipeUpdateWithoutRecipeIngredientInput!
}

input RecipeIngredientUpdateWithWhereUniqueWithoutIngredientInput {
  where: RecipeIngredientWhereUniqueInput!
  data: RecipeIngredientUpdateWithoutIngredientInput!
}

input RecipeIngredientUpdateManyWithWhereWithoutIngredientInput {
  where: RecipeIngredientScalarWhereInput!
  data: RecipeIngredientUpdateManyMutationInput!
}

input RecipeIngredientScalarWhereInput {
  AND: [RecipeIngredientScalarWhereInput!]
  OR: [RecipeIngredientScalarWhereInput!]
  NOT: [RecipeIngredientScalarWhereInput!]
  id: IntFilter
  recipeId: IntFilter
  ingredientId: IntFilter
  amount: DecimalFilter
  unit: EnumUnitFilter
}

input RecipeIngredientUpdateManyMutationInput {
  amount: DecimalFieldUpdateOperationsInput
  unit: EnumUnitFieldUpdateOperationsInput
}

input IngredientUpdateWithWhereUniqueWithoutKitchensInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutKitchensInput!
}

input IngredientUpdateManyWithWhereWithoutKitchensInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input IngredientScalarWhereInput {
  AND: [IngredientScalarWhereInput!]
  OR: [IngredientScalarWhereInput!]
  NOT: [IngredientScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  blsIdentifier: StringFilter
  energyKcal: DecimalFilter
  energyKj: DecimalFilter
  breadUnits: DecimalFilter
  carbohydrates: DecimalFilter
  sugars: DecimalFilter
  salt: DecimalFilter
  fats: DecimalFilter
  saturatedFats: DecimalFilter
  unsaturatedFats: DecimalFilter
  protein: DecimalFilter
}

input IngredientUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
}

input KitchensUpdateWithWhereUniqueWithoutRecipesInput {
  where: KitchensWhereUniqueInput!
  data: KitchensUpdateWithoutRecipesInput!
}

input KitchensUpdateManyWithWhereWithoutRecipesInput {
  where: KitchensScalarWhereInput!
  data: KitchensUpdateManyMutationInput!
}

input KitchensScalarWhereInput {
  AND: [KitchensScalarWhereInput!]
  OR: [KitchensScalarWhereInput!]
  NOT: [KitchensScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input KitchensUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input RecipeIngredientUpdateManyWithoutRecipeNestedInput {
  create: [RecipeIngredientCreateWithoutRecipeInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutRecipeInput!]
  upsert: [RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInput!]
  createMany: RecipeIngredientCreateManyRecipeInputEnvelope
  set: [RecipeIngredientWhereUniqueInput!]
  disconnect: [RecipeIngredientWhereUniqueInput!]
  delete: [RecipeIngredientWhereUniqueInput!]
  connect: [RecipeIngredientWhereUniqueInput!]
  update: [RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInput!]
  updateMany: [RecipeIngredientUpdateManyWithWhereWithoutRecipeInput!]
  deleteMany: [RecipeIngredientScalarWhereInput!]
}

input RecipeIngredientUpsertWithWhereUniqueWithoutRecipeInput {
  where: RecipeIngredientWhereUniqueInput!
  update: RecipeIngredientUpdateWithoutRecipeInput!
  create: RecipeIngredientCreateWithoutRecipeInput!
}

input RecipeIngredientUpdateWithoutRecipeInput {
  amount: DecimalFieldUpdateOperationsInput
  unit: EnumUnitFieldUpdateOperationsInput
  ingredient: IngredientUpdateOneRequiredWithoutRecipeIngredientNestedInput
}

input IngredientUpdateOneRequiredWithoutRecipeIngredientNestedInput {
  create: IngredientCreateWithoutRecipeIngredientInput
  connectOrCreate: IngredientCreateOrConnectWithoutRecipeIngredientInput
  upsert: IngredientUpsertWithoutRecipeIngredientInput
  connect: IngredientWhereUniqueInput
  update: IngredientUpdateToOneWithWhereWithoutRecipeIngredientInput
}

input IngredientUpsertWithoutRecipeIngredientInput {
  update: IngredientUpdateWithoutRecipeIngredientInput!
  create: IngredientCreateWithoutRecipeIngredientInput!
  where: IngredientWhereInput
}

input IngredientUpdateWithoutRecipeIngredientInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
}

input KitchensUpdateManyWithoutIngredientsNestedInput {
  create: [KitchensCreateWithoutIngredientsInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutIngredientsInput!]
  upsert: [KitchensUpsertWithWhereUniqueWithoutIngredientsInput!]
  set: [KitchensWhereUniqueInput!]
  disconnect: [KitchensWhereUniqueInput!]
  delete: [KitchensWhereUniqueInput!]
  connect: [KitchensWhereUniqueInput!]
  update: [KitchensUpdateWithWhereUniqueWithoutIngredientsInput!]
  updateMany: [KitchensUpdateManyWithWhereWithoutIngredientsInput!]
  deleteMany: [KitchensScalarWhereInput!]
}

input KitchensUpsertWithWhereUniqueWithoutIngredientsInput {
  where: KitchensWhereUniqueInput!
  update: KitchensUpdateWithoutIngredientsInput!
  create: KitchensCreateWithoutIngredientsInput!
}

input KitchensUpdateWithoutIngredientsInput {
  name: StringFieldUpdateOperationsInput
  recipes: RecipeUpdateManyWithoutKitchensNestedInput
}

input RecipeUpdateManyWithoutKitchensNestedInput {
  create: [RecipeCreateWithoutKitchensInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutKitchensInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutKitchensInput!]
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutKitchensInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutKitchensInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutKitchensInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutKitchensInput!
  create: RecipeCreateWithoutKitchensInput!
}

input RecipeUpdateWithoutKitchensInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input RecipeUpdateWithWhereUniqueWithoutKitchensInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutKitchensInput!
}

input RecipeUpdateManyWithWhereWithoutKitchensInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input RecipeScalarWhereInput {
  AND: [RecipeScalarWhereInput!]
  OR: [RecipeScalarWhereInput!]
  NOT: [RecipeScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
}

input RecipeUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
}

input KitchensUpdateWithWhereUniqueWithoutIngredientsInput {
  where: KitchensWhereUniqueInput!
  data: KitchensUpdateWithoutIngredientsInput!
}

input KitchensUpdateManyWithWhereWithoutIngredientsInput {
  where: KitchensScalarWhereInput!
  data: KitchensUpdateManyMutationInput!
}

input IngredientUpdateToOneWithWhereWithoutRecipeIngredientInput {
  where: IngredientWhereInput
  data: IngredientUpdateWithoutRecipeIngredientInput!
}

input RecipeIngredientUpdateWithWhereUniqueWithoutRecipeInput {
  where: RecipeIngredientWhereUniqueInput!
  data: RecipeIngredientUpdateWithoutRecipeInput!
}

input RecipeIngredientUpdateManyWithWhereWithoutRecipeInput {
  where: RecipeIngredientScalarWhereInput!
  data: RecipeIngredientUpdateManyMutationInput!
}

input RecipeUpdateToOneWithWhereWithoutMealRecipeInput {
  where: RecipeWhereInput
  data: RecipeUpdateWithoutMealRecipeInput!
}

input MealRecipeUpdateWithWhereUniqueWithoutMealInput {
  where: MealRecipeWhereUniqueInput!
  data: MealRecipeUpdateWithoutMealInput!
}

input MealRecipeUpdateManyWithWhereWithoutMealInput {
  where: MealRecipeScalarWhereInput!
  data: MealRecipeUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutSundayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutSundayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutSaturdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutSaturdayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutSaturdayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutFridayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutFridayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutSundayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutSundayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutSundayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutSaturdayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutSaturdayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutFridayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutFridayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutFridayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutThursdayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutThursdayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutWednesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutWednesdayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutWednesdayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutTuesdayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutTuesdayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutThursdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutThursdayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutThursdayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutWednesdayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutWednesdayMealGroupsInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutTuesdayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutTuesdayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutTuesdayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutMondayMealGroupsInput {
  where: MealWhereInput
  data: MealUpdateWithoutMondayMealGroupsInput!
}

input WeeklyMealGroupUpdateToOneWithWhereWithoutUserMealInput {
  where: WeeklyMealGroupWhereInput
  data: WeeklyMealGroupUpdateWithoutUserMealInput!
}

input UserMealUpdateWithWhereUniqueWithoutMealBoardPlanInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutMealBoardPlanInput!
}

input UserMealUpdateManyWithWhereWithoutMealBoardPlanInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input MealBoardPlanUpdateToOneWithWhereWithoutWeeklyMealGroupInput {
  where: MealBoardPlanWhereInput
  data: MealBoardPlanUpdateWithoutWeeklyMealGroupInput!
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutMondayMealInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutMondayMealInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutMondayMealInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutFoodFormsInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutFoodFormsInput!
}

input MealUpdateManyWithWhereWithoutFoodFormsInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input MealScalarWhereInput {
  AND: [MealScalarWhereInput!]
  OR: [MealScalarWhereInput!]
  NOT: [MealScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  description: StringNullableFilter
  image: StringNullableFilter
}

input MealUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
}

input FoodFormsUpdateWithWhereUniqueWithoutRecipesInput {
  where: FoodFormsWhereUniqueInput!
  data: FoodFormsUpdateWithoutRecipesInput!
}

input FoodFormsUpdateManyWithWhereWithoutRecipesInput {
  where: FoodFormsScalarWhereInput!
  data: FoodFormsUpdateManyMutationInput!
}

input FoodFormsScalarWhereInput {
  AND: [FoodFormsScalarWhereInput!]
  OR: [FoodFormsScalarWhereInput!]
  NOT: [FoodFormsScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input FoodFormsUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input RecipeUpdateWithWhereUniqueWithoutSeasonsInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutSeasonsInput!
}

input RecipeUpdateManyWithWhereWithoutSeasonsInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input SeasonsUpdateWithWhereUniqueWithoutIngredientsInput {
  where: SeasonsWhereUniqueInput!
  data: SeasonsUpdateWithoutIngredientsInput!
}

input SeasonsUpdateManyWithWhereWithoutIngredientsInput {
  where: SeasonsScalarWhereInput!
  data: SeasonsUpdateManyMutationInput!
}

input SeasonsScalarWhereInput {
  AND: [SeasonsScalarWhereInput!]
  OR: [SeasonsScalarWhereInput!]
  NOT: [SeasonsScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input SeasonsUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input IngredientUpdateWithWhereUniqueWithoutFoodFormsInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutFoodFormsInput!
}

input IngredientUpdateManyWithWhereWithoutFoodFormsInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input FoodFormsUpdateWithWhereUniqueWithoutMealsInput {
  where: FoodFormsWhereUniqueInput!
  data: FoodFormsUpdateWithoutMealsInput!
}

input FoodFormsUpdateManyWithWhereWithoutMealsInput {
  where: FoodFormsScalarWhereInput!
  data: FoodFormsUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutSeasonsInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutSeasonsInput!
}

input MealUpdateManyWithWhereWithoutSeasonsInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input SeasonsUpdateWithWhereUniqueWithoutRecipesInput {
  where: SeasonsWhereUniqueInput!
  data: SeasonsUpdateWithoutRecipesInput!
}

input SeasonsUpdateManyWithWhereWithoutRecipesInput {
  where: SeasonsScalarWhereInput!
  data: SeasonsUpdateManyMutationInput!
}

input RecipeUpdateWithWhereUniqueWithoutFoodFormsInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutFoodFormsInput!
}

input RecipeUpdateManyWithWhereWithoutFoodFormsInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input FoodFormsUpdateWithWhereUniqueWithoutIngredientsInput {
  where: FoodFormsWhereUniqueInput!
  data: FoodFormsUpdateWithoutIngredientsInput!
}

input FoodFormsUpdateManyWithWhereWithoutIngredientsInput {
  where: FoodFormsScalarWhereInput!
  data: FoodFormsUpdateManyMutationInput!
}

input IngredientUpdateWithWhereUniqueWithoutSeasonsInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutSeasonsInput!
}

input IngredientUpdateManyWithWhereWithoutSeasonsInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input SeasonsUpdateWithWhereUniqueWithoutMealsInput {
  where: SeasonsWhereUniqueInput!
  data: SeasonsUpdateWithoutMealsInput!
}

input SeasonsUpdateManyWithWhereWithoutMealsInput {
  where: SeasonsScalarWhereInput!
  data: SeasonsUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutCategoriesInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutCategoriesInput!
}

input MealUpdateManyWithWhereWithoutCategoriesInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input CategoriesUpdateWithWhereUniqueWithoutRecipesInput {
  where: CategoriesWhereUniqueInput!
  data: CategoriesUpdateWithoutRecipesInput!
}

input CategoriesUpdateManyWithWhereWithoutRecipesInput {
  where: CategoriesScalarWhereInput!
  data: CategoriesUpdateManyMutationInput!
}

input CategoriesScalarWhereInput {
  AND: [CategoriesScalarWhereInput!]
  OR: [CategoriesScalarWhereInput!]
  NOT: [CategoriesScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input CategoriesUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input RecipeUpdateWithWhereUniqueWithoutPropertiesInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutPropertiesInput!
}

input RecipeUpdateManyWithWhereWithoutPropertiesInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input PropertiesUpdateWithWhereUniqueWithoutIngredientsInput {
  where: PropertiesWhereUniqueInput!
  data: PropertiesUpdateWithoutIngredientsInput!
}

input PropertiesUpdateManyWithWhereWithoutIngredientsInput {
  where: PropertiesScalarWhereInput!
  data: PropertiesUpdateManyMutationInput!
}

input PropertiesScalarWhereInput {
  AND: [PropertiesScalarWhereInput!]
  OR: [PropertiesScalarWhereInput!]
  NOT: [PropertiesScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input PropertiesUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input IngredientUpdateWithWhereUniqueWithoutCategoriesInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutCategoriesInput!
}

input IngredientUpdateManyWithWhereWithoutCategoriesInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input CategoriesUpdateWithWhereUniqueWithoutMealsInput {
  where: CategoriesWhereUniqueInput!
  data: CategoriesUpdateWithoutMealsInput!
}

input CategoriesUpdateManyWithWhereWithoutMealsInput {
  where: CategoriesScalarWhereInput!
  data: CategoriesUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutPropertiesInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutPropertiesInput!
}

input MealUpdateManyWithWhereWithoutPropertiesInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input PropertiesUpdateWithWhereUniqueWithoutRecipesInput {
  where: PropertiesWhereUniqueInput!
  data: PropertiesUpdateWithoutRecipesInput!
}

input PropertiesUpdateManyWithWhereWithoutRecipesInput {
  where: PropertiesScalarWhereInput!
  data: PropertiesUpdateManyMutationInput!
}

input RecipeUpdateWithWhereUniqueWithoutCategoriesInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutCategoriesInput!
}

input RecipeUpdateManyWithWhereWithoutCategoriesInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input CategoriesUpdateWithWhereUniqueWithoutIngredientsInput {
  where: CategoriesWhereUniqueInput!
  data: CategoriesUpdateWithoutIngredientsInput!
}

input CategoriesUpdateManyWithWhereWithoutIngredientsInput {
  where: CategoriesScalarWhereInput!
  data: CategoriesUpdateManyMutationInput!
}

input IngredientUpdateWithWhereUniqueWithoutPropertiesInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutPropertiesInput!
}

input IngredientUpdateManyWithWhereWithoutPropertiesInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input PropertiesUpdateWithWhereUniqueWithoutMealsInput {
  where: PropertiesWhereUniqueInput!
  data: PropertiesUpdateWithoutMealsInput!
}

input PropertiesUpdateManyWithWhereWithoutMealsInput {
  where: PropertiesScalarWhereInput!
  data: PropertiesUpdateManyMutationInput!
}

input MealUpdateToOneWithWhereWithoutUserMealInput {
  where: MealWhereInput
  data: MealUpdateWithoutUserMealInput!
}

input UserMealUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutUpdatedByUserInput!
}

input UserMealUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input SettingsUpdateManyWithoutCreatedByUserNestedInput {
  create: [SettingsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [SettingsCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [SettingsUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: SettingsCreateManyCreatedByUserInputEnvelope
  set: [SettingsWhereUniqueInput!]
  disconnect: [SettingsWhereUniqueInput!]
  delete: [SettingsWhereUniqueInput!]
  connect: [SettingsWhereUniqueInput!]
  update: [SettingsUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [SettingsUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [SettingsScalarWhereInput!]
}

input SettingsUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: SettingsWhereUniqueInput!
  update: SettingsUpdateWithoutCreatedByUserInput!
  create: SettingsCreateWithoutCreatedByUserInput!
}

input SettingsUpdateWithoutCreatedByUserInput {
  maxEditOrderDays: IntFieldUpdateOperationsInput
}

input SettingsUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: SettingsWhereUniqueInput!
  data: SettingsUpdateWithoutCreatedByUserInput!
}

input SettingsUpdateManyWithWhereWithoutCreatedByUserInput {
  where: SettingsScalarWhereInput!
  data: SettingsUpdateManyMutationInput!
}

input SettingsScalarWhereInput {
  AND: [SettingsScalarWhereInput!]
  OR: [SettingsScalarWhereInput!]
  NOT: [SettingsScalarWhereInput!]
  id: IntFilter
  maxEditOrderDays: IntFilter
}

input SettingsUpdateManyMutationInput {
  maxEditOrderDays: IntFieldUpdateOperationsInput
}

input SettingsUpdateManyWithoutUpdatedByUserNestedInput {
  create: [SettingsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [SettingsCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [SettingsUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: SettingsCreateManyUpdatedByUserInputEnvelope
  set: [SettingsWhereUniqueInput!]
  disconnect: [SettingsWhereUniqueInput!]
  delete: [SettingsWhereUniqueInput!]
  connect: [SettingsWhereUniqueInput!]
  update: [SettingsUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [SettingsUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [SettingsScalarWhereInput!]
}

input SettingsUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: SettingsWhereUniqueInput!
  update: SettingsUpdateWithoutUpdatedByUserInput!
  create: SettingsCreateWithoutUpdatedByUserInput!
}

input SettingsUpdateWithoutUpdatedByUserInput {
  maxEditOrderDays: IntFieldUpdateOperationsInput
}

input SettingsUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: SettingsWhereUniqueInput!
  data: SettingsUpdateWithoutUpdatedByUserInput!
}

input SettingsUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: SettingsScalarWhereInput!
  data: SettingsUpdateManyMutationInput!
}

input IngredientUpdateManyWithoutCreatedByUserNestedInput {
  create: [IngredientCreateWithoutCreatedByUserInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: IngredientCreateManyCreatedByUserInputEnvelope
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutCreatedByUserInput!
  create: IngredientCreateWithoutCreatedByUserInput!
}

input IngredientUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input IngredientUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutCreatedByUserInput!
}

input IngredientUpdateManyWithWhereWithoutCreatedByUserInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input IngredientUpdateManyWithoutUpdatedByUserNestedInput {
  create: [IngredientCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [IngredientCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [IngredientUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: IngredientCreateManyUpdatedByUserInputEnvelope
  set: [IngredientWhereUniqueInput!]
  disconnect: [IngredientWhereUniqueInput!]
  delete: [IngredientWhereUniqueInput!]
  connect: [IngredientWhereUniqueInput!]
  update: [IngredientUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [IngredientUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [IngredientScalarWhereInput!]
}

input IngredientUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: IngredientWhereUniqueInput!
  update: IngredientUpdateWithoutUpdatedByUserInput!
  create: IngredientCreateWithoutUpdatedByUserInput!
}

input IngredientUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input IngredientUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutUpdatedByUserInput!
}

input IngredientUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input RecipeUpdateManyWithoutCreatedByUserNestedInput {
  create: [RecipeCreateWithoutCreatedByUserInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: RecipeCreateManyCreatedByUserInputEnvelope
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutCreatedByUserInput!
  create: RecipeCreateWithoutCreatedByUserInput!
}

input RecipeUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input RecipeUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutCreatedByUserInput!
}

input RecipeUpdateManyWithWhereWithoutCreatedByUserInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input RecipeUpdateManyWithoutUpdatedByUserNestedInput {
  create: [RecipeCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [RecipeCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: RecipeCreateManyUpdatedByUserInputEnvelope
  set: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  connect: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [RecipeUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [RecipeScalarWhereInput!]
}

input RecipeUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutUpdatedByUserInput!
  create: RecipeCreateWithoutUpdatedByUserInput!
}

input RecipeUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}

input RecipeUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutUpdatedByUserInput!
}

input RecipeUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput {
  create: [RecipeIngredientCreateWithoutCreatedByUserInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [RecipeIngredientUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: RecipeIngredientCreateManyCreatedByUserInputEnvelope
  set: [RecipeIngredientWhereUniqueInput!]
  disconnect: [RecipeIngredientWhereUniqueInput!]
  delete: [RecipeIngredientWhereUniqueInput!]
  connect: [RecipeIngredientWhereUniqueInput!]
  update: [RecipeIngredientUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [RecipeIngredientUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [RecipeIngredientScalarWhereInput!]
}

input RecipeIngredientUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  update: RecipeIngredientUpdateWithoutCreatedByUserInput!
  create: RecipeIngredientCreateWithoutCreatedByUserInput!
}

input RecipeIngredientUpdateWithoutCreatedByUserInput {
  amount: DecimalFieldUpdateOperationsInput
  unit: EnumUnitFieldUpdateOperationsInput
  recipe: RecipeUpdateOneRequiredWithoutRecipeIngredientNestedInput
  ingredient: IngredientUpdateOneRequiredWithoutRecipeIngredientNestedInput
}

input RecipeIngredientUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  data: RecipeIngredientUpdateWithoutCreatedByUserInput!
}

input RecipeIngredientUpdateManyWithWhereWithoutCreatedByUserInput {
  where: RecipeIngredientScalarWhereInput!
  data: RecipeIngredientUpdateManyMutationInput!
}

input RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput {
  create: [RecipeIngredientCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [RecipeIngredientCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [RecipeIngredientUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: RecipeIngredientCreateManyUpdatedByUserInputEnvelope
  set: [RecipeIngredientWhereUniqueInput!]
  disconnect: [RecipeIngredientWhereUniqueInput!]
  delete: [RecipeIngredientWhereUniqueInput!]
  connect: [RecipeIngredientWhereUniqueInput!]
  update: [RecipeIngredientUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [RecipeIngredientUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [RecipeIngredientScalarWhereInput!]
}

input RecipeIngredientUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  update: RecipeIngredientUpdateWithoutUpdatedByUserInput!
  create: RecipeIngredientCreateWithoutUpdatedByUserInput!
}

input RecipeIngredientUpdateWithoutUpdatedByUserInput {
  amount: DecimalFieldUpdateOperationsInput
  unit: EnumUnitFieldUpdateOperationsInput
  recipe: RecipeUpdateOneRequiredWithoutRecipeIngredientNestedInput
  ingredient: IngredientUpdateOneRequiredWithoutRecipeIngredientNestedInput
}

input RecipeIngredientUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: RecipeIngredientWhereUniqueInput!
  data: RecipeIngredientUpdateWithoutUpdatedByUserInput!
}

input RecipeIngredientUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: RecipeIngredientScalarWhereInput!
  data: RecipeIngredientUpdateManyMutationInput!
}

input MealUpdateManyWithoutCreatedByUserNestedInput {
  create: [MealCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: MealCreateManyCreatedByUserInputEnvelope
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [MealUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutCreatedByUserInput!
  create: MealCreateWithoutCreatedByUserInput!
}

input MealUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input MealUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutCreatedByUserInput!
}

input MealUpdateManyWithWhereWithoutCreatedByUserInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input MealUpdateManyWithoutUpdatedByUserNestedInput {
  create: [MealCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [MealUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: MealCreateManyUpdatedByUserInputEnvelope
  set: [MealWhereUniqueInput!]
  disconnect: [MealWhereUniqueInput!]
  delete: [MealWhereUniqueInput!]
  connect: [MealWhereUniqueInput!]
  update: [MealUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [MealUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [MealScalarWhereInput!]
}

input MealUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealWhereUniqueInput!
  update: MealUpdateWithoutUpdatedByUserInput!
  create: MealCreateWithoutUpdatedByUserInput!
}

input MealUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input MealUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutUpdatedByUserInput!
}

input MealUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input MealRecipeUpdateManyWithoutCreatedByUserNestedInput {
  create: [MealRecipeCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [MealRecipeUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: MealRecipeCreateManyCreatedByUserInputEnvelope
  set: [MealRecipeWhereUniqueInput!]
  disconnect: [MealRecipeWhereUniqueInput!]
  delete: [MealRecipeWhereUniqueInput!]
  connect: [MealRecipeWhereUniqueInput!]
  update: [MealRecipeUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [MealRecipeUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [MealRecipeScalarWhereInput!]
}

input MealRecipeUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  update: MealRecipeUpdateWithoutCreatedByUserInput!
  create: MealRecipeCreateWithoutCreatedByUserInput!
}

input MealRecipeUpdateWithoutCreatedByUserInput {
  note: NullableStringFieldUpdateOperationsInput
  meal: MealUpdateOneRequiredWithoutMealRecipeNestedInput
  recipe: RecipeUpdateOneRequiredWithoutMealRecipeNestedInput
}

input MealRecipeUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  data: MealRecipeUpdateWithoutCreatedByUserInput!
}

input MealRecipeUpdateManyWithWhereWithoutCreatedByUserInput {
  where: MealRecipeScalarWhereInput!
  data: MealRecipeUpdateManyMutationInput!
}

input MealRecipeUpdateManyWithoutUpdatedByUserNestedInput {
  create: [MealRecipeCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealRecipeCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [MealRecipeUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: MealRecipeCreateManyUpdatedByUserInputEnvelope
  set: [MealRecipeWhereUniqueInput!]
  disconnect: [MealRecipeWhereUniqueInput!]
  delete: [MealRecipeWhereUniqueInput!]
  connect: [MealRecipeWhereUniqueInput!]
  update: [MealRecipeUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [MealRecipeUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [MealRecipeScalarWhereInput!]
}

input MealRecipeUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  update: MealRecipeUpdateWithoutUpdatedByUserInput!
  create: MealRecipeCreateWithoutUpdatedByUserInput!
}

input MealRecipeUpdateWithoutUpdatedByUserInput {
  note: NullableStringFieldUpdateOperationsInput
  meal: MealUpdateOneRequiredWithoutMealRecipeNestedInput
  recipe: RecipeUpdateOneRequiredWithoutMealRecipeNestedInput
}

input MealRecipeUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealRecipeWhereUniqueInput!
  data: MealRecipeUpdateWithoutUpdatedByUserInput!
}

input MealRecipeUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: MealRecipeScalarWhereInput!
  data: MealRecipeUpdateManyMutationInput!
}

input WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput {
  create: [WeeklyMealGroupCreateWithoutCreatedByUserInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: WeeklyMealGroupCreateManyCreatedByUserInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutCreatedByUserInput!
  create: WeeklyMealGroupCreateWithoutCreatedByUserInput!
}

input WeeklyMealGroupUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutCreatedByUserInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutCreatedByUserInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput {
  create: [WeeklyMealGroupCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: WeeklyMealGroupCreateManyUpdatedByUserInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input WeeklyMealGroupUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  update: WeeklyMealGroupUpdateWithoutUpdatedByUserInput!
  create: WeeklyMealGroupCreateWithoutUpdatedByUserInput!
}

input WeeklyMealGroupUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input WeeklyMealGroupUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: WeeklyMealGroupWhereUniqueInput!
  data: WeeklyMealGroupUpdateWithoutUpdatedByUserInput!
}

input WeeklyMealGroupUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: WeeklyMealGroupScalarWhereInput!
  data: WeeklyMealGroupUpdateManyMutationInput!
}

input MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput {
  create: [MealBoardPlanCreateWithoutCreatedByUserInput!]
  connectOrCreate: [MealBoardPlanCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [MealBoardPlanUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: MealBoardPlanCreateManyCreatedByUserInputEnvelope
  set: [MealBoardPlanWhereUniqueInput!]
  disconnect: [MealBoardPlanWhereUniqueInput!]
  delete: [MealBoardPlanWhereUniqueInput!]
  connect: [MealBoardPlanWhereUniqueInput!]
  update: [MealBoardPlanUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [MealBoardPlanUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [MealBoardPlanScalarWhereInput!]
}

input MealBoardPlanUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  update: MealBoardPlanUpdateWithoutCreatedByUserInput!
  create: MealBoardPlanCreateWithoutCreatedByUserInput!
}

input MealBoardPlanUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  WeeklyMealGroup: WeeklyMealGroupUpdateManyWithoutMealBoardPlanNestedInput
  UserMeal: UserMealUpdateManyWithoutMealBoardPlanNestedInput
}

input MealBoardPlanUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  data: MealBoardPlanUpdateWithoutCreatedByUserInput!
}

input MealBoardPlanUpdateManyWithWhereWithoutCreatedByUserInput {
  where: MealBoardPlanScalarWhereInput!
  data: MealBoardPlanUpdateManyMutationInput!
}

input MealBoardPlanScalarWhereInput {
  AND: [MealBoardPlanScalarWhereInput!]
  OR: [MealBoardPlanScalarWhereInput!]
  NOT: [MealBoardPlanScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  color: StringNullableFilter
}

input MealBoardPlanUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
}

input MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput {
  create: [MealBoardPlanCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [MealBoardPlanCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [MealBoardPlanUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: MealBoardPlanCreateManyUpdatedByUserInputEnvelope
  set: [MealBoardPlanWhereUniqueInput!]
  disconnect: [MealBoardPlanWhereUniqueInput!]
  delete: [MealBoardPlanWhereUniqueInput!]
  connect: [MealBoardPlanWhereUniqueInput!]
  update: [MealBoardPlanUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [MealBoardPlanUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [MealBoardPlanScalarWhereInput!]
}

input MealBoardPlanUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  update: MealBoardPlanUpdateWithoutUpdatedByUserInput!
  create: MealBoardPlanCreateWithoutUpdatedByUserInput!
}

input MealBoardPlanUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  WeeklyMealGroup: WeeklyMealGroupUpdateManyWithoutMealBoardPlanNestedInput
  UserMeal: UserMealUpdateManyWithoutMealBoardPlanNestedInput
}

input MealBoardPlanUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: MealBoardPlanWhereUniqueInput!
  data: MealBoardPlanUpdateWithoutUpdatedByUserInput!
}

input MealBoardPlanUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: MealBoardPlanScalarWhereInput!
  data: MealBoardPlanUpdateManyMutationInput!
}

input AllergensUpdateManyWithoutCreatedByUserNestedInput {
  create: [AllergensCreateWithoutCreatedByUserInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: AllergensCreateManyCreatedByUserInputEnvelope
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutCreatedByUserInput!
  create: AllergensCreateWithoutCreatedByUserInput!
}

input AllergensUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAllergensNestedInput
  recipes: RecipeUpdateManyWithoutAllergensNestedInput
  meals: MealUpdateManyWithoutAllergensNestedInput
  users: UserUpdateManyWithoutAllergensNestedInput
}

input AllergensUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutCreatedByUserInput!
}

input AllergensUpdateManyWithWhereWithoutCreatedByUserInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input AllergensScalarWhereInput {
  AND: [AllergensScalarWhereInput!]
  OR: [AllergensScalarWhereInput!]
  NOT: [AllergensScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input AllergensUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input AllergensUpdateManyWithoutUpdatedByUserNestedInput {
  create: [AllergensCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [AllergensCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [AllergensUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: AllergensCreateManyUpdatedByUserInputEnvelope
  set: [AllergensWhereUniqueInput!]
  disconnect: [AllergensWhereUniqueInput!]
  delete: [AllergensWhereUniqueInput!]
  connect: [AllergensWhereUniqueInput!]
  update: [AllergensUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [AllergensUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [AllergensScalarWhereInput!]
}

input AllergensUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: AllergensWhereUniqueInput!
  update: AllergensUpdateWithoutUpdatedByUserInput!
  create: AllergensCreateWithoutUpdatedByUserInput!
}

input AllergensUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAllergensNestedInput
  recipes: RecipeUpdateManyWithoutAllergensNestedInput
  meals: MealUpdateManyWithoutAllergensNestedInput
  users: UserUpdateManyWithoutAllergensNestedInput
}

input AllergensUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutUpdatedByUserInput!
}

input AllergensUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input AdditivesUpdateManyWithoutCreatedByUserNestedInput {
  create: [AdditivesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [AdditivesUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: AdditivesCreateManyCreatedByUserInputEnvelope
  set: [AdditivesWhereUniqueInput!]
  disconnect: [AdditivesWhereUniqueInput!]
  delete: [AdditivesWhereUniqueInput!]
  connect: [AdditivesWhereUniqueInput!]
  update: [AdditivesUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [AdditivesUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [AdditivesScalarWhereInput!]
}

input AdditivesUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: AdditivesWhereUniqueInput!
  update: AdditivesUpdateWithoutCreatedByUserInput!
  create: AdditivesCreateWithoutCreatedByUserInput!
}

input AdditivesUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAdditivesNestedInput
  recipes: RecipeUpdateManyWithoutAdditivesNestedInput
  meals: MealUpdateManyWithoutAdditivesNestedInput
}

input AdditivesUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: AdditivesWhereUniqueInput!
  data: AdditivesUpdateWithoutCreatedByUserInput!
}

input AdditivesUpdateManyWithWhereWithoutCreatedByUserInput {
  where: AdditivesScalarWhereInput!
  data: AdditivesUpdateManyMutationInput!
}

input AdditivesScalarWhereInput {
  AND: [AdditivesScalarWhereInput!]
  OR: [AdditivesScalarWhereInput!]
  NOT: [AdditivesScalarWhereInput!]
  id: IntFilter
  name: StringFilter
}

input AdditivesUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input AdditivesUpdateManyWithoutUpdatedByUserNestedInput {
  create: [AdditivesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [AdditivesCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [AdditivesUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: AdditivesCreateManyUpdatedByUserInputEnvelope
  set: [AdditivesWhereUniqueInput!]
  disconnect: [AdditivesWhereUniqueInput!]
  delete: [AdditivesWhereUniqueInput!]
  connect: [AdditivesWhereUniqueInput!]
  update: [AdditivesUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [AdditivesUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [AdditivesScalarWhereInput!]
}

input AdditivesUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: AdditivesWhereUniqueInput!
  update: AdditivesUpdateWithoutUpdatedByUserInput!
  create: AdditivesCreateWithoutUpdatedByUserInput!
}

input AdditivesUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutAdditivesNestedInput
  recipes: RecipeUpdateManyWithoutAdditivesNestedInput
  meals: MealUpdateManyWithoutAdditivesNestedInput
}

input AdditivesUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: AdditivesWhereUniqueInput!
  data: AdditivesUpdateWithoutUpdatedByUserInput!
}

input AdditivesUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: AdditivesScalarWhereInput!
  data: AdditivesUpdateManyMutationInput!
}

input PropertiesUpdateManyWithoutCreatedByUserNestedInput {
  create: [PropertiesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [PropertiesUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: PropertiesCreateManyCreatedByUserInputEnvelope
  set: [PropertiesWhereUniqueInput!]
  disconnect: [PropertiesWhereUniqueInput!]
  delete: [PropertiesWhereUniqueInput!]
  connect: [PropertiesWhereUniqueInput!]
  update: [PropertiesUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [PropertiesUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [PropertiesScalarWhereInput!]
}

input PropertiesUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: PropertiesWhereUniqueInput!
  update: PropertiesUpdateWithoutCreatedByUserInput!
  create: PropertiesCreateWithoutCreatedByUserInput!
}

input PropertiesUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutPropertiesNestedInput
  recipes: RecipeUpdateManyWithoutPropertiesNestedInput
  meals: MealUpdateManyWithoutPropertiesNestedInput
}

input PropertiesUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: PropertiesWhereUniqueInput!
  data: PropertiesUpdateWithoutCreatedByUserInput!
}

input PropertiesUpdateManyWithWhereWithoutCreatedByUserInput {
  where: PropertiesScalarWhereInput!
  data: PropertiesUpdateManyMutationInput!
}

input PropertiesUpdateManyWithoutUpdatedByUserNestedInput {
  create: [PropertiesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [PropertiesCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [PropertiesUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: PropertiesCreateManyUpdatedByUserInputEnvelope
  set: [PropertiesWhereUniqueInput!]
  disconnect: [PropertiesWhereUniqueInput!]
  delete: [PropertiesWhereUniqueInput!]
  connect: [PropertiesWhereUniqueInput!]
  update: [PropertiesUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [PropertiesUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [PropertiesScalarWhereInput!]
}

input PropertiesUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: PropertiesWhereUniqueInput!
  update: PropertiesUpdateWithoutUpdatedByUserInput!
  create: PropertiesCreateWithoutUpdatedByUserInput!
}

input PropertiesUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutPropertiesNestedInput
  recipes: RecipeUpdateManyWithoutPropertiesNestedInput
  meals: MealUpdateManyWithoutPropertiesNestedInput
}

input PropertiesUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: PropertiesWhereUniqueInput!
  data: PropertiesUpdateWithoutUpdatedByUserInput!
}

input PropertiesUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: PropertiesScalarWhereInput!
  data: PropertiesUpdateManyMutationInput!
}

input CategoriesUpdateManyWithoutCreatedByUserNestedInput {
  create: [CategoriesCreateWithoutCreatedByUserInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [CategoriesUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: CategoriesCreateManyCreatedByUserInputEnvelope
  set: [CategoriesWhereUniqueInput!]
  disconnect: [CategoriesWhereUniqueInput!]
  delete: [CategoriesWhereUniqueInput!]
  connect: [CategoriesWhereUniqueInput!]
  update: [CategoriesUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [CategoriesUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [CategoriesScalarWhereInput!]
}

input CategoriesUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: CategoriesWhereUniqueInput!
  update: CategoriesUpdateWithoutCreatedByUserInput!
  create: CategoriesCreateWithoutCreatedByUserInput!
}

input CategoriesUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutCategoriesNestedInput
  recipes: RecipeUpdateManyWithoutCategoriesNestedInput
  meals: MealUpdateManyWithoutCategoriesNestedInput
}

input CategoriesUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: CategoriesWhereUniqueInput!
  data: CategoriesUpdateWithoutCreatedByUserInput!
}

input CategoriesUpdateManyWithWhereWithoutCreatedByUserInput {
  where: CategoriesScalarWhereInput!
  data: CategoriesUpdateManyMutationInput!
}

input CategoriesUpdateManyWithoutUpdatedByUserNestedInput {
  create: [CategoriesCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [CategoriesCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [CategoriesUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: CategoriesCreateManyUpdatedByUserInputEnvelope
  set: [CategoriesWhereUniqueInput!]
  disconnect: [CategoriesWhereUniqueInput!]
  delete: [CategoriesWhereUniqueInput!]
  connect: [CategoriesWhereUniqueInput!]
  update: [CategoriesUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [CategoriesUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [CategoriesScalarWhereInput!]
}

input CategoriesUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: CategoriesWhereUniqueInput!
  update: CategoriesUpdateWithoutUpdatedByUserInput!
  create: CategoriesCreateWithoutUpdatedByUserInput!
}

input CategoriesUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutCategoriesNestedInput
  recipes: RecipeUpdateManyWithoutCategoriesNestedInput
  meals: MealUpdateManyWithoutCategoriesNestedInput
}

input CategoriesUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: CategoriesWhereUniqueInput!
  data: CategoriesUpdateWithoutUpdatedByUserInput!
}

input CategoriesUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: CategoriesScalarWhereInput!
  data: CategoriesUpdateManyMutationInput!
}

input SeasonsUpdateManyWithoutCreatedByUserNestedInput {
  create: [SeasonsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [SeasonsUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: SeasonsCreateManyCreatedByUserInputEnvelope
  set: [SeasonsWhereUniqueInput!]
  disconnect: [SeasonsWhereUniqueInput!]
  delete: [SeasonsWhereUniqueInput!]
  connect: [SeasonsWhereUniqueInput!]
  update: [SeasonsUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [SeasonsUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [SeasonsScalarWhereInput!]
}

input SeasonsUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: SeasonsWhereUniqueInput!
  update: SeasonsUpdateWithoutCreatedByUserInput!
  create: SeasonsCreateWithoutCreatedByUserInput!
}

input SeasonsUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutSeasonsNestedInput
  recipes: RecipeUpdateManyWithoutSeasonsNestedInput
  meals: MealUpdateManyWithoutSeasonsNestedInput
}

input SeasonsUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: SeasonsWhereUniqueInput!
  data: SeasonsUpdateWithoutCreatedByUserInput!
}

input SeasonsUpdateManyWithWhereWithoutCreatedByUserInput {
  where: SeasonsScalarWhereInput!
  data: SeasonsUpdateManyMutationInput!
}

input SeasonsUpdateManyWithoutUpdatedByUserNestedInput {
  create: [SeasonsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [SeasonsCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [SeasonsUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: SeasonsCreateManyUpdatedByUserInputEnvelope
  set: [SeasonsWhereUniqueInput!]
  disconnect: [SeasonsWhereUniqueInput!]
  delete: [SeasonsWhereUniqueInput!]
  connect: [SeasonsWhereUniqueInput!]
  update: [SeasonsUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [SeasonsUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [SeasonsScalarWhereInput!]
}

input SeasonsUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: SeasonsWhereUniqueInput!
  update: SeasonsUpdateWithoutUpdatedByUserInput!
  create: SeasonsCreateWithoutUpdatedByUserInput!
}

input SeasonsUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutSeasonsNestedInput
  recipes: RecipeUpdateManyWithoutSeasonsNestedInput
  meals: MealUpdateManyWithoutSeasonsNestedInput
}

input SeasonsUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: SeasonsWhereUniqueInput!
  data: SeasonsUpdateWithoutUpdatedByUserInput!
}

input SeasonsUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: SeasonsScalarWhereInput!
  data: SeasonsUpdateManyMutationInput!
}

input FoodFormsUpdateManyWithoutCreatedByUserNestedInput {
  create: [FoodFormsCreateWithoutCreatedByUserInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [FoodFormsUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: FoodFormsCreateManyCreatedByUserInputEnvelope
  set: [FoodFormsWhereUniqueInput!]
  disconnect: [FoodFormsWhereUniqueInput!]
  delete: [FoodFormsWhereUniqueInput!]
  connect: [FoodFormsWhereUniqueInput!]
  update: [FoodFormsUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [FoodFormsUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [FoodFormsScalarWhereInput!]
}

input FoodFormsUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  update: FoodFormsUpdateWithoutCreatedByUserInput!
  create: FoodFormsCreateWithoutCreatedByUserInput!
}

input FoodFormsUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutFoodFormsNestedInput
  recipes: RecipeUpdateManyWithoutFoodFormsNestedInput
  meals: MealUpdateManyWithoutFoodFormsNestedInput
}

input FoodFormsUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  data: FoodFormsUpdateWithoutCreatedByUserInput!
}

input FoodFormsUpdateManyWithWhereWithoutCreatedByUserInput {
  where: FoodFormsScalarWhereInput!
  data: FoodFormsUpdateManyMutationInput!
}

input FoodFormsUpdateManyWithoutUpdatedByUserNestedInput {
  create: [FoodFormsCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [FoodFormsCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [FoodFormsUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: FoodFormsCreateManyUpdatedByUserInputEnvelope
  set: [FoodFormsWhereUniqueInput!]
  disconnect: [FoodFormsWhereUniqueInput!]
  delete: [FoodFormsWhereUniqueInput!]
  connect: [FoodFormsWhereUniqueInput!]
  update: [FoodFormsUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [FoodFormsUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [FoodFormsScalarWhereInput!]
}

input FoodFormsUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  update: FoodFormsUpdateWithoutUpdatedByUserInput!
  create: FoodFormsCreateWithoutUpdatedByUserInput!
}

input FoodFormsUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutFoodFormsNestedInput
  recipes: RecipeUpdateManyWithoutFoodFormsNestedInput
  meals: MealUpdateManyWithoutFoodFormsNestedInput
}

input FoodFormsUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: FoodFormsWhereUniqueInput!
  data: FoodFormsUpdateWithoutUpdatedByUserInput!
}

input FoodFormsUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: FoodFormsScalarWhereInput!
  data: FoodFormsUpdateManyMutationInput!
}

input KitchensUpdateManyWithoutCreatedByUserNestedInput {
  create: [KitchensCreateWithoutCreatedByUserInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [KitchensUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: KitchensCreateManyCreatedByUserInputEnvelope
  set: [KitchensWhereUniqueInput!]
  disconnect: [KitchensWhereUniqueInput!]
  delete: [KitchensWhereUniqueInput!]
  connect: [KitchensWhereUniqueInput!]
  update: [KitchensUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [KitchensUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [KitchensScalarWhereInput!]
}

input KitchensUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: KitchensWhereUniqueInput!
  update: KitchensUpdateWithoutCreatedByUserInput!
  create: KitchensCreateWithoutCreatedByUserInput!
}

input KitchensUpdateWithoutCreatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutKitchensNestedInput
  recipes: RecipeUpdateManyWithoutKitchensNestedInput
}

input KitchensUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: KitchensWhereUniqueInput!
  data: KitchensUpdateWithoutCreatedByUserInput!
}

input KitchensUpdateManyWithWhereWithoutCreatedByUserInput {
  where: KitchensScalarWhereInput!
  data: KitchensUpdateManyMutationInput!
}

input KitchensUpdateManyWithoutUpdatedByUserNestedInput {
  create: [KitchensCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [KitchensCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [KitchensUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: KitchensCreateManyUpdatedByUserInputEnvelope
  set: [KitchensWhereUniqueInput!]
  disconnect: [KitchensWhereUniqueInput!]
  delete: [KitchensWhereUniqueInput!]
  connect: [KitchensWhereUniqueInput!]
  update: [KitchensUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [KitchensUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [KitchensScalarWhereInput!]
}

input KitchensUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: KitchensWhereUniqueInput!
  update: KitchensUpdateWithoutUpdatedByUserInput!
  create: KitchensCreateWithoutUpdatedByUserInput!
}

input KitchensUpdateWithoutUpdatedByUserInput {
  name: StringFieldUpdateOperationsInput
  ingredients: IngredientUpdateManyWithoutKitchensNestedInput
  recipes: RecipeUpdateManyWithoutKitchensNestedInput
}

input KitchensUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: KitchensWhereUniqueInput!
  data: KitchensUpdateWithoutUpdatedByUserInput!
}

input KitchensUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: KitchensScalarWhereInput!
  data: KitchensUpdateManyMutationInput!
}

input UserMealLocationUpdateManyWithoutCreatedByUserNestedInput {
  create: [UserMealLocationCreateWithoutCreatedByUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutCreatedByUserInput!]
  upsert: [UserMealLocationUpsertWithWhereUniqueWithoutCreatedByUserInput!]
  createMany: UserMealLocationCreateManyCreatedByUserInputEnvelope
  set: [UserMealLocationWhereUniqueInput!]
  disconnect: [UserMealLocationWhereUniqueInput!]
  delete: [UserMealLocationWhereUniqueInput!]
  connect: [UserMealLocationWhereUniqueInput!]
  update: [UserMealLocationUpdateWithWhereUniqueWithoutCreatedByUserInput!]
  updateMany: [UserMealLocationUpdateManyWithWhereWithoutCreatedByUserInput!]
  deleteMany: [UserMealLocationScalarWhereInput!]
}

input UserMealLocationUpsertWithWhereUniqueWithoutCreatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  update: UserMealLocationUpdateWithoutCreatedByUserInput!
  create: UserMealLocationCreateWithoutCreatedByUserInput!
}

input UserMealLocationUpdateWithoutCreatedByUserInput {
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  name: EnumMealLocationFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealLocationNestedInput
}

input EnumMealLocationFieldUpdateOperationsInput {
  set: MealLocation
}

input UserUpdateOneRequiredWithoutUserMealLocationNestedInput {
  create: UserCreateWithoutUserMealLocationInput
  connectOrCreate: UserCreateOrConnectWithoutUserMealLocationInput
  upsert: UserUpsertWithoutUserMealLocationInput
  connect: UserWhereUniqueInput
  update: UserUpdateToOneWithWhereWithoutUserMealLocationInput
}

input UserUpsertWithoutUserMealLocationInput {
  update: UserUpdateWithoutUserMealLocationInput!
  create: UserCreateWithoutUserMealLocationInput!
  where: UserWhereInput
}

input UserUpdateWithoutUserMealLocationInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutUsersNestedInput
  createdToken: TokenUpdateManyWithoutCreatedByUserNestedInput
  updatedToken: TokenUpdateManyWithoutUpdatedByUserNestedInput
  createdUser: UserUpdateManyWithoutCreatedByUserNestedInput
  updatedUser: UserUpdateManyWithoutUpdatedByUserNestedInput
  createdUserRoles: UserRoleUpdateManyWithoutCreatedByUserNestedInput
  updatedUserRoles: UserRoleUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMeals: UserMealUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMeals: UserMealUpdateManyWithoutUpdatedByUserNestedInput
  createdSettings: SettingsUpdateManyWithoutCreatedByUserNestedInput
  updatedSettings: SettingsUpdateManyWithoutUpdatedByUserNestedInput
  createdIngredients: IngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedIngredients: IngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipes: RecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipes: RecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdRecipeIngredients: RecipeIngredientUpdateManyWithoutCreatedByUserNestedInput
  updatedRecipeIngredients: RecipeIngredientUpdateManyWithoutUpdatedByUserNestedInput
  createdMeals: MealUpdateManyWithoutCreatedByUserNestedInput
  updatedMeals: MealUpdateManyWithoutUpdatedByUserNestedInput
  createdMealRecipes: MealRecipeUpdateManyWithoutCreatedByUserNestedInput
  updatedMealRecipes: MealRecipeUpdateManyWithoutUpdatedByUserNestedInput
  createdWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutCreatedByUserNestedInput
  updatedWeeklyMealGroups: WeeklyMealGroupUpdateManyWithoutUpdatedByUserNestedInput
  createdMealBoardPlans: MealBoardPlanUpdateManyWithoutCreatedByUserNestedInput
  updatedMealBoardPlans: MealBoardPlanUpdateManyWithoutUpdatedByUserNestedInput
  createdAllergens: AllergensUpdateManyWithoutCreatedByUserNestedInput
  updatedAllergens: AllergensUpdateManyWithoutUpdatedByUserNestedInput
  createdAdditives: AdditivesUpdateManyWithoutCreatedByUserNestedInput
  updatedAdditives: AdditivesUpdateManyWithoutUpdatedByUserNestedInput
  createdProperties: PropertiesUpdateManyWithoutCreatedByUserNestedInput
  updatedProperties: PropertiesUpdateManyWithoutUpdatedByUserNestedInput
  createdCategories: CategoriesUpdateManyWithoutCreatedByUserNestedInput
  updatedCategories: CategoriesUpdateManyWithoutUpdatedByUserNestedInput
  createdSeasons: SeasonsUpdateManyWithoutCreatedByUserNestedInput
  updatedSeasons: SeasonsUpdateManyWithoutUpdatedByUserNestedInput
  createdFoodForms: FoodFormsUpdateManyWithoutCreatedByUserNestedInput
  updatedFoodForms: FoodFormsUpdateManyWithoutUpdatedByUserNestedInput
  createdKitchens: KitchensUpdateManyWithoutCreatedByUserNestedInput
  updatedKitchens: KitchensUpdateManyWithoutUpdatedByUserNestedInput
  createdUserMealLocations: UserMealLocationUpdateManyWithoutCreatedByUserNestedInput
  updatedUserMealLocations: UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput
  userRole: UserRoleUpdateManyWithoutUserNestedInput
  userMeal: UserMealUpdateManyWithoutUserNestedInput
}

input UserMealLocationUpdateManyWithoutUpdatedByUserNestedInput {
  create: [UserMealLocationCreateWithoutUpdatedByUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutUpdatedByUserInput!]
  upsert: [UserMealLocationUpsertWithWhereUniqueWithoutUpdatedByUserInput!]
  createMany: UserMealLocationCreateManyUpdatedByUserInputEnvelope
  set: [UserMealLocationWhereUniqueInput!]
  disconnect: [UserMealLocationWhereUniqueInput!]
  delete: [UserMealLocationWhereUniqueInput!]
  connect: [UserMealLocationWhereUniqueInput!]
  update: [UserMealLocationUpdateWithWhereUniqueWithoutUpdatedByUserInput!]
  updateMany: [UserMealLocationUpdateManyWithWhereWithoutUpdatedByUserInput!]
  deleteMany: [UserMealLocationScalarWhereInput!]
}

input UserMealLocationUpsertWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  update: UserMealLocationUpdateWithoutUpdatedByUserInput!
  create: UserMealLocationCreateWithoutUpdatedByUserInput!
}

input UserMealLocationUpdateWithoutUpdatedByUserInput {
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  name: EnumMealLocationFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealLocationNestedInput
}

input UserMealLocationUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  data: UserMealLocationUpdateWithoutUpdatedByUserInput!
}

input UserMealLocationUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: UserMealLocationScalarWhereInput!
  data: UserMealLocationUpdateManyMutationInput!
}

input UserMealLocationScalarWhereInput {
  AND: [UserMealLocationScalarWhereInput!]
  OR: [UserMealLocationScalarWhereInput!]
  NOT: [UserMealLocationScalarWhereInput!]
  id: IntFilter
  userId: IntFilter
  timeOfDay: EnumTimeOfDayFilter
  name: EnumMealLocationFilter
}

input UserMealLocationUpdateManyMutationInput {
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  name: EnumMealLocationFieldUpdateOperationsInput
}

input UserRoleUpdateManyWithoutUserNestedInput {
  create: [UserRoleCreateWithoutUserInput!]
  connectOrCreate: [UserRoleCreateOrConnectWithoutUserInput!]
  upsert: [UserRoleUpsertWithWhereUniqueWithoutUserInput!]
  createMany: UserRoleCreateManyUserInputEnvelope
  set: [UserRoleWhereUniqueInput!]
  disconnect: [UserRoleWhereUniqueInput!]
  delete: [UserRoleWhereUniqueInput!]
  connect: [UserRoleWhereUniqueInput!]
  update: [UserRoleUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserRoleUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [UserRoleScalarWhereInput!]
}

input UserRoleUpsertWithWhereUniqueWithoutUserInput {
  where: UserRoleWhereUniqueInput!
  update: UserRoleUpdateWithoutUserInput!
  create: UserRoleCreateWithoutUserInput!
}

input UserRoleUpdateWithoutUserInput {
  name: EnumUserRoleNameFieldUpdateOperationsInput
}

input UserRoleUpdateWithWhereUniqueWithoutUserInput {
  where: UserRoleWhereUniqueInput!
  data: UserRoleUpdateWithoutUserInput!
}

input UserRoleUpdateManyWithWhereWithoutUserInput {
  where: UserRoleScalarWhereInput!
  data: UserRoleUpdateManyMutationInput!
}

input UserMealUpdateManyWithoutUserNestedInput {
  create: [UserMealCreateWithoutUserInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutUserInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutUserInput!]
  createMany: UserMealCreateManyUserInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input UserMealUpsertWithWhereUniqueWithoutUserInput {
  where: UserMealWhereUniqueInput!
  update: UserMealUpdateWithoutUserInput!
  create: UserMealCreateWithoutUserInput!
}

input UserMealUpdateWithoutUserInput {
  date: DateTimeFieldUpdateOperationsInput
  meal: MealUpdateOneRequiredWithoutUserMealNestedInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutUserMealNestedInput
  weeklyMealGroup: WeeklyMealGroupUpdateOneRequiredWithoutUserMealNestedInput
}

input UserMealUpdateWithWhereUniqueWithoutUserInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutUserInput!
}

input UserMealUpdateManyWithWhereWithoutUserInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutUserMealLocationInput {
  where: UserWhereInput
  data: UserUpdateWithoutUserMealLocationInput!
}

input UserMealLocationUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: UserMealLocationWhereUniqueInput!
  data: UserMealLocationUpdateWithoutCreatedByUserInput!
}

input UserMealLocationUpdateManyWithWhereWithoutCreatedByUserInput {
  where: UserMealLocationScalarWhereInput!
  data: UserMealLocationUpdateManyMutationInput!
}

input UserMealLocationUpdateManyWithoutUserNestedInput {
  create: [UserMealLocationCreateWithoutUserInput!]
  connectOrCreate: [UserMealLocationCreateOrConnectWithoutUserInput!]
  upsert: [UserMealLocationUpsertWithWhereUniqueWithoutUserInput!]
  createMany: UserMealLocationCreateManyUserInputEnvelope
  set: [UserMealLocationWhereUniqueInput!]
  disconnect: [UserMealLocationWhereUniqueInput!]
  delete: [UserMealLocationWhereUniqueInput!]
  connect: [UserMealLocationWhereUniqueInput!]
  update: [UserMealLocationUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserMealLocationUpdateManyWithWhereWithoutUserInput!]
  deleteMany: [UserMealLocationScalarWhereInput!]
}

input UserMealLocationUpsertWithWhereUniqueWithoutUserInput {
  where: UserMealLocationWhereUniqueInput!
  update: UserMealLocationUpdateWithoutUserInput!
  create: UserMealLocationCreateWithoutUserInput!
}

input UserMealLocationUpdateWithoutUserInput {
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  name: EnumMealLocationFieldUpdateOperationsInput
}

input UserMealLocationUpdateWithWhereUniqueWithoutUserInput {
  where: UserMealLocationWhereUniqueInput!
  data: UserMealLocationUpdateWithoutUserInput!
}

input UserMealLocationUpdateManyWithWhereWithoutUserInput {
  where: UserMealLocationScalarWhereInput!
  data: UserMealLocationUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutUserMealInput {
  where: UserWhereInput
  data: UserUpdateWithoutUserMealInput!
}

input UserMealUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: UserMealWhereUniqueInput!
  data: UserMealUpdateWithoutCreatedByUserInput!
}

input UserMealUpdateManyWithWhereWithoutCreatedByUserInput {
  where: UserMealScalarWhereInput!
  data: UserMealUpdateManyMutationInput!
}

input UserUpdateToOneWithWhereWithoutUserRoleInput {
  where: UserWhereInput
  data: UserUpdateWithoutUserRoleInput!
}

input UserRoleUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: UserRoleWhereUniqueInput!
  data: UserRoleUpdateWithoutCreatedByUserInput!
}

input UserRoleUpdateManyWithWhereWithoutCreatedByUserInput {
  where: UserRoleScalarWhereInput!
  data: UserRoleUpdateManyMutationInput!
}

input UserUpdateWithWhereUniqueWithoutUpdatedByUserInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutUpdatedByUserInput!
}

input UserUpdateManyWithWhereWithoutUpdatedByUserInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyMutationInput!
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  id: IntFilter
  image: StringNullableFilter
  username: StringFilter
  email: StringFilter
  lastOnline: DateTimeFilter
  status: BoolFilter
}

input UserUpdateManyMutationInput {
  image: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  lastOnline: DateTimeFieldUpdateOperationsInput
  status: BoolFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutCreatedByUserInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutCreatedByUserInput!
}

input UserUpdateManyWithWhereWithoutCreatedByUserInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyMutationInput!
}

input UserUpdateWithWhereUniqueWithoutAllergensInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutAllergensInput!
}

input UserUpdateManyWithWhereWithoutAllergensInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyMutationInput!
}

input AllergensUpdateWithWhereUniqueWithoutMealsInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutMealsInput!
}

input AllergensUpdateManyWithWhereWithoutMealsInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutAdditivesInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutAdditivesInput!
}

input MealUpdateManyWithWhereWithoutAdditivesInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input AdditivesUpdateWithWhereUniqueWithoutRecipesInput {
  where: AdditivesWhereUniqueInput!
  data: AdditivesUpdateWithoutRecipesInput!
}

input AdditivesUpdateManyWithWhereWithoutRecipesInput {
  where: AdditivesScalarWhereInput!
  data: AdditivesUpdateManyMutationInput!
}

input RecipeUpdateWithWhereUniqueWithoutAllergensInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutAllergensInput!
}

input RecipeUpdateManyWithWhereWithoutAllergensInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input AllergensUpdateWithWhereUniqueWithoutIngredientsInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutIngredientsInput!
}

input AllergensUpdateManyWithWhereWithoutIngredientsInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input IngredientUpdateWithWhereUniqueWithoutAdditivesInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutAdditivesInput!
}

input IngredientUpdateManyWithWhereWithoutAdditivesInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input AdditivesUpdateWithWhereUniqueWithoutMealsInput {
  where: AdditivesWhereUniqueInput!
  data: AdditivesUpdateWithoutMealsInput!
}

input AdditivesUpdateManyWithWhereWithoutMealsInput {
  where: AdditivesScalarWhereInput!
  data: AdditivesUpdateManyMutationInput!
}

input MealUpdateWithWhereUniqueWithoutAllergensInput {
  where: MealWhereUniqueInput!
  data: MealUpdateWithoutAllergensInput!
}

input MealUpdateManyWithWhereWithoutAllergensInput {
  where: MealScalarWhereInput!
  data: MealUpdateManyMutationInput!
}

input AllergensUpdateWithWhereUniqueWithoutRecipesInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutRecipesInput!
}

input AllergensUpdateManyWithWhereWithoutRecipesInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input RecipeUpdateWithWhereUniqueWithoutAdditivesInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutAdditivesInput!
}

input RecipeUpdateManyWithWhereWithoutAdditivesInput {
  where: RecipeScalarWhereInput!
  data: RecipeUpdateManyMutationInput!
}

input AdditivesUpdateWithWhereUniqueWithoutIngredientsInput {
  where: AdditivesWhereUniqueInput!
  data: AdditivesUpdateWithoutIngredientsInput!
}

input AdditivesUpdateManyWithWhereWithoutIngredientsInput {
  where: AdditivesScalarWhereInput!
  data: AdditivesUpdateManyMutationInput!
}

input IngredientUpdateWithWhereUniqueWithoutAllergensInput {
  where: IngredientWhereUniqueInput!
  data: IngredientUpdateWithoutAllergensInput!
}

input IngredientUpdateManyWithWhereWithoutAllergensInput {
  where: IngredientScalarWhereInput!
  data: IngredientUpdateManyMutationInput!
}

input AllergensUpdateWithWhereUniqueWithoutUsersInput {
  where: AllergensWhereUniqueInput!
  data: AllergensUpdateWithoutUsersInput!
}

input AllergensUpdateManyWithWhereWithoutUsersInput {
  where: AllergensScalarWhereInput!
  data: AllergensUpdateManyMutationInput!
}

input UserMealUncheckedCreateInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input UserMealCreateManyInput {
  id: Int
  date: DateTime!
  mealBoardPlanId: Int!
  userId: Int!
  mealId: Int!
  weeklyMealGroupId: Int!
}

input UserMealLocationUpdateInput {
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  name: EnumMealLocationFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutUserMealLocationNestedInput
}

input UserMealLocationCreateInput {
  timeOfDay: TimeOfDay
  name: MealLocation
  user: UserCreateNestedOneWithoutUserMealLocationInput!
}

input UserMealLocationUncheckedCreateInput {
  id: Int
  userId: Int!
  timeOfDay: TimeOfDay
  name: MealLocation
}

input UserMealLocationCreateManyInput {
  id: Int
  userId: Int!
  timeOfDay: TimeOfDay
  name: MealLocation
}

input IngredientCreateInput {
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
  allergens: AllergensCreateNestedManyWithoutIngredientsInput
  additives: AdditivesCreateNestedManyWithoutIngredientsInput
  properties: PropertiesCreateNestedManyWithoutIngredientsInput
  categories: CategoriesCreateNestedManyWithoutIngredientsInput
  seasons: SeasonsCreateNestedManyWithoutIngredientsInput
  foodForms: FoodFormsCreateNestedManyWithoutIngredientsInput
  kitchens: KitchensCreateNestedManyWithoutIngredientsInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutIngredientInput
}

input IngredientCreateManyInput {
  id: Int
  name: String!
  blsIdentifier: String!
  energyKcal: Decimal
  energyKj: Decimal
  breadUnits: Decimal
  carbohydrates: Decimal
  sugars: Decimal
  salt: Decimal
  fats: Decimal
  saturatedFats: Decimal
  unsaturatedFats: Decimal
  protein: Decimal
}

input IngredientUpdateInput {
  name: StringFieldUpdateOperationsInput
  blsIdentifier: StringFieldUpdateOperationsInput
  energyKcal: DecimalFieldUpdateOperationsInput
  energyKj: DecimalFieldUpdateOperationsInput
  breadUnits: DecimalFieldUpdateOperationsInput
  carbohydrates: DecimalFieldUpdateOperationsInput
  sugars: DecimalFieldUpdateOperationsInput
  salt: DecimalFieldUpdateOperationsInput
  fats: DecimalFieldUpdateOperationsInput
  saturatedFats: DecimalFieldUpdateOperationsInput
  unsaturatedFats: DecimalFieldUpdateOperationsInput
  protein: DecimalFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutIngredientsNestedInput
  additives: AdditivesUpdateManyWithoutIngredientsNestedInput
  properties: PropertiesUpdateManyWithoutIngredientsNestedInput
  categories: CategoriesUpdateManyWithoutIngredientsNestedInput
  seasons: SeasonsUpdateManyWithoutIngredientsNestedInput
  foodForms: FoodFormsUpdateManyWithoutIngredientsNestedInput
  kitchens: KitchensUpdateManyWithoutIngredientsNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutIngredientNestedInput
}

input MealBoardPlanCreateInput {
  name: String!
  color: String
  WeeklyMealGroup: WeeklyMealGroupCreateNestedManyWithoutMealBoardPlanInput
  UserMeal: UserMealCreateNestedManyWithoutMealBoardPlanInput
}

input MealBoardPlanCreateManyInput {
  id: Int
  name: String!
  color: String
}

input MealBoardPlanUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  WeeklyMealGroup: WeeklyMealGroupUncheckedUpdateManyWithoutMealBoardPlanNestedInput
  UserMeal: UserMealUncheckedUpdateManyWithoutMealBoardPlanNestedInput
}

input WeeklyMealGroupUncheckedUpdateManyWithoutMealBoardPlanNestedInput {
  create: [WeeklyMealGroupCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [WeeklyMealGroupCreateOrConnectWithoutMealBoardPlanInput!]
  upsert: [WeeklyMealGroupUpsertWithWhereUniqueWithoutMealBoardPlanInput!]
  createMany: WeeklyMealGroupCreateManyMealBoardPlanInputEnvelope
  set: [WeeklyMealGroupWhereUniqueInput!]
  disconnect: [WeeklyMealGroupWhereUniqueInput!]
  delete: [WeeklyMealGroupWhereUniqueInput!]
  connect: [WeeklyMealGroupWhereUniqueInput!]
  update: [WeeklyMealGroupUpdateWithWhereUniqueWithoutMealBoardPlanInput!]
  updateMany: [WeeklyMealGroupUpdateManyWithWhereWithoutMealBoardPlanInput!]
  deleteMany: [WeeklyMealGroupScalarWhereInput!]
}

input UserMealUncheckedUpdateManyWithoutMealBoardPlanNestedInput {
  create: [UserMealCreateWithoutMealBoardPlanInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutMealBoardPlanInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutMealBoardPlanInput!]
  createMany: UserMealCreateManyMealBoardPlanInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutMealBoardPlanInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutMealBoardPlanInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input MealBoardPlanUpdateInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  WeeklyMealGroup: WeeklyMealGroupUpdateManyWithoutMealBoardPlanNestedInput
  UserMeal: UserMealUpdateManyWithoutMealBoardPlanNestedInput
}

"""The `File` scalar type represents a file upload."""
scalar File

input MealCreateInput {
  name: String!
  description: String
  image: String
  allergens: AllergensCreateNestedManyWithoutMealsInput
  additives: AdditivesCreateNestedManyWithoutMealsInput
  properties: PropertiesCreateNestedManyWithoutMealsInput
  categories: CategoriesCreateNestedManyWithoutMealsInput
  seasons: SeasonsCreateNestedManyWithoutMealsInput
  foodForms: FoodFormsCreateNestedManyWithoutMealsInput
  mondayMealGroups: WeeklyMealGroupCreateNestedManyWithoutMondayMealInput
  tuesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutTuesdayMealInput
  wednesdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutWednesdayMealInput
  thursdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutThursdayMealInput
  fridayMealGroups: WeeklyMealGroupCreateNestedManyWithoutFridayMealInput
  saturdayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSaturdayMealInput
  sundayMealGroups: WeeklyMealGroupCreateNestedManyWithoutSundayMealInput
  mealRecipe: MealRecipeCreateNestedManyWithoutMealInput
  userMeal: UserMealCreateNestedManyWithoutMealInput
}

input MealCreateManyInput {
  id: Int
  name: String!
  description: String
  image: String
}

input MealUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutMealsNestedInput
  additives: AdditivesUpdateManyWithoutMealsNestedInput
  properties: PropertiesUpdateManyWithoutMealsNestedInput
  categories: CategoriesUpdateManyWithoutMealsNestedInput
  seasons: SeasonsUpdateManyWithoutMealsNestedInput
  foodForms: FoodFormsUpdateManyWithoutMealsNestedInput
  mondayMealGroups: WeeklyMealGroupUpdateManyWithoutMondayMealNestedInput
  tuesdayMealGroups: WeeklyMealGroupUpdateManyWithoutTuesdayMealNestedInput
  wednesdayMealGroups: WeeklyMealGroupUpdateManyWithoutWednesdayMealNestedInput
  thursdayMealGroups: WeeklyMealGroupUpdateManyWithoutThursdayMealNestedInput
  fridayMealGroups: WeeklyMealGroupUpdateManyWithoutFridayMealNestedInput
  saturdayMealGroups: WeeklyMealGroupUpdateManyWithoutSaturdayMealNestedInput
  sundayMealGroups: WeeklyMealGroupUpdateManyWithoutSundayMealNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutMealNestedInput
  userMeal: UserMealUpdateManyWithoutMealNestedInput
}

input SwitchWeeklyMealGroupInput {
  activeMealId: Int!
  activeDay: String!
  activeGroupId: Int!
  overMealId: Int
  overDay: String!
  overGroupId: Int!
}

input WeeklyMealGroupUncheckedCreateInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
  userMeal: UserMealUncheckedCreateNestedManyWithoutWeeklyMealGroupInput
}

input UserMealUncheckedCreateNestedManyWithoutWeeklyMealGroupInput {
  create: [UserMealCreateWithoutWeeklyMealGroupInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutWeeklyMealGroupInput!]
  createMany: UserMealCreateManyWeeklyMealGroupInputEnvelope
  connect: [UserMealWhereUniqueInput!]
}

input WeeklyMealGroupCreateManyInput {
  id: Int
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlanId: Int!
  mondayMealId: Int
  tuesdayMealId: Int
  wednesdayMealId: Int
  thursdayMealId: Int
  fridayMealId: Int
  saturdayMealId: Int
  sundayMealId: Int
}

input WeeklyMealGroupUncheckedUpdateInput {
  id: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlanId: IntFieldUpdateOperationsInput
  mondayMealId: NullableIntFieldUpdateOperationsInput
  tuesdayMealId: NullableIntFieldUpdateOperationsInput
  wednesdayMealId: NullableIntFieldUpdateOperationsInput
  thursdayMealId: NullableIntFieldUpdateOperationsInput
  fridayMealId: NullableIntFieldUpdateOperationsInput
  saturdayMealId: NullableIntFieldUpdateOperationsInput
  sundayMealId: NullableIntFieldUpdateOperationsInput
  userMeal: UserMealUncheckedUpdateManyWithoutWeeklyMealGroupNestedInput
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
  increment: Int
  decrement: Int
  multiply: Int
  divide: Int
}

input UserMealUncheckedUpdateManyWithoutWeeklyMealGroupNestedInput {
  create: [UserMealCreateWithoutWeeklyMealGroupInput!]
  connectOrCreate: [UserMealCreateOrConnectWithoutWeeklyMealGroupInput!]
  upsert: [UserMealUpsertWithWhereUniqueWithoutWeeklyMealGroupInput!]
  createMany: UserMealCreateManyWeeklyMealGroupInputEnvelope
  set: [UserMealWhereUniqueInput!]
  disconnect: [UserMealWhereUniqueInput!]
  delete: [UserMealWhereUniqueInput!]
  connect: [UserMealWhereUniqueInput!]
  update: [UserMealUpdateWithWhereUniqueWithoutWeeklyMealGroupInput!]
  updateMany: [UserMealUpdateManyWithWhereWithoutWeeklyMealGroupInput!]
  deleteMany: [UserMealScalarWhereInput!]
}

input WeeklyMealGroupCreateInput {
  name: String!
  color: String
  description: String
  timeOfDay: TimeOfDay
  year: Int!
  weekOfYear: Int!
  orderIndex: Int!
  mealBoardPlan: MealBoardPlanCreateNestedOneWithoutWeeklyMealGroupInput!
  mondayMeal: MealCreateNestedOneWithoutMondayMealGroupsInput
  tuesdayMeal: MealCreateNestedOneWithoutTuesdayMealGroupsInput
  wednesdayMeal: MealCreateNestedOneWithoutWednesdayMealGroupsInput
  thursdayMeal: MealCreateNestedOneWithoutThursdayMealGroupsInput
  fridayMeal: MealCreateNestedOneWithoutFridayMealGroupsInput
  saturdayMeal: MealCreateNestedOneWithoutSaturdayMealGroupsInput
  sundayMeal: MealCreateNestedOneWithoutSundayMealGroupsInput
  userMeal: UserMealCreateNestedManyWithoutWeeklyMealGroupInput
}

input WeeklyMealGroupUpdateInput {
  name: StringFieldUpdateOperationsInput
  color: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  timeOfDay: EnumTimeOfDayFieldUpdateOperationsInput
  year: IntFieldUpdateOperationsInput
  weekOfYear: IntFieldUpdateOperationsInput
  orderIndex: IntFieldUpdateOperationsInput
  mealBoardPlan: MealBoardPlanUpdateOneRequiredWithoutWeeklyMealGroupNestedInput
  mondayMeal: MealUpdateOneWithoutMondayMealGroupsNestedInput
  tuesdayMeal: MealUpdateOneWithoutTuesdayMealGroupsNestedInput
  wednesdayMeal: MealUpdateOneWithoutWednesdayMealGroupsNestedInput
  thursdayMeal: MealUpdateOneWithoutThursdayMealGroupsNestedInput
  fridayMeal: MealUpdateOneWithoutFridayMealGroupsNestedInput
  saturdayMeal: MealUpdateOneWithoutSaturdayMealGroupsNestedInput
  sundayMeal: MealUpdateOneWithoutSundayMealGroupsNestedInput
  userMeal: UserMealUpdateManyWithoutWeeklyMealGroupNestedInput
}

input SettingsCreateInput {
  maxEditOrderDays: Int!
}

input SettingsCreateManyInput {
  id: Int
  maxEditOrderDays: Int!
}

input SettingsUpdateInput {
  maxEditOrderDays: IntFieldUpdateOperationsInput
}

input RecipeCreateInput {
  name: String!
  description: String
  allergens: AllergensCreateNestedManyWithoutRecipesInput
  additives: AdditivesCreateNestedManyWithoutRecipesInput
  properties: PropertiesCreateNestedManyWithoutRecipesInput
  categories: CategoriesCreateNestedManyWithoutRecipesInput
  seasons: SeasonsCreateNestedManyWithoutRecipesInput
  foodForms: FoodFormsCreateNestedManyWithoutRecipesInput
  kitchens: KitchensCreateNestedManyWithoutRecipesInput
  recipeIngredient: RecipeIngredientCreateNestedManyWithoutRecipeInput
  mealRecipe: MealRecipeCreateNestedManyWithoutRecipeInput
}

input RecipeCreateManyInput {
  id: Int
  name: String!
  description: String
}

input RecipeUpdateInput {
  name: StringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  allergens: AllergensUpdateManyWithoutRecipesNestedInput
  additives: AdditivesUpdateManyWithoutRecipesNestedInput
  properties: PropertiesUpdateManyWithoutRecipesNestedInput
  categories: CategoriesUpdateManyWithoutRecipesNestedInput
  seasons: SeasonsUpdateManyWithoutRecipesNestedInput
  foodForms: FoodFormsUpdateManyWithoutRecipesNestedInput
  kitchens: KitchensUpdateManyWithoutRecipesNestedInput
  recipeIngredient: RecipeIngredientUpdateManyWithoutRecipeNestedInput
  mealRecipe: MealRecipeUpdateManyWithoutRecipeNestedInput
}